//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Sport.Data.AdvancedServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdvancedServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AdvancedService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReportUnhandledErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenConnectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToSecurityLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlterSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteAlterSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGradesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDifferentSeasonChargesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChargesChampionshipsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AdvancedService() {
            this.Url = global::Sport.Data.Properties.Settings.Default.Sport_Data_AdvancedServices_AdvancedService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReportUnhandledErrorCompletedEventHandler ReportUnhandledErrorCompleted;
        
        /// <remarks/>
        public event GetOpenConnectionsCompletedEventHandler GetOpenConnectionsCompleted;
        
        /// <remarks/>
        public event AddToSecurityLogCompletedEventHandler AddToSecurityLogCompleted;
        
        /// <remarks/>
        public event GetAlterSQLCompletedEventHandler GetAlterSQLCompleted;
        
        /// <remarks/>
        public event ExecuteAlterSQLCompletedEventHandler ExecuteAlterSQLCompleted;
        
        /// <remarks/>
        public event GetGradesInfoCompletedEventHandler GetGradesInfoCompleted;
        
        /// <remarks/>
        public event GetDifferentSeasonChargesCompletedEventHandler GetDifferentSeasonChargesCompleted;
        
        /// <remarks/>
        public event GetChargesChampionshipsCompletedEventHandler GetChargesChampionshipsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReportUnhandledError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReportUnhandledError(string strExceptionDescription, string strStackTrace, int userID, System.DateTime time, string strAppPath) {
            this.Invoke("ReportUnhandledError", new object[] {
                        strExceptionDescription,
                        strStackTrace,
                        userID,
                        time,
                        strAppPath});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReportUnhandledError(string strExceptionDescription, string strStackTrace, int userID, System.DateTime time, string strAppPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReportUnhandledError", new object[] {
                        strExceptionDescription,
                        strStackTrace,
                        userID,
                        time,
                        strAppPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndReportUnhandledError(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ReportUnhandledErrorAsync(string strExceptionDescription, string strStackTrace, int userID, System.DateTime time, string strAppPath) {
            this.ReportUnhandledErrorAsync(strExceptionDescription, strStackTrace, userID, time, strAppPath, null);
        }
        
        /// <remarks/>
        public void ReportUnhandledErrorAsync(string strExceptionDescription, string strStackTrace, int userID, System.DateTime time, string strAppPath, object userState) {
            if ((this.ReportUnhandledErrorOperationCompleted == null)) {
                this.ReportUnhandledErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportUnhandledErrorOperationCompleted);
            }
            this.InvokeAsync("ReportUnhandledError", new object[] {
                        strExceptionDescription,
                        strStackTrace,
                        userID,
                        time,
                        strAppPath}, this.ReportUnhandledErrorOperationCompleted, userState);
        }
        
        private void OnReportUnhandledErrorOperationCompleted(object arg) {
            if ((this.ReportUnhandledErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportUnhandledErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpenConnections", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOpenConnections() {
            object[] results = this.Invoke("GetOpenConnections", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOpenConnections(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOpenConnections", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetOpenConnections(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenConnectionsAsync() {
            this.GetOpenConnectionsAsync(null);
        }
        
        /// <remarks/>
        public void GetOpenConnectionsAsync(object userState) {
            if ((this.GetOpenConnectionsOperationCompleted == null)) {
                this.GetOpenConnectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenConnectionsOperationCompleted);
            }
            this.InvokeAsync("GetOpenConnections", new object[0], this.GetOpenConnectionsOperationCompleted, userState);
        }
        
        private void OnGetOpenConnectionsOperationCompleted(object arg) {
            if ((this.GetOpenConnectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenConnectionsCompleted(this, new GetOpenConnectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddToSecurityLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddToSecurityLog(string message) {
            object[] results = this.Invoke("AddToSecurityLog", new object[] {
                        message});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddToSecurityLog(string message, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddToSecurityLog", new object[] {
                        message}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAddToSecurityLog(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddToSecurityLogAsync(string message) {
            this.AddToSecurityLogAsync(message, null);
        }
        
        /// <remarks/>
        public void AddToSecurityLogAsync(string message, object userState) {
            if ((this.AddToSecurityLogOperationCompleted == null)) {
                this.AddToSecurityLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToSecurityLogOperationCompleted);
            }
            this.InvokeAsync("AddToSecurityLog", new object[] {
                        message}, this.AddToSecurityLogOperationCompleted, userState);
        }
        
        private void OnAddToSecurityLogOperationCompleted(object arg) {
            if ((this.AddToSecurityLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToSecurityLogCompleted(this, new AddToSecurityLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlterSQL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAlterSQL() {
            object[] results = this.Invoke("GetAlterSQL", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAlterSQL(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAlterSQL", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetAlterSQL(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAlterSQLAsync() {
            this.GetAlterSQLAsync(null);
        }
        
        /// <remarks/>
        public void GetAlterSQLAsync(object userState) {
            if ((this.GetAlterSQLOperationCompleted == null)) {
                this.GetAlterSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlterSQLOperationCompleted);
            }
            this.InvokeAsync("GetAlterSQL", new object[0], this.GetAlterSQLOperationCompleted, userState);
        }
        
        private void OnGetAlterSQLOperationCompleted(object arg) {
            if ((this.GetAlterSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlterSQLCompleted(this, new GetAlterSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteAlterSQL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteAlterSQL(int index) {
            this.Invoke("ExecuteAlterSQL", new object[] {
                        index});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecuteAlterSQL(int index, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExecuteAlterSQL", new object[] {
                        index}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndExecuteAlterSQL(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ExecuteAlterSQLAsync(int index) {
            this.ExecuteAlterSQLAsync(index, null);
        }
        
        /// <remarks/>
        public void ExecuteAlterSQLAsync(int index, object userState) {
            if ((this.ExecuteAlterSQLOperationCompleted == null)) {
                this.ExecuteAlterSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteAlterSQLOperationCompleted);
            }
            this.InvokeAsync("ExecuteAlterSQL", new object[] {
                        index}, this.ExecuteAlterSQLOperationCompleted, userState);
        }
        
        private void OnExecuteAlterSQLOperationCompleted(object arg) {
            if ((this.ExecuteAlterSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteAlterSQLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGradesInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public GradeData[] GetGradesInfo() {
            object[] results = this.Invoke("GetGradesInfo", new object[0]);
            return ((GradeData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGradesInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGradesInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public GradeData[] EndGetGradesInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GradeData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGradesInfoAsync() {
            this.GetGradesInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetGradesInfoAsync(object userState) {
            if ((this.GetGradesInfoOperationCompleted == null)) {
                this.GetGradesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGradesInfoOperationCompleted);
            }
            this.InvokeAsync("GetGradesInfo", new object[0], this.GetGradesInfoOperationCompleted, userState);
        }
        
        private void OnGetGradesInfoOperationCompleted(object arg) {
            if ((this.GetGradesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGradesInfoCompleted(this, new GetGradesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDifferentSeasonCharges", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetDifferentSeasonCharges(int[] charges, int season) {
            object[] results = this.Invoke("GetDifferentSeasonCharges", new object[] {
                        charges,
                        season});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDifferentSeasonCharges(int[] charges, int season, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDifferentSeasonCharges", new object[] {
                        charges,
                        season}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndGetDifferentSeasonCharges(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDifferentSeasonChargesAsync(int[] charges, int season) {
            this.GetDifferentSeasonChargesAsync(charges, season, null);
        }
        
        /// <remarks/>
        public void GetDifferentSeasonChargesAsync(int[] charges, int season, object userState) {
            if ((this.GetDifferentSeasonChargesOperationCompleted == null)) {
                this.GetDifferentSeasonChargesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDifferentSeasonChargesOperationCompleted);
            }
            this.InvokeAsync("GetDifferentSeasonCharges", new object[] {
                        charges,
                        season}, this.GetDifferentSeasonChargesOperationCompleted, userState);
        }
        
        private void OnGetDifferentSeasonChargesOperationCompleted(object arg) {
            if ((this.GetDifferentSeasonChargesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDifferentSeasonChargesCompleted(this, new GetDifferentSeasonChargesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChargesChampionships", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetChargesChampionships(int[] charges, int season) {
            object[] results = this.Invoke("GetChargesChampionships", new object[] {
                        charges,
                        season});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChargesChampionships(int[] charges, int season, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChargesChampionships", new object[] {
                        charges,
                        season}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndGetChargesChampionships(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChargesChampionshipsAsync(int[] charges, int season) {
            this.GetChargesChampionshipsAsync(charges, season, null);
        }
        
        /// <remarks/>
        public void GetChargesChampionshipsAsync(int[] charges, int season, object userState) {
            if ((this.GetChargesChampionshipsOperationCompleted == null)) {
                this.GetChargesChampionshipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChargesChampionshipsOperationCompleted);
            }
            this.InvokeAsync("GetChargesChampionships", new object[] {
                        charges,
                        season}, this.GetChargesChampionshipsOperationCompleted, userState);
        }
        
        private void OnGetChargesChampionshipsOperationCompleted(object arg) {
            if ((this.GetChargesChampionshipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChargesChampionshipsCompleted(this, new GetChargesChampionshipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GradeData {
        
        private int gradeField;
        
        private int studentsCountField;
        
        /// <remarks/>
        public int grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
        
        /// <remarks/>
        public int studentsCount {
            get {
                return this.studentsCountField;
            }
            set {
                this.studentsCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReportUnhandledErrorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetOpenConnectionsCompletedEventHandler(object sender, GetOpenConnectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenConnectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenConnectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddToSecurityLogCompletedEventHandler(object sender, AddToSecurityLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToSecurityLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToSecurityLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAlterSQLCompletedEventHandler(object sender, GetAlterSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlterSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlterSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ExecuteAlterSQLCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetGradesInfoCompletedEventHandler(object sender, GetGradesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGradesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGradesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GradeData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GradeData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDifferentSeasonChargesCompletedEventHandler(object sender, GetDifferentSeasonChargesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDifferentSeasonChargesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDifferentSeasonChargesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetChargesChampionshipsCompletedEventHandler(object sender, GetChargesChampionshipsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChargesChampionshipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChargesChampionshipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591