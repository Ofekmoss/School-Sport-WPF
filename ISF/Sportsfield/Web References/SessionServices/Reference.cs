//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace Sportsfield.SessionServices {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SessionServiceSoap", Namespace="http://tempuri.org/")]
    public class SessionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public SessionService() {
            this.Url = "http://localhost/ISF/SportServices/SessionService.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserData Login(string username, string password, int season) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password,
                        season});
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(string username, string password, int season, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        username,
                        password,
                        season}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserData EndLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserAction(Action action, string description, System.Double version) {
            object[] results = this.Invoke("AddUserAction", new object[] {
                        action,
                        description,
                        version});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddUserAction(Action action, string description, System.Double version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddUserAction", new object[] {
                        action,
                        description,
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddUserAction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserAction_2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserAction_2(int userid, Action action, string description, System.Double version) {
            object[] results = this.Invoke("AddUserAction_2", new object[] {
                        userid,
                        action,
                        description,
                        version});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddUserAction_2(int userid, Action action, string description, System.Double version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddUserAction_2", new object[] {
                        userid,
                        action,
                        description,
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddUserAction_2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KeepAlive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool KeepAlive() {
            object[] results = this.Invoke("KeepAlive", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginKeepAlive(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("KeepAlive", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndKeepAlive(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerifyUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserData VerifyUser(string username, string password) {
            object[] results = this.Invoke("VerifyUser", new object[] {
                        username,
                        password});
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginVerifyUser(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("VerifyUser", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserData EndVerifyUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserData GetUserData(string username) {
            object[] results = this.Invoke("GetUserData", new object[] {
                        username});
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserData(string username, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserData", new object[] {
                        username}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserData EndGetUserData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserPassword(string username, string askerLogin, string askerPassword) {
            object[] results = this.Invoke("GetUserPassword", new object[] {
                        username,
                        askerLogin,
                        askerPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserPassword(string username, string askerLogin, string askerPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserPassword", new object[] {
                        username,
                        askerLogin,
                        askerPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetUserPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeUserPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeUserPassword(string username, string oldPassword, string newPassword) {
            this.Invoke("ChangeUserPassword", new object[] {
                        username,
                        oldPassword,
                        newPassword});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeUserPassword(string username, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeUserPassword", new object[] {
                        username,
                        oldPassword,
                        newPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndChangeUserPassword(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VersionInfo GetLatestVersion() {
            object[] results = this.Invoke("GetLatestVersion", new object[0]);
            return ((VersionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public VersionInfo EndGetLatestVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VersionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestFieldVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VersionInfo GetLatestFieldVersion() {
            object[] results = this.Invoke("GetLatestFieldVersion", new object[0]);
            return ((VersionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestFieldVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestFieldVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public VersionInfo EndGetLatestFieldVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VersionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentSeason", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SeasonData GetCurrentSeason() {
            object[] results = this.Invoke("GetCurrentSeason", new object[0]);
            return ((SeasonData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCurrentSeason(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCurrentSeason", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public SeasonData EndGetCurrentSeason(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SeasonData)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStudentPicture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] GetStudentPicture(string Id_Number) {
            object[] results = this.Invoke("GetStudentPicture", new object[] {
                        Id_Number});
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStudentPicture(string Id_Number, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStudentPicture", new object[] {
                        Id_Number}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndGetStudentPicture(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Byte[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class UserData {
        
        /// <remarks/>
        public int Id;
        
        /// <remarks/>
        public string Username;
        
        /// <remarks/>
        public string UserFullName;
        
        /// <remarks/>
        public int UserType;
        
        /// <remarks/>
        public int UserPermissions;
        
        /// <remarks/>
        public int UserRegion;
        
        /// <remarks/>
        public int UserSchool;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class SeasonData {
        
        /// <remarks/>
        public int Season;
        
        /// <remarks/>
        public string Name;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class VersionInfo {
        
        /// <remarks/>
        public System.Double VersionNumber;
        
        /// <remarks/>
        public string VersionName;
        
        /// <remarks/>
        public string VersionDetails;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum Action {
        
        /// <remarks/>
        Login_Client,
        
        /// <remarks/>
        Login_Website,
        
        /// <remarks/>
        Login_Field,
        
        /// <remarks/>
        TableView_Opened,
        
        /// <remarks/>
        Update_Downloaded,
        
        /// <remarks/>
        Register_Page_Load,
        
        /// <remarks/>
        Field_Export,
        
        /// <remarks/>
        Field_Import,
    }
}
