//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Sport.Producer.SportServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProducerServiceSoap", Namespace="http://www.mir.co.il/")]
    public partial class ProducerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetGameBoardOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetGameBoardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhasePatternOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPhasePatternOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProducerService() {
            this.Url = global::Sport.Producer.Properties.Settings.Default.Sport_Producer_SportServices_ProducerService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetGameBoardCompletedEventHandler GetGameBoardCompleted;
        
        /// <remarks/>
        public event SetGameBoardCompletedEventHandler SetGameBoardCompleted;
        
        /// <remarks/>
        public event GetPhasePatternCompletedEventHandler GetPhasePatternCompleted;
        
        /// <remarks/>
        public event SetPhasePatternCompletedEventHandler SetPhasePatternCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/GetGameBoard", RequestNamespace="http://www.mir.co.il/", ResponseNamespace="http://www.mir.co.il/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGameBoard(int gameBoardId) {
            object[] results = this.Invoke("GetGameBoard", new object[] {
                        gameBoardId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGameBoard(int gameBoardId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGameBoard", new object[] {
                        gameBoardId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetGameBoard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGameBoardAsync(int gameBoardId) {
            this.GetGameBoardAsync(gameBoardId, null);
        }
        
        /// <remarks/>
        public void GetGameBoardAsync(int gameBoardId, object userState) {
            if ((this.GetGameBoardOperationCompleted == null)) {
                this.GetGameBoardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGameBoardOperationCompleted);
            }
            this.InvokeAsync("GetGameBoard", new object[] {
                        gameBoardId}, this.GetGameBoardOperationCompleted, userState);
        }
        
        private void OnGetGameBoardOperationCompleted(object arg) {
            if ((this.GetGameBoardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGameBoardCompleted(this, new GetGameBoardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/SetGameBoard", RequestNamespace="http://www.mir.co.il/", ResponseNamespace="http://www.mir.co.il/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetGameBoard(int gameBoardId, string range, string data) {
            object[] results = this.Invoke("SetGameBoard", new object[] {
                        gameBoardId,
                        range,
                        data});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetGameBoard(int gameBoardId, string range, string data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetGameBoard", new object[] {
                        gameBoardId,
                        range,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetGameBoard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetGameBoardAsync(int gameBoardId, string range, string data) {
            this.SetGameBoardAsync(gameBoardId, range, data, null);
        }
        
        /// <remarks/>
        public void SetGameBoardAsync(int gameBoardId, string range, string data, object userState) {
            if ((this.SetGameBoardOperationCompleted == null)) {
                this.SetGameBoardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGameBoardOperationCompleted);
            }
            this.InvokeAsync("SetGameBoard", new object[] {
                        gameBoardId,
                        range,
                        data}, this.SetGameBoardOperationCompleted, userState);
        }
        
        private void OnSetGameBoardOperationCompleted(object arg) {
            if ((this.SetGameBoardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetGameBoardCompleted(this, new SetGameBoardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/GetPhasePattern", RequestNamespace="http://www.mir.co.il/", ResponseNamespace="http://www.mir.co.il/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPhasePattern(int phasePatternId) {
            object[] results = this.Invoke("GetPhasePattern", new object[] {
                        phasePatternId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPhasePattern(int phasePatternId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPhasePattern", new object[] {
                        phasePatternId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetPhasePattern(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhasePatternAsync(int phasePatternId) {
            this.GetPhasePatternAsync(phasePatternId, null);
        }
        
        /// <remarks/>
        public void GetPhasePatternAsync(int phasePatternId, object userState) {
            if ((this.GetPhasePatternOperationCompleted == null)) {
                this.GetPhasePatternOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhasePatternOperationCompleted);
            }
            this.InvokeAsync("GetPhasePattern", new object[] {
                        phasePatternId}, this.GetPhasePatternOperationCompleted, userState);
        }
        
        private void OnGetPhasePatternOperationCompleted(object arg) {
            if ((this.GetPhasePatternCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhasePatternCompleted(this, new GetPhasePatternCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/SetPhasePattern", RequestNamespace="http://www.mir.co.il/", ResponseNamespace="http://www.mir.co.il/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetPhasePattern(int phasePatternId, string range, string data) {
            object[] results = this.Invoke("SetPhasePattern", new object[] {
                        phasePatternId,
                        range,
                        data});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPhasePattern(int phasePatternId, string range, string data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPhasePattern", new object[] {
                        phasePatternId,
                        range,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetPhasePattern(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetPhasePatternAsync(int phasePatternId, string range, string data) {
            this.SetPhasePatternAsync(phasePatternId, range, data, null);
        }
        
        /// <remarks/>
        public void SetPhasePatternAsync(int phasePatternId, string range, string data, object userState) {
            if ((this.SetPhasePatternOperationCompleted == null)) {
                this.SetPhasePatternOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPhasePatternOperationCompleted);
            }
            this.InvokeAsync("SetPhasePattern", new object[] {
                        phasePatternId,
                        range,
                        data}, this.SetPhasePatternOperationCompleted, userState);
        }
        
        private void OnSetPhasePatternOperationCompleted(object arg) {
            if ((this.SetPhasePatternCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPhasePatternCompleted(this, new SetPhasePatternCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetGameBoardCompletedEventHandler(object sender, GetGameBoardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGameBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGameBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetGameBoardCompletedEventHandler(object sender, SetGameBoardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetGameBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetGameBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPhasePatternCompletedEventHandler(object sender, GetPhasePatternCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhasePatternCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhasePatternCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetPhasePatternCompletedEventHandler(object sender, SetPhasePatternCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPhasePatternCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPhasePatternCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591