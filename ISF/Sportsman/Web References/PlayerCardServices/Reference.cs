//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Sportsman.PlayerCardServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PlayerCardServiceSoap", Namespace="http://www.mir.co.il/PlayerCard")]
    public partial class PlayerCardService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IssuePlayerCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CardIssueDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePlayerCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIssueDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveIssueDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PlayerCardService() {
            this.Url = global::Sportsman.Properties.Settings.Default.Sportsman_PlayerCardServices_PlayerCardService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IssuePlayerCardsCompletedEventHandler IssuePlayerCardsCompleted;
        
        /// <remarks/>
        public event CardIssueDateCompletedEventHandler CardIssueDateCompleted;
        
        /// <remarks/>
        public event RemovePlayerCardCompletedEventHandler RemovePlayerCardCompleted;
        
        /// <remarks/>
        public event UpdateIssueDateCompletedEventHandler UpdateIssueDateCompleted;
        
        /// <remarks/>
        public event RemoveIssueDateCompletedEventHandler RemoveIssueDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/PlayerCard/IssuePlayerCards", RequestNamespace="http://www.mir.co.il/PlayerCard", ResponseNamespace="http://www.mir.co.il/PlayerCard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IssuePlayerCards(int[] students, int sportID) {
            object[] results = this.Invoke("IssuePlayerCards", new object[] {
                        students,
                        sportID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIssuePlayerCards(int[] students, int sportID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IssuePlayerCards", new object[] {
                        students,
                        sportID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndIssuePlayerCards(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IssuePlayerCardsAsync(int[] students, int sportID) {
            this.IssuePlayerCardsAsync(students, sportID, null);
        }
        
        /// <remarks/>
        public void IssuePlayerCardsAsync(int[] students, int sportID, object userState) {
            if ((this.IssuePlayerCardsOperationCompleted == null)) {
                this.IssuePlayerCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIssuePlayerCardsOperationCompleted);
            }
            this.InvokeAsync("IssuePlayerCards", new object[] {
                        students,
                        sportID}, this.IssuePlayerCardsOperationCompleted, userState);
        }
        
        private void OnIssuePlayerCardsOperationCompleted(object arg) {
            if ((this.IssuePlayerCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IssuePlayerCardsCompleted(this, new IssuePlayerCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/PlayerCard/CardIssueDate", RequestNamespace="http://www.mir.co.il/PlayerCard", ResponseNamespace="http://www.mir.co.il/PlayerCard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime CardIssueDate(int studentID, int sportID) {
            object[] results = this.Invoke("CardIssueDate", new object[] {
                        studentID,
                        sportID});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCardIssueDate(int studentID, int sportID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CardIssueDate", new object[] {
                        studentID,
                        sportID}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.DateTime EndCardIssueDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void CardIssueDateAsync(int studentID, int sportID) {
            this.CardIssueDateAsync(studentID, sportID, null);
        }
        
        /// <remarks/>
        public void CardIssueDateAsync(int studentID, int sportID, object userState) {
            if ((this.CardIssueDateOperationCompleted == null)) {
                this.CardIssueDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCardIssueDateOperationCompleted);
            }
            this.InvokeAsync("CardIssueDate", new object[] {
                        studentID,
                        sportID}, this.CardIssueDateOperationCompleted, userState);
        }
        
        private void OnCardIssueDateOperationCompleted(object arg) {
            if ((this.CardIssueDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CardIssueDateCompleted(this, new CardIssueDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/PlayerCard/RemovePlayerCard", RequestNamespace="http://www.mir.co.il/PlayerCard", ResponseNamespace="http://www.mir.co.il/PlayerCard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemovePlayerCard(int studentID, int sportID) {
            object[] results = this.Invoke("RemovePlayerCard", new object[] {
                        studentID,
                        sportID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemovePlayerCard(int studentID, int sportID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemovePlayerCard", new object[] {
                        studentID,
                        sportID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRemovePlayerCard(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemovePlayerCardAsync(int studentID, int sportID) {
            this.RemovePlayerCardAsync(studentID, sportID, null);
        }
        
        /// <remarks/>
        public void RemovePlayerCardAsync(int studentID, int sportID, object userState) {
            if ((this.RemovePlayerCardOperationCompleted == null)) {
                this.RemovePlayerCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePlayerCardOperationCompleted);
            }
            this.InvokeAsync("RemovePlayerCard", new object[] {
                        studentID,
                        sportID}, this.RemovePlayerCardOperationCompleted, userState);
        }
        
        private void OnRemovePlayerCardOperationCompleted(object arg) {
            if ((this.RemovePlayerCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePlayerCardCompleted(this, new RemovePlayerCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/PlayerCard/UpdateIssueDate", RequestNamespace="http://www.mir.co.il/PlayerCard", ResponseNamespace="http://www.mir.co.il/PlayerCard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateIssueDate(int studentID, int sportID, System.DateTime date) {
            object[] results = this.Invoke("UpdateIssueDate", new object[] {
                        studentID,
                        sportID,
                        date});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateIssueDate(int studentID, int sportID, System.DateTime date, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateIssueDate", new object[] {
                        studentID,
                        sportID,
                        date}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateIssueDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIssueDateAsync(int studentID, int sportID, System.DateTime date) {
            this.UpdateIssueDateAsync(studentID, sportID, date, null);
        }
        
        /// <remarks/>
        public void UpdateIssueDateAsync(int studentID, int sportID, System.DateTime date, object userState) {
            if ((this.UpdateIssueDateOperationCompleted == null)) {
                this.UpdateIssueDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIssueDateOperationCompleted);
            }
            this.InvokeAsync("UpdateIssueDate", new object[] {
                        studentID,
                        sportID,
                        date}, this.UpdateIssueDateOperationCompleted, userState);
        }
        
        private void OnUpdateIssueDateOperationCompleted(object arg) {
            if ((this.UpdateIssueDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIssueDateCompleted(this, new UpdateIssueDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/PlayerCard/RemoveIssueDate", RequestNamespace="http://www.mir.co.il/PlayerCard", ResponseNamespace="http://www.mir.co.il/PlayerCard", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveIssueDate(int studentID, int sportID) {
            object[] results = this.Invoke("RemoveIssueDate", new object[] {
                        studentID,
                        sportID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveIssueDate(int studentID, int sportID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveIssueDate", new object[] {
                        studentID,
                        sportID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRemoveIssueDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveIssueDateAsync(int studentID, int sportID) {
            this.RemoveIssueDateAsync(studentID, sportID, null);
        }
        
        /// <remarks/>
        public void RemoveIssueDateAsync(int studentID, int sportID, object userState) {
            if ((this.RemoveIssueDateOperationCompleted == null)) {
                this.RemoveIssueDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveIssueDateOperationCompleted);
            }
            this.InvokeAsync("RemoveIssueDate", new object[] {
                        studentID,
                        sportID}, this.RemoveIssueDateOperationCompleted, userState);
        }
        
        private void OnRemoveIssueDateOperationCompleted(object arg) {
            if ((this.RemoveIssueDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveIssueDateCompleted(this, new RemoveIssueDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void IssuePlayerCardsCompletedEventHandler(object sender, IssuePlayerCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IssuePlayerCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IssuePlayerCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CardIssueDateCompletedEventHandler(object sender, CardIssueDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CardIssueDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CardIssueDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemovePlayerCardCompletedEventHandler(object sender, RemovePlayerCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemovePlayerCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemovePlayerCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateIssueDateCompletedEventHandler(object sender, UpdateIssueDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIssueDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIssueDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveIssueDateCompletedEventHandler(object sender, RemoveIssueDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveIssueDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveIssueDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591