//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Sportsman.SessionServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SessionServiceSoap", Namespace="http://tempuri.org/")]
    public partial class SessionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserAction_2OperationCompleted;
        
        private System.Threading.SendOrPostCallback KeepAliveOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestFieldVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeamChargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchoolTeamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchoolTeamsBySeasonOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SessionService() {
            this.Url = global::Sportsman.Properties.Settings.Default.Sportsman_SessionServices_SessionService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event AddUserActionCompletedEventHandler AddUserActionCompleted;
        
        /// <remarks/>
        public event AddUserAction_2CompletedEventHandler AddUserAction_2Completed;
        
        /// <remarks/>
        public event KeepAliveCompletedEventHandler KeepAliveCompleted;
        
        /// <remarks/>
        public event VerifyUserCompletedEventHandler VerifyUserCompleted;
        
        /// <remarks/>
        public event GetUserDataCompletedEventHandler GetUserDataCompleted;
        
        /// <remarks/>
        public event GetUserPasswordCompletedEventHandler GetUserPasswordCompleted;
        
        /// <remarks/>
        public event ChangeUserPasswordCompletedEventHandler ChangeUserPasswordCompleted;
        
        /// <remarks/>
        public event GetLatestVersionCompletedEventHandler GetLatestVersionCompleted;
        
        /// <remarks/>
        public event GetLatestFieldVersionCompletedEventHandler GetLatestFieldVersionCompleted;
        
        /// <remarks/>
        public event GetStudentPictureCompletedEventHandler GetStudentPictureCompleted;
        
        /// <remarks/>
        public event GetTeamChargeCompletedEventHandler GetTeamChargeCompleted;
        
        /// <remarks/>
        public event GetSchoolTeamsCompletedEventHandler GetSchoolTeamsCompleted;
        
        /// <remarks/>
        public event GetSchoolTeamsBySeasonCompletedEventHandler GetSchoolTeamsBySeasonCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserData Login(string username, string password, int season) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password,
                        season});
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(string username, string password, int season, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        username,
                        password,
                        season}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserData EndLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, int season) {
            this.LoginAsync(username, password, season, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, int season, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        password,
                        season}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserAction(Action action, string description, double version) {
            object[] results = this.Invoke("AddUserAction", new object[] {
                        action,
                        description,
                        version});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddUserAction(Action action, string description, double version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddUserAction", new object[] {
                        action,
                        description,
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddUserAction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserActionAsync(Action action, string description, double version) {
            this.AddUserActionAsync(action, description, version, null);
        }
        
        /// <remarks/>
        public void AddUserActionAsync(Action action, string description, double version, object userState) {
            if ((this.AddUserActionOperationCompleted == null)) {
                this.AddUserActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserActionOperationCompleted);
            }
            this.InvokeAsync("AddUserAction", new object[] {
                        action,
                        description,
                        version}, this.AddUserActionOperationCompleted, userState);
        }
        
        private void OnAddUserActionOperationCompleted(object arg) {
            if ((this.AddUserActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserActionCompleted(this, new AddUserActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserAction_2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserAction_2(int userid, Action action, string description, double version) {
            object[] results = this.Invoke("AddUserAction_2", new object[] {
                        userid,
                        action,
                        description,
                        version});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddUserAction_2(int userid, Action action, string description, double version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddUserAction_2", new object[] {
                        userid,
                        action,
                        description,
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddUserAction_2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAction_2Async(int userid, Action action, string description, double version) {
            this.AddUserAction_2Async(userid, action, description, version, null);
        }
        
        /// <remarks/>
        public void AddUserAction_2Async(int userid, Action action, string description, double version, object userState) {
            if ((this.AddUserAction_2OperationCompleted == null)) {
                this.AddUserAction_2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserAction_2OperationCompleted);
            }
            this.InvokeAsync("AddUserAction_2", new object[] {
                        userid,
                        action,
                        description,
                        version}, this.AddUserAction_2OperationCompleted, userState);
        }
        
        private void OnAddUserAction_2OperationCompleted(object arg) {
            if ((this.AddUserAction_2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserAction_2Completed(this, new AddUserAction_2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KeepAlive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool KeepAlive() {
            object[] results = this.Invoke("KeepAlive", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginKeepAlive(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("KeepAlive", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndKeepAlive(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void KeepAliveAsync() {
            this.KeepAliveAsync(null);
        }
        
        /// <remarks/>
        public void KeepAliveAsync(object userState) {
            if ((this.KeepAliveOperationCompleted == null)) {
                this.KeepAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeepAliveOperationCompleted);
            }
            this.InvokeAsync("KeepAlive", new object[0], this.KeepAliveOperationCompleted, userState);
        }
        
        private void OnKeepAliveOperationCompleted(object arg) {
            if ((this.KeepAliveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeepAliveCompleted(this, new KeepAliveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerifyUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserData VerifyUser(string username, string password) {
            object[] results = this.Invoke("VerifyUser", new object[] {
                        username,
                        password});
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginVerifyUser(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("VerifyUser", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserData EndVerifyUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyUserAsync(string username, string password) {
            this.VerifyUserAsync(username, password, null);
        }
        
        /// <remarks/>
        public void VerifyUserAsync(string username, string password, object userState) {
            if ((this.VerifyUserOperationCompleted == null)) {
                this.VerifyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyUserOperationCompleted);
            }
            this.InvokeAsync("VerifyUser", new object[] {
                        username,
                        password}, this.VerifyUserOperationCompleted, userState);
        }
        
        private void OnVerifyUserOperationCompleted(object arg) {
            if ((this.VerifyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyUserCompleted(this, new VerifyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserData GetUserData(string username) {
            object[] results = this.Invoke("GetUserData", new object[] {
                        username});
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserData(string username, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserData", new object[] {
                        username}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserData EndGetUserData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDataAsync(string username) {
            this.GetUserDataAsync(username, null);
        }
        
        /// <remarks/>
        public void GetUserDataAsync(string username, object userState) {
            if ((this.GetUserDataOperationCompleted == null)) {
                this.GetUserDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDataOperationCompleted);
            }
            this.InvokeAsync("GetUserData", new object[] {
                        username}, this.GetUserDataOperationCompleted, userState);
        }
        
        private void OnGetUserDataOperationCompleted(object arg) {
            if ((this.GetUserDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDataCompleted(this, new GetUserDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserPassword(string username, string askerLogin, string askerPassword) {
            object[] results = this.Invoke("GetUserPassword", new object[] {
                        username,
                        askerLogin,
                        askerPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserPassword(string username, string askerLogin, string askerPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserPassword", new object[] {
                        username,
                        askerLogin,
                        askerPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetUserPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPasswordAsync(string username, string askerLogin, string askerPassword) {
            this.GetUserPasswordAsync(username, askerLogin, askerPassword, null);
        }
        
        /// <remarks/>
        public void GetUserPasswordAsync(string username, string askerLogin, string askerPassword, object userState) {
            if ((this.GetUserPasswordOperationCompleted == null)) {
                this.GetUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPasswordOperationCompleted);
            }
            this.InvokeAsync("GetUserPassword", new object[] {
                        username,
                        askerLogin,
                        askerPassword}, this.GetUserPasswordOperationCompleted, userState);
        }
        
        private void OnGetUserPasswordOperationCompleted(object arg) {
            if ((this.GetUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPasswordCompleted(this, new GetUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeUserPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeUserPassword(string username, string oldPassword, string newPassword) {
            this.Invoke("ChangeUserPassword", new object[] {
                        username,
                        oldPassword,
                        newPassword});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeUserPassword(string username, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeUserPassword", new object[] {
                        username,
                        oldPassword,
                        newPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndChangeUserPassword(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(string username, string oldPassword, string newPassword) {
            this.ChangeUserPasswordAsync(username, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(string username, string oldPassword, string newPassword, object userState) {
            if ((this.ChangeUserPasswordOperationCompleted == null)) {
                this.ChangeUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPassword", new object[] {
                        username,
                        oldPassword,
                        newPassword}, this.ChangeUserPasswordOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VersionInfo GetLatestVersion() {
            object[] results = this.Invoke("GetLatestVersion", new object[0]);
            return ((VersionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public VersionInfo EndGetLatestVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VersionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestVersionAsync() {
            this.GetLatestVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestVersionAsync(object userState) {
            if ((this.GetLatestVersionOperationCompleted == null)) {
                this.GetLatestVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestVersionOperationCompleted);
            }
            this.InvokeAsync("GetLatestVersion", new object[0], this.GetLatestVersionOperationCompleted, userState);
        }
        
        private void OnGetLatestVersionOperationCompleted(object arg) {
            if ((this.GetLatestVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestVersionCompleted(this, new GetLatestVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestFieldVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VersionInfo GetLatestFieldVersion() {
            object[] results = this.Invoke("GetLatestFieldVersion", new object[0]);
            return ((VersionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestFieldVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestFieldVersion", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public VersionInfo EndGetLatestFieldVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((VersionInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestFieldVersionAsync() {
            this.GetLatestFieldVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestFieldVersionAsync(object userState) {
            if ((this.GetLatestFieldVersionOperationCompleted == null)) {
                this.GetLatestFieldVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestFieldVersionOperationCompleted);
            }
            this.InvokeAsync("GetLatestFieldVersion", new object[0], this.GetLatestFieldVersionOperationCompleted, userState);
        }
        
        private void OnGetLatestFieldVersionOperationCompleted(object arg) {
            if ((this.GetLatestFieldVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestFieldVersionCompleted(this, new GetLatestFieldVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStudentPicture", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetStudentPicture(string Id_Number) {
            object[] results = this.Invoke("GetStudentPicture", new object[] {
                        Id_Number});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStudentPicture(string Id_Number, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStudentPicture", new object[] {
                        Id_Number}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetStudentPicture(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentPictureAsync(string Id_Number) {
            this.GetStudentPictureAsync(Id_Number, null);
        }
        
        /// <remarks/>
        public void GetStudentPictureAsync(string Id_Number, object userState) {
            if ((this.GetStudentPictureOperationCompleted == null)) {
                this.GetStudentPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentPictureOperationCompleted);
            }
            this.InvokeAsync("GetStudentPicture", new object[] {
                        Id_Number}, this.GetStudentPictureOperationCompleted, userState);
        }
        
        private void OnGetStudentPictureOperationCompleted(object arg) {
            if ((this.GetStudentPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentPictureCompleted(this, new GetStudentPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTeamCharge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTeamCharge(int teamID) {
            object[] results = this.Invoke("GetTeamCharge", new object[] {
                        teamID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTeamCharge(int teamID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTeamCharge", new object[] {
                        teamID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetTeamCharge(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTeamChargeAsync(int teamID) {
            this.GetTeamChargeAsync(teamID, null);
        }
        
        /// <remarks/>
        public void GetTeamChargeAsync(int teamID, object userState) {
            if ((this.GetTeamChargeOperationCompleted == null)) {
                this.GetTeamChargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeamChargeOperationCompleted);
            }
            this.InvokeAsync("GetTeamCharge", new object[] {
                        teamID}, this.GetTeamChargeOperationCompleted, userState);
        }
        
        private void OnGetTeamChargeOperationCompleted(object arg) {
            if ((this.GetTeamChargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeamChargeCompleted(this, new GetTeamChargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSchoolTeams", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetSchoolTeams(int schoolID) {
            object[] results = this.Invoke("GetSchoolTeams", new object[] {
                        schoolID});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSchoolTeams(int schoolID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSchoolTeams", new object[] {
                        schoolID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndGetSchoolTeams(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSchoolTeamsAsync(int schoolID) {
            this.GetSchoolTeamsAsync(schoolID, null);
        }
        
        /// <remarks/>
        public void GetSchoolTeamsAsync(int schoolID, object userState) {
            if ((this.GetSchoolTeamsOperationCompleted == null)) {
                this.GetSchoolTeamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchoolTeamsOperationCompleted);
            }
            this.InvokeAsync("GetSchoolTeams", new object[] {
                        schoolID}, this.GetSchoolTeamsOperationCompleted, userState);
        }
        
        private void OnGetSchoolTeamsOperationCompleted(object arg) {
            if ((this.GetSchoolTeamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchoolTeamsCompleted(this, new GetSchoolTeamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSchoolTeamsBySeason", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TeamData[] GetSchoolTeamsBySeason(int school, int season) {
            object[] results = this.Invoke("GetSchoolTeamsBySeason", new object[] {
                        school,
                        season});
            return ((TeamData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSchoolTeamsBySeason(int school, int season, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSchoolTeamsBySeason", new object[] {
                        school,
                        season}, callback, asyncState);
        }
        
        /// <remarks/>
        public TeamData[] EndGetSchoolTeamsBySeason(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TeamData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSchoolTeamsBySeasonAsync(int school, int season) {
            this.GetSchoolTeamsBySeasonAsync(school, season, null);
        }
        
        /// <remarks/>
        public void GetSchoolTeamsBySeasonAsync(int school, int season, object userState) {
            if ((this.GetSchoolTeamsBySeasonOperationCompleted == null)) {
                this.GetSchoolTeamsBySeasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchoolTeamsBySeasonOperationCompleted);
            }
            this.InvokeAsync("GetSchoolTeamsBySeason", new object[] {
                        school,
                        season}, this.GetSchoolTeamsBySeasonOperationCompleted, userState);
        }
        
        private void OnGetSchoolTeamsBySeasonOperationCompleted(object arg) {
            if ((this.GetSchoolTeamsBySeasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchoolTeamsBySeasonCompleted(this, new GetSchoolTeamsBySeasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserData {
        
        private int idField;
        
        private string usernameField;
        
        private string userFullNameField;
        
        private int userTypeField;
        
        private int userPermissionsField;
        
        private int userRegionField;
        
        private int userSchoolField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string UserFullName {
            get {
                return this.userFullNameField;
            }
            set {
                this.userFullNameField = value;
            }
        }
        
        /// <remarks/>
        public int UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public int UserPermissions {
            get {
                return this.userPermissionsField;
            }
            set {
                this.userPermissionsField = value;
            }
        }
        
        /// <remarks/>
        public int UserRegion {
            get {
                return this.userRegionField;
            }
            set {
                this.userRegionField = value;
            }
        }
        
        /// <remarks/>
        public int UserSchool {
            get {
                return this.userSchoolField;
            }
            set {
                this.userSchoolField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SimpleData {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TeamData {
        
        private int teamIdField;
        
        private System.DateTime registrationDateField;
        
        private int statusField;
        
        private SimpleData championshipField;
        
        private SimpleData categoryField;
        
        private SimpleData sportField;
        
        /// <remarks/>
        public int TeamId {
            get {
                return this.teamIdField;
            }
            set {
                this.teamIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RegistrationDate {
            get {
                return this.registrationDateField;
            }
            set {
                this.registrationDateField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public SimpleData Championship {
            get {
                return this.championshipField;
            }
            set {
                this.championshipField = value;
            }
        }
        
        /// <remarks/>
        public SimpleData Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public SimpleData Sport {
            get {
                return this.sportField;
            }
            set {
                this.sportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class VersionInfo {
        
        private double versionNumberField;
        
        private string versionNameField;
        
        private string versionDetailsField;
        
        /// <remarks/>
        public double VersionNumber {
            get {
                return this.versionNumberField;
            }
            set {
                this.versionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string VersionName {
            get {
                return this.versionNameField;
            }
            set {
                this.versionNameField = value;
            }
        }
        
        /// <remarks/>
        public string VersionDetails {
            get {
                return this.versionDetailsField;
            }
            set {
                this.versionDetailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum Action {
        
        /// <remarks/>
        Login_Client,
        
        /// <remarks/>
        Login_Website,
        
        /// <remarks/>
        Login_Field,
        
        /// <remarks/>
        TableView_Opened,
        
        /// <remarks/>
        Update_Downloaded,
        
        /// <remarks/>
        Register_Page_Load,
        
        /// <remarks/>
        Field_Export,
        
        /// <remarks/>
        Field_Import,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserActionCompletedEventHandler(object sender, AddUserActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserAction_2CompletedEventHandler(object sender, AddUserAction_2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserAction_2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserAction_2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void KeepAliveCompletedEventHandler(object sender, KeepAliveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeepAliveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KeepAliveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VerifyUserCompletedEventHandler(object sender, VerifyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserDataCompletedEventHandler(object sender, GetUserDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserPasswordCompletedEventHandler(object sender, GetUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangeUserPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLatestVersionCompletedEventHandler(object sender, GetLatestVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VersionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VersionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLatestFieldVersionCompletedEventHandler(object sender, GetLatestFieldVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestFieldVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestFieldVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VersionInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VersionInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetStudentPictureCompletedEventHandler(object sender, GetStudentPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTeamChargeCompletedEventHandler(object sender, GetTeamChargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeamChargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeamChargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSchoolTeamsCompletedEventHandler(object sender, GetSchoolTeamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchoolTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchoolTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSchoolTeamsBySeasonCompletedEventHandler(object sender, GetSchoolTeamsBySeasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchoolTeamsBySeasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchoolTeamsBySeasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TeamData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TeamData[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591