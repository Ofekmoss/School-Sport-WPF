/*
CREATE TABLE test1
(field1 int)

DROP TRIGGER T_TEST1
GO

CREATE TRIGGER T_TEST1
ON TEST1
AFTER UPDATE AS
BEGIN
  DECLARE test_cursor CURSOR FOR
  SELECT DISTINCT del.FIELD1
  FROM deleted del, inserted ins
  WHERE del.FIELD1<>ins.FIELD1
  
  DECLARE @field1 int
  OPEN test_cursor
  
  FETCH NEXT FROM test_cursor
  INTO @field1
  
  WHILE @@FETCH_STATUS = 0
  BEGIN
    PRINT @field1
    FETCH NEXT FROM test_cursor
    INTO @field1
  END
  
  CLOSE test_cursor
  DEALLOCATE test_cursor
  PRINT 'done.'
END
GO
*/

/*
DECLARE price_cursor CURSOR FOR
SELECT DISTINCT c.CHARGE_ID, p.PRICE
FROM CHARGES c, PRODUCTS p
WHERE c.PRODUCT_ID=p.PRODUCT_ID
DECLARE @charge int
DECLARE @price float
OPEN price_cursor

FETCH NEXT FROM price_cursor
INTO @charge, @price
  
WHILE @@FETCH_STATUS = 0
BEGIN
   UPDATE CHARGES
   SET CHARGE_PRICE=@price
   WHERE CHARGE_ID=@charge
   
   FETCH NEXT FROM price_cursor
   INTO @charge, @price
END
  
CLOSE price_cursor
DEALLOCATE price_cursor
GO
*/

/*
CREATE TABLE TEST (field1 nvarchar(50), field2 datetime)
GO

INSERT INTO TEST (field1, field2)
VALUES ('hello', GETDATE())

INSERT INTO TEST (field1, field2)
VALUES ('hello'+' '+CAST(YEAR(GETDATE()) AS varchar(5)), GETDATE())
GO

SELECT * FROM TEST
GO
*/

/*
Selecting amount of schools in each city:
SELECT C.CITY_NAME,COUNT(s.SCHOOL_NAME) AS TOT
FROM SCHOOLS s, CITIES c
WHERE s.CITY_ID=c.CITY_ID
GROUP BY C.CITY_NAME
ORDER BY COUNT(s.SCHOOL_NAME) DESC
GO
*/

/*
---SELECT c.SEASON, c.CHAMPIONSHIP_NAME, r.REGION_NAME, r.ADDRESS, 
---s.SPORT_NAME, u.USER_FIRST_NAME, u.USER_LAST_NAME
---FROM ((CHAMPIONSHIPS c LEFT JOIN REGIONS r ON c.REGION_ID=r.REGION_ID) 
---LEFT JOIN SPORTS s ON c.SPORT_ID=s.SPORT_ID)
---LEFT JOIN USERS u ON c.CHAMPIONSHIP_SUPERVISOR=u.USER_ID
---GO

SELECT c.SEASON, c.CHAMPIONSHIP_NAME, c.REGION_ID,
r.REGION_NAME, r.ADDRESS, r.PHONE, r.FAX, s.SPORT_NAME,
s.SPORT_TYPE, c.SPORT_ID, c.IS_CLUBS,
c.CHAMPIONSHIP_STATUS, c.LAST_REGISTRATION_DATE, c.START_DATE,
c.END_DATE, c.ALT_START_DATE, c.ALT_END_DATE, c.FINALS_DATE,
c.ALT_FINALS_DATE, c.RULESET_ID, rs.RULESET_NAME, c.IS_OPEN,
c.CHAMPIONSHIP_SUPERVISOR, u.USER_FIRST_NAME, u.USER_LAST_NAME,
c.STANDARD_CHAMPIONSHIP_ID, sc.STANDARD_CHAMPIONSHIP_NAME,
rs.SPORT_ID AS RS_SPORT_ID, rs.REGION_ID AS RS_REGION_ID
FROM ((((CHAMPIONSHIPS c LEFT JOIN REGIONS r ON c.REGION_ID=r.REGION_ID) 
LEFT JOIN SPORTS s ON c.SPORT_ID=s.SPORT_ID)
LEFT JOIN RULESETS rs ON c.RULESET_ID=rs.RULESET_ID)
LEFT JOIN USERS u ON c.CHAMPIONSHIP_SUPERVISOR=u.USER_ID)
LEFT JOIN STANDARD_CHAMPIONSHIPS sc ON c.STANDARD_CHAMPIONSHIP_ID=sc.STANDARD_CHAMPIONSHIP_ID
WHERE c.CHAMPIONSHIP_ID=57 AND c.REGION_ID=5
GO
*/