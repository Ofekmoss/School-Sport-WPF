-- =============================================
-- PatternTables.sql
--		Creating pattern tables:
--			RULES
--			RULE_TYPES
--			RULESETS
--			PHASE_PATTERNS
--			GAME_BOARDS
-- =============================================

-- Deleting existing tables
-- ============================================
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'GAME_BOARDS' AND type = 'U')
	DROP TABLE GAME_BOARDS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'PHASE_PATTERNS' AND type = 'U')
	DROP TABLE PHASE_PATTERNS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'RULESETS' AND type = 'U')
	ALTER TABLE SPORTS DROP CONSTRAINT FK_SPORT_RULESET
	ALTER TABLE SPORTS DROP COLUMN RULESET_ID
	DROP TABLE RULESETS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'RULES' AND type = 'U')
	DROP TABLE RULES
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'RULE_TYPES' AND type = 'U')
	DROP TABLE RULE_TYPES
GO

-- Creating tables
-- ============================================

-- =======    GAME_BOARDS   ======
CREATE TABLE GAME_BOARDS (
GAME_BOARD_ID	int				IDENTITY (1,1),
GAME_BOARD_NAME	nvarchar(50)	NOT NULL,
RANGE			nvarchar(100),
DATA			ntext,
DATE_LAST_MODIFIED DATETIME,
DATE_DELETED datetime,
timestamp,
CONSTRAINT PK_GAME_BOARDS PRIMARY KEY(GAME_BOARD_ID),
CONSTRAINT UN_GAME_BOARD_NAME UNIQUE(GAME_BOARD_NAME, DATE_DELETED)
)
GO

-- =======    PHASE_PATTERNS   ======
CREATE TABLE PHASE_PATTERNS (
PHASE_PATTERN_ID	int				IDENTITY (1,1),
PHASE_PATTERN_NAME	nvarchar(50)	NOT NULL,
RANGE				nvarchar(100),
DATA				ntext,
DATE_LAST_MODIFIED DATETIME,
DATE_DELETED datetime,
timestamp,
CONSTRAINT PK_PHASE_PATTERNS PRIMARY KEY(PHASE_PATTERN_ID),
CONSTRAINT UN_PHASE_PATTERN_NAME UNIQUE(PHASE_PATTERN_NAME, DATE_DELETED)
)
GO

-- =======    RULESETS TABLE   ======
CREATE TABLE RULESETS (
RULESET_ID		int				IDENTITY (1,1),
RULESET_NAME	nvarchar(30)	NOT NULL,
SPORT_ID		int,
REGION_ID		int,
DATE_LAST_MODIFIED DATETIME,
DATE_DELETED datetime,
timestamp,
CONSTRAINT PK_RULESETS PRIMARY KEY(RULESET_ID),
CONSTRAINT UN_RULESET_NAME UNIQUE(RULESET_NAME, DATE_DELETED),
CONSTRAINT FK_RULESET_SPORT FOREIGN KEY(SPORT_ID)
	REFERENCES SPORTS(SPORT_ID),
CONSTRAINT FK_RULESET_REGION FOREIGN KEY(REGION_ID)
	REFERENCES REGIONS(REGION_ID),
)
GO

-- Adding columns to SPORTS table
ALTER TABLE SPORTS
ADD RULESET_ID		int,
CONSTRAINT FK_SPORT_RULESET FOREIGN KEY(RULESET_ID)
	REFERENCES RULESETS(RULESET_ID)
GO

-- =======    RULE_TYPES  ======
CREATE TABLE RULE_TYPES (
RULE_TYPE_ID	int,
CLASS			nvarchar(300)	NOT NULL,
DATE_LAST_MODIFIED DATETIME,
timestamp,
CONSTRAINT PK_RULE_TYPES PRIMARY KEY (RULE_TYPE_ID)
)
GO

-- =======    RULES TABLE   ======
CREATE TABLE RULES (
RULE_ID					int		IDENTITY (1,1),
RULESET_ID				int		NOT NULL,
RULE_TYPE_ID			int		NOT NULL,
VALUE					ntext,
SPORT_FIELD_TYPE_ID		int,
SPORT_FIELD_ID			int,
CATEGORY				int,
DATE_LAST_MODIFIED DATETIME,
DATE_DELETED datetime,
timestamp,
CONSTRAINT PK_RULES PRIMARY KEY(RULE_ID),
CONSTRAINT FK_RULE_RULESET FOREIGN KEY(RULESET_ID)
	REFERENCES RULESETS(RULESET_ID),
CONSTRAINT FK_RULE_RULETYPE FOREIGN KEY(RULE_TYPE_ID)
	REFERENCES RULE_TYPES(RULE_TYPE_ID),
CONSTRAINT FK_RULE_SPORTFIELDTYPE FOREIGN KEY(SPORT_FIELD_TYPE_ID)
	REFERENCES SPORT_FIELD_TYPES(SPORT_FIELD_TYPE_ID),
CONSTRAINT FK_RULE_SPORTFIELD FOREIGN KEY(SPORT_FIELD_TYPE_ID, SPORT_FIELD_ID)
	REFERENCES SPORT_FIELDS(SPORT_FIELD_TYPE_ID, SPORT_FIELD_ID)
)
GO


INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (1, 'Sport.Rulesets.Rules.PlayersAmountRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (2, 'Sport.Rulesets.Rules.GameScoreRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (3, 'Sport.Rulesets.Rules.RankFieldsRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (4, 'Sport.Rulesets.Rules.TeamRankingRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (5, 'Sport.Rulesets.Rules.TechnicalResultRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (7, 'Sport.Rulesets.Rules.ResultTypeRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (8, 'Sport.Rulesets.Rules.GameStructureRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (9, 'Sport.Rulesets.Rules.ScoreTableRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (10, 'Sport.Rulesets.Rules.CompetitorCompetitionsRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (11, 'Sport.Rulesets.Rules.CompetitionTeamCompetitorsRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (12, 'Sport.Rulesets.Rules.TeamScoreCountersRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (13, 'Sport.Rulesets.Rules.TeamScoreCounterRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (14, 'Sport.Rulesets.Rules.FunctionariesRule,Sport.Rulesets')
GO

INSERT INTO RULE_TYPES (RULE_TYPE_ID, CLASS)
VALUES (15, 'Sport.Rulesets.Rules.GeneralSportTypeDataRule,Sport.Rulesets')
GO
