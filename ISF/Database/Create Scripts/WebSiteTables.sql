-- Deleting existing tables
-- ============================================
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'ISF_FLASH_NEWS' AND type = 'U')
	DROP TABLE ISF_FLASH_NEWS
GO 
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'ISF_ARTICLES' AND type = 'U')
	DROP TABLE ISF_ARTICLES
GO 
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_HIT_LOG' AND type = 'U')
	DROP TABLE WEBSITE_HIT_LOG
GO 
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_VISITORS' AND type = 'U')
	DROP TABLE WEBSITE_VISITORS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_ATTACHMENTS' AND type = 'U')
	DROP TABLE WEBSITE_ATTACHMENTS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_PAGES' AND type = 'U')
	DROP TABLE WEBSITE_PAGES
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_POLLS' AND type = 'U')
	DROP TABLE WEBSITE_POLLS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_POLLS_POSSIBLE_ANSWERS' AND type = 'U')
	DROP TABLE WEBSITE_POLLS_POSSIBLE_ANSWERS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_POLLS_RESULTS' AND type = 'U')
	DROP TABLE WEBSITE_POLLS_RESULTS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_BANNERS' AND type = 'U')
	DROP TABLE WEBSITE_BANNERS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_EVENTS' AND type = 'U')
	DROP TABLE WEBSITE_EVENTS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'CHAMPIONSHIP_ATTACHMENTS' AND type = 'U')
	DROP TABLE CHAMPIONSHIP_ATTACHMENTS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'REGION_ARTICLES' AND type = 'U')
	DROP TABLE REGION_ARTICLES
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_IMAGE_GALLERY' AND type = 'U')
	DROP TABLE WEBSITE_IMAGE_GALLERY
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_ARTICLE_COMMENTS' AND type = 'U')
	DROP TABLE WEBSITE_ARTICLE_COMMENTS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_IMAGE_DESCRIPTIONS' AND type = 'U')
	DROP TABLE WEBSITE_IMAGE_DESCRIPTIONS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'WEBSITE_HIT_LOG_ARCHIVE' AND type = 'U')
	DROP TABLE WEBSITE_HIT_LOG_ARCHIVE
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'PENDING_COMPETITORS' AND type = 'U')
	DROP TABLE PENDING_COMPETITORS
GO
IF EXISTS(SELECT * FROM sysobjects WHERE name = 'PENDING_MATCH_SCORES' AND type = 'U')
	DROP TABLE PENDING_MATCH_SCORES
GO

-- =======    FLASH_NEWS TABLE   ======
CREATE TABLE ISF_FLASH_NEWS (
FLASH_NEWS_ID		int				IDENTITY(1, 1),
SUBMISSION_TIME		datetime		NOT NULL DEFAULT GETDATE(),
SUBMITTED_BY		int				NOT NULL,
NEWS_DESCRIPTION	nvarchar(1024)	NOT NULL,
FLASH_NEWS_LINKS	nvarchar(1024),
CONSTRAINT PK_FLASH_NEWS PRIMARY KEY(FLASH_NEWS_ID),
CONSTRAINT FK_FLASH_NEWS FOREIGN KEY (SUBMITTED_BY)
	REFERENCES USERS(USER_ID)
)
GO

-- =======    ISF_ARTICLES TABLE   ======
CREATE TABLE ISF_ARTICLES (
ARTICLE_ID			int				IDENTITY(1, 1),
SUBMISSION_TIME		datetime		NOT NULL DEFAULT GETDATE(),
SUBMITTED_BY		int				NOT NULL,
ARTICLE_DESCRIPTION	nvarchar(1024)	NOT NULL,
ARTICLE_FILE_NAME	nvarchar(100), --for text longer than 1024 characters.
ARTICLE_IMAGE_NAME	nvarchar(100), --comma seperated list of names.
ARTICLE_CAPTION		nvarchar(100),
ARTICLE_SUB_CAPTION nvarchar(255),
AUTHOR_NAME			nvarchar(50),
IS_PRIMARY_ARTICLE	int				NOT NULL DEFAULT 0,
IS_SUB_ARTICLE		int				NOT NULL DEFAULT 0,
ARTICLE_LINKS		nvarchar(1024),
ARTICLE_ATTACHMENTS	nvarchar(1024),
DATE_LAST_MODIFIED	DATETIME,
DATE_DELETED		datetime,
CONSTRAINT PK_ARTICLES PRIMARY KEY(ARTICLE_ID),
CONSTRAINT UN_ARTICLE_FILE UNIQUE(ARTICLE_ID, ARTICLE_FILE_NAME),
CONSTRAINT FK_ARTICLES FOREIGN KEY (SUBMITTED_BY)
	REFERENCES USERS(USER_ID)
)
GO

-- =======    WEBSITE_VISITORS TABLE   ======
CREATE TABLE WEBSITE_VISITORS (
VISITOR_ID		int				IDENTITY(1, 1),
IP_ADDRESS		nvarchar(15)	NOT NULL,
USER_AGENT		nvarchar(150),
CONSTRAINT PK_WEBSITE_VISITORS PRIMARY KEY(VISITOR_ID),
CONSTRAINT UN_VISITOR_IP_AGENT UNIQUE(IP_ADDRESS, USER_AGENT)
)
GO

-- =======    WEBSITE_HIT_LOG TABLE   ======
CREATE TABLE WEBSITE_HIT_LOG (
HIT_LOG_ID			int				IDENTITY(1, 1),
VISITOR_ID			int				NOT NULL,
PAGE_INDEX			int				NOT NULL,	--index in enum.
DATE_VISITED		datetime		NOT NULL DEFAULT GETDATE(),
QUERY_STRING_DATE	nvarchar(255),
FORM_DATA			nvarchar(255),
REFERER				nvarchar(255),
CONSTRAINT PK_WEBSITE_HIT_LOG PRIMARY KEY(HIT_LOG_ID),
CONSTRAINT FK_WEBSITE_VISITOR_HIT FOREIGN KEY (VISITOR_ID)
	REFERENCES WEBSITE_VISITORS(VISITOR_ID)
)
GO

-- =======    WEBSITE_ATTACHMENTS TABLE   ======
CREATE TABLE WEBSITE_ATTACHMENTS (
ATTACHMENT_ID		int				IDENTITY(1, 1),
ATT_FILE_NAME		nvarchar(100)	NOT NULL,
ATT_DESCRPTION		nvarchar(255),
SUBMIT_TIME			datetime		NOT NULL DEFAULT GETDATE(),
SENDER				int				NOT NULL,
CONSTRAINT PK_WEBSITE_ATTACHMENTS PRIMARY KEY(ATTACHMENT_ID),
CONSTRAINT FK_ATTACHMENT_SENDER FOREIGN KEY (SENDER)
	REFERENCES USERS (USER_ID)
)
GO

-- =======    WEBSITE_PAGES TABLE   ======
CREATE TABLE WEBSITE_PAGES (
WEBSITE_PAGE_ID		int				IDENTITY(1, 1),
PAGE_CAPTION		nvarchar(255)	NOT NULL,
PAGE_CONTENTS		nvarchar(1024),
PAGE_AUTHOR			nvarchar(100),
AUTHOR_TITLE		nvarchar(150),
PAGE_ATTACHMENTS	nvarchar(255),
PAGE_INDEX			int			NOT NULL DEFAULT 0, --index of the page in enumeration.
PAGE_LINKS			nvarchar(1024),
CONSTRAINT PK_WEBSITE_PAGES PRIMARY KEY(WEBSITE_PAGE_ID)
)
GO
-- =======    WEBSITE_POLLS TABLE   ======
CREATE TABLE WEBSITE_POLLS (
POLL_ID				int				IDENTITY(1, 1),
POLL_QUESTION		nvarchar(256)	NOT NULL,
POLL_SUBMIT_DATE	datetime		NOT NULL DEFAULT GETDATE(),
POLL_EXPIRE_DATE	datetime,
CONSTRAINT PK_WEBSITE_POLLS PRIMARY KEY(POLL_ID)
)
GO
-- =======    WEBSITE_POLLS_POSSIBLE_ANSWERS TABLE   ======
CREATE TABLE WEBSITE_POLLS_POSSIBLE_ANSWERS (
ANSWER_ID			int				IDENTITY(1, 1),
POLL_ID				int				NOT NULL,
ANSWER				nvarchar(1024)	NOT NULL,
CONSTRAINT PK_WEBSITE_POLLS_POSSIBLE_ANSWERS PRIMARY KEY(ANSWER_ID),
CONSTRAINT FK_POLLS_POSSIBLE_ANSWERS FOREIGN KEY(POLL_ID)
	REFERENCES WEBSITE_POLLS(POLL_ID)
)
GO
-- =======    WEBSITE_POLLS_RESULTS TABLE   ======
CREATE TABLE WEBSITE_POLLS_RESULTS (
RESULT_ID			int				IDENTITY(1, 1),
ANSWER_ID			int				NOT NULL,
VISITOR_IP			nvarchar(16)	NOT NULL,
SESSION_ID			nvarchar(128)	NOT NULL,
CONSTRAINT PK_WEBSITE_POLLS_RESULTS PRIMARY KEY(RESULT_ID),
CONSTRAINT FK_ANSWERS_RESULTS FOREIGN KEY(ANSWER_ID)
	REFERENCES WEBSITE_POLLS_POSSIBLE_ANSWERS(ANSWER_ID)
)
GO

-- =======    WEBSITE_BANNERS TABLE   ======
CREATE TABLE WEBSITE_BANNERS (
BANNER_ID		int				IDENTITY(1, 1),
URL_150_150		nvarchar(255)	NOT NULL,
URL_760_80		nvarchar(255)	NOT NULL,
DESCRIPTION		nvarchar(255)	NOT NULL,
DATE_DELETED	datetime,
CONSTRAINT PK_WEBSITE_BANNERS PRIMARY KEY(BANNER_ID)
)
GO

-- =======    WEBSITE_EVENTS TABLE   ======
CREATE TABLE WEBSITE_EVENTS (
EVENT_ID		int				IDENTITY(1, 1),
EVENT_DATE		datetime		NOT NULL,
DESCRIPTION		nvarchar(255)	NOT NULL,
URL				nvarchar(255),
DATE_DELETED	datetime,
CONSTRAINT PK_WEBSITE_EVENTS PRIMARY KEY(EVENT_ID)
)
GO

-- =======    CHAMPIONSHIP_ATTACHMENTS TABLE   ======
CREATE TABLE CHAMPIONSHIP_ATTACHMENTS (
CHAMPIONSHIP_ATTACHMENT_ID	int		IDENTITY(1, 1),
CHAMPIONSHIP_CATEGORY_ID	int		NOT NULL,
ATTACHMENT_ID				int		NOT NULL,
CONSTRAINT PK_CHAMPIONSHIP_ATTACHMENTS PRIMARY KEY(CHAMPIONSHIP_ATTACHMENT_ID),
CONSTRAINT FK_CHAMPIONSHIP_ATTACHMENT_CHAMP FOREIGN KEY(CHAMPIONSHIP_CATEGORY_ID)
	REFERENCES CHAMPIONSHIP_CATEGORIES(CHAMPIONSHIP_CATEGORY_ID),
CONSTRAINT FK_CHAMPIONSHIP_ATTACHMENT_ATT FOREIGN KEY(ATTACHMENT_ID)
	REFERENCES WEBSITE_ATTACHMENTS(ATTACHMENT_ID),
CONSTRAINT UN_CHAMPIONSHIP_ATTACHMENT UNIQUE (CHAMPIONSHIP_CATEGORY_ID, ATTACHMENT_ID)
)
GO

-- =======    REGION_ARTICLES TABLE   ======
CREATE TABLE REGION_ARTICLES (
REGION_ARTICLE_ID	int		IDENTITY(1, 1),
REGION_ID			int		NOT NULL,
ARTICLE_ID			int		NOT NULL,
REGION_TYPE			int		NOT NULL, --1 for club championships, 0 for other championships
CONSTRAINT PK_REGION_ARTICLES PRIMARY KEY(REGION_ARTICLE_ID),
CONSTRAINT FK_REGION_ARTICLE_REGION FOREIGN KEY(REGION_ID)
	REFERENCES REGIONS(REGION_ID),
CONSTRAINT FK_REGION_ARTICLE_ARTICLE FOREIGN KEY(ARTICLE_ID)
	REFERENCES ISF_ARTICLES(ARTICLE_ID),
CONSTRAINT UN_REGION_ARTICLES UNIQUE (REGION_ID, ARTICLE_ID, REGION_TYPE)
)
GO

-- =======    WEBSITE_IMAGE_GALLERY TABLE   ======
CREATE TABLE WEBSITE_IMAGE_GALLERY (
IMAGE_ID		int				IDENTITY(1, 1),
PICTURE_NAME	nvarchar(100)	NOT NULL,
ORIGINAL_NAME	nvarchar(100)	NOT NULL,
THUMBNAIL_NAME	nvarchar(100),
GROUP_NAME		nvarchar(100),
DESCRIPTION		nvarchar(255),
VIEW_COUNT		int				DEFAULT 0,
SUB_GROUP		nvarchar(100),
CONSTRAINT PK_WEBSITE_IMAGE_GALLERY PRIMARY KEY(IMAGE_ID)
)
GO

-- =======    WEBSITE_ARTICLE_COMMENTS TABLE   ======
CREATE TABLE WEBSITE_ARTICLE_COMMENTS (
ARTICLE_COMMENT_ID	int				IDENTITY(1, 1),
ARTICLE_ID			int				NOT NULL,
COMMENT_NUMBER		int				NOT NULL,
VISITOR_IP			nvarchar(20),
VISITOR_NAME		nvarchar(50)	NOT NULL,
VISITOR_EMAIL		nvarchar(50),
COMMENT_CAPTION		nvarchar(100)	NOT NULL,
COMMENT_DESCRIPTION	nvarchar(255),
SUBMISSION_TIME		datetime		NOT NULL DEFAULT GETDATE(),
DATE_DELETED		datetime,
CONSTRAINT PK_WEBSITE_ARTICLE_COMMENTS PRIMARY KEY(ARTICLE_COMMENT_ID),
CONSTRAINT FK_ARTICLE_COMMENTS_ARTICLE FOREIGN KEY(ARTICLE_ID)
	REFERENCES ISF_ARTICLES(ARTICLE_ID)
)
GO

-- =======    WEBSITE_IMAGE_DESCRIPTIONS TABLE   ======
CREATE TABLE WEBSITE_IMAGE_DESCRIPTIONS (
IMAGE_DESCRIPTION_ID	int				IDENTITY(1, 1),
IMAGE_NAME				nvarchar(255)	NOT NULL,
IMAGE_DESCRIPTION		nvarchar(255),
CONSTRAINT PK_WEBSITE_IMAGE_DESCRIPTIONS PRIMARY KEY(IMAGE_DESCRIPTION_ID)
)
GO

-- =======    WEBSITE_HIT_LOG_ARCHIVE TABLE   ======
CREATE TABLE WEBSITE_HIT_LOG_ARCHIVE (
HIT_LOG_ARCHIVE_ID	int				IDENTITY(1, 1),
PAGE_INDEX			int				NOT NULL,	--index in enum.
DATE_START			datetime,
DATE_END			datetime,
HIT_COUNT			int,
CONSTRAINT PK_WEBSITE_HIT_LOG_ARCHIVE PRIMARY KEY(HIT_LOG_ARCHIVE_ID)
)
GO

-- =======    PENDING_COMPETITORS TABLE   ======
CREATE TABLE PENDING_COMPETITORS (
PENDING_COMPETITOR_ID	int		IDENTITY(1, 1),
TEAM_ID					int		NOT NULL,
PLAYER_ID				int		NOT NULL,
COMPETITION_INDEX		int		NOT NULL,
HEAT_INDEX				int,
PHASE_NAME				nvarchar(50),
GROUP_NAME				nvarchar(50),
CONSTRAINT PK_PENDING_COMPETITORS PRIMARY KEY(PENDING_COMPETITOR_ID),
CONSTRAINT FK_PENDING_COMPETITOR_TEAM FOREIGN KEY(TEAM_ID)
	REFERENCES TEAMS(TEAM_ID),
CONSTRAINT FK_PENDING_COMPETITOR_PLAYER FOREIGN KEY(PLAYER_ID)
	REFERENCES PLAYERS(PLAYER_ID),
CONSTRAINT UN_PENDING_COMPETITOR_PLAYER UNIQUE(PLAYER_ID, COMPETITION_INDEX)
)
GO

-- =======    PENDING_MATCH_SCORES   ======
CREATE TABLE PENDING_MATCH_SCORES (
PENDING_MATCH_SCORE_ID		int		IDENTITY(1, 1),
CHAMPIONSHIP_CATEGORY_ID	int		NOT NULL,
PHASE						int		NOT NULL,
NGROUP						int		NOT NULL,
ROUND						int		NOT NULL,
CYCLE						int		NOT NULL,
MATCH						int		NOT NULL,
SCORE_A						int,
SCORE_B						int,
SENDER						int,
PARTS_RESULT				nvarchar(2000),
CONSTRAINT PK_PENDING_MATCH_SCORE PRIMARY KEY(PENDING_MATCH_SCORE_ID),
CONSTRAINT FK_PENDING_MATCH_MATCH FOREIGN KEY(CHAMPIONSHIP_CATEGORY_ID, PHASE, NGROUP, ROUND, CYCLE, MATCH)
	REFERENCES CHAMPIONSHIP_MATCHES(CHAMPIONSHIP_CATEGORY_ID, PHASE, NGROUP, ROUND, CYCLE, MATCH),
CONSTRAINT FK_PENDING_MATCH_SENDER FOREIGN KEY(SENDER)
	REFERENCES USERS(USER_ID),	
CONSTRAINT UN_PENDING_MATCH_MATCH UNIQUE(CHAMPIONSHIP_CATEGORY_ID, PHASE, NGROUP, ROUND, CYCLE, MATCH)
)
GO