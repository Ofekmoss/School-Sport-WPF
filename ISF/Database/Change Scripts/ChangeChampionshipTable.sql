 -- =============================================
-- ChangeChamionshipTable.sql
--		Change championship tables:
--			CHAMPIONSHIPS
-- =============================================

-- =======    CHAMPIONSHIPS TABLE   ======
ALTER TABLE CHAMPIONSHIPS ADD
CHAMPIONSHIP_STATUS int NOT NULL DEFAULT 0 --0/1/2
GO

ALTER TABLE CHAMPIONSHIPS
ALTER COLUMN IS_CLUBS int NOT NULL
GO

ALTER TABLE CHAMPIONSHIPS ADD
CONSTRAINT CHK_CHAMPIONSHIP_CLUB CHECK (IS_CLUBS = 0 OR IS_CLUBS = 1)
GO

ALTER TABLE CHAMPIONSHIPS ADD
CHAMPIONSHIP_NUMBER int
GO

ALTER TABLE CHAMPIONSHIP_GROUP_TEAMS ADD
SMALL_POINTS int
GO

ALTER TABLE CHAMPIONSHIP_GROUP_TEAMS ADD
SMALL_POINTS_AGAINST int
GO

ALTER TABLE CHAMPIONSHIP_COMPETITION_COMPETITORS ADD
SCORE int
GO

ALTER TABLE CHAMPIONSHIP_COMPETITION_COMPETITORS ADD
CONSTRAINT CHK_COMPETITOR_SCORE CHECK ((SCORE >= 0) AND (SCORE <= 100))
GO

ALTER TABLE CHAMPIONSHIP_MATCHES ADD
CYCLE int NOT NULL DEFAULT 0
GO

ALTER TABLE CHAMPIONSHIPS ADD
REGISTRATION_PRICE real NOT NULL DEFAULT 0
GO
ALTER TABLE CHAMPIONSHIPS ADD
CONSTRAINT CHK_CHAMPIONSHIP_REG_PRICE CHECK 
	(REGISTRATION_PRICE >= 0 AND REGISTRATION_PRICE <= 999999)
GO

ALTER TABLE CHAMPIONSHIPS DROP CONSTRAINT CHK_CHAMPIONSHIP_REG_PRICE
GO

ALTER TABLE CHAMPIONSHIPS DROP COLUMN REGISTRATION_PRICE
GO

ALTER TABLE CHAMPIONSHIP_CATEGORIES ADD
REGISTRATION_PRICE real NOT NULL DEFAULT 0
GO
ALTER TABLE CHAMPIONSHIP_CATEGORIES ADD
CONSTRAINT CHK_CHAMPIONSHIP_REG_PRICE CHECK 
	(REGISTRATION_PRICE >= 0 AND REGISTRATION_PRICE <= 999999)
GO

ALTER TABLE CHAMPIONSHIPS ADD
REMARKS nvarchar(255)
GO

ALTER TABLE CHAMPIONSHIPS ADD
MAX_STUDENT_BIRTHDAY datetime
GO

ALTER TABLE CHAMPIONSHIPS
DROP COLUMN MAX_STUDENT_BIRTHDAY
GO

ALTER TABLE CHAMPIONSHIP_CATEGORIES ADD
MAX_STUDENT_BIRTHDAY datetime
GO

---------------------------------------------
ALTER TABLE TEAMS ADD
PLAYERS_COUNT int DEFAULT 0
GO

DECLARE @team int

DECLARE team_cursor CURSOR FOR
SELECT DISTINCT TEAM_ID
FROM TEAMS WHERE DATE_DELETED IS NULL

OPEN team_cursor
FETCH NEXT FROM team_cursor
INTO @team
	
--loop over the facilities, update one at a time:
WHILE @@FETCH_STATUS = 0
BEGIN
	UPDATE TEAMS SET PLAYERS_COUNT=(SELECT COUNT(PLAYER_ID) FROM PLAYERS WHERE TEAM_ID=@team AND DATE_DELETED IS NULL)
	WHERE TEAM_ID=@team
	
	--advance to next record:
	FETCH NEXT FROM team_cursor
	INTO @team
END

UPDATE TEAMS SET PLAYERS_COUNT=0 WHERE PLAYERS_COUNT IS NULL
GO

CLOSE team_cursor
DEALLOCATE team_cursor
---------------------------------------------

ALTER TABLE CHAMPIONSHIP_CATEGORIES ADD
CHAMPIONSHIP_CATEGORY_INDEX int
GO

UPDATE CHAMPIONSHIP_CATEGORIES
SET CHAMPIONSHIP_CATEGORY_INDEX=0
GO

ALTER TABLE CHAMPIONSHIP_MATCHES ADD
REFEREE_COUNT int NOT NULL DEFAULT 0
GO

ALTER TABLE CHAMPIONSHIP_MATCHES ADD
CUSTOM_TEAM_A nvarchar(50)
GO

ALTER TABLE CHAMPIONSHIP_MATCHES ADD
CUSTOM_TEAM_B nvarchar(50)
GO

ALTER TABLE CHAMPIONSHIP_COMPETITIONS ADD
LANE_COUNT int
GO

ALTER TABLE CHAMPIONSHIP_COMPETITION_COMPETITORS ADD
CUSTOM_POSITION int
GO

ALTER TABLE SPORT_FIELD_TYPES
DROP CONSTRAINT FK_SPORTFIELDTYPE_COMPTYPE
GO

ALTER TABLE CHAMPIONSHIP_MATCHES ADD
IS_NEW_DATE bit
GO

ALTER TABLE CHAMPIONSHIP_MATCHES
DROP COLUMN IS_NEW_DATE
GO

ALTER TABLE CHAMPIONSHIP_MATCHES ADD
DATE_CHANGED_DATE datetime
GO

ALTER TABLE CHAMPIONSHIP_COMPETITION_COMPETITORS
DROP CONSTRAINT CHK_COMPETITOR_SCORE
GO

ALTER TABLE CHAMPIONSHIP_COMPETITION_COMPETITORS
ADD CONSTRAINT CHK_COMPETITOR_SCORE CHECK ((SCORE >= 0) AND (SCORE <= 200))
GO

ALTER TABLE CHAMPIONSHIP_COMPETITION_COMPETITORS
DROP CONSTRAINT CHK_COMPETITOR_SCORE
GO

-----------------------------------------------------------------------

ALTER TABLE [CHAMPIONSHIP_COMPETITION_COMPETITORS]
Add [SharedResultNumbers] [nvarchar](255) NULL
GO

ALTER TABLE [CHAMPIONSHIP_COMPETITION_COMPETITORS]
Add [LastResultDisqualifications] [int] NULL
GO

ALTER TABLE [CHAMPIONSHIP_COMPETITION_COMPETITORS]
Add [TotalDisqualifications] [int] NULL
GO

ALTER TABLE [CHAMPIONSHIP_COMPETITION_COMPETITORS]
Add [Wind] [nvarchar](20) NULL
GO
