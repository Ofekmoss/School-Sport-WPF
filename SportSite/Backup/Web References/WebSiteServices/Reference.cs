//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SportSite.WebSiteServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebsiteServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class WebsiteService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCurrentNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsInRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlashnewsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFlashNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFlashNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPollOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPollsByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback editAnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback addPollOperationCompleted;
        
        private System.Threading.SendOrPostCallback addAnswerToPollOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePollOperationCompleted;
        
        private System.Threading.SendOrPostCallback voteOperationCompleted;
        
        private System.Threading.SendOrPostCallback isCurrentUserAuthorizedToUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrimaryArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubArticlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticlesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestNewsIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestArticleIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHotArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPrimaryAndSecondaryArticlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback Page_HitOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurgeOldHitLogDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindPageDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPageDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSendableRegionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRegionByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBannersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBannerDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBannerDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBannerDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEventDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEventDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChampionshipAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddChampionshipAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveChampionshipAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegionArticlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRegionArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveRegionArticleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGalleryImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGalleryImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImagesByGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGalleryGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGalleryImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddImageViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGallreyImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArticleCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateArticleCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPendingCompetitorsTeamsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPendingCompetitorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPendingCompetitorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPendingMatchScoresOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePendingMatchScoresOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitPendingMatchScoresOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchoolMatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSportDailyGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFacilityHostDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeamStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullTeamDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChampionshipsBySeasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback MapExternalStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExternallyAddedStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebsiteService() {
            this.Url = "http://213.8.193.150/ISF/SportServices/WebsiteService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCurrentNewsCompletedEventHandler GetCurrentNewsCompleted;
        
        /// <remarks/>
        public event GetNewsInRangeCompletedEventHandler GetNewsInRangeCompleted;
        
        /// <remarks/>
        public event GetFlashnewsDataCompletedEventHandler GetFlashnewsDataCompleted;
        
        /// <remarks/>
        public event UpdateFlashNewsCompletedEventHandler UpdateFlashNewsCompleted;
        
        /// <remarks/>
        public event DeleteFlashNewsCompletedEventHandler DeleteFlashNewsCompleted;
        
        /// <remarks/>
        public event getPollCompletedEventHandler getPollCompleted;
        
        /// <remarks/>
        public event getPollsByFilterCompletedEventHandler getPollsByFilterCompleted;
        
        /// <remarks/>
        public event editAnswerCompletedEventHandler editAnswerCompleted;
        
        /// <remarks/>
        public event addPollCompletedEventHandler addPollCompleted;
        
        /// <remarks/>
        public event addAnswerToPollCompletedEventHandler addAnswerToPollCompleted;
        
        /// <remarks/>
        public event deleteAnswerCompletedEventHandler deleteAnswerCompleted;
        
        /// <remarks/>
        public event deletePollCompletedEventHandler deletePollCompleted;
        
        /// <remarks/>
        public event voteCompletedEventHandler voteCompleted;
        
        /// <remarks/>
        public event isCurrentUserAuthorizedToUpdateCompletedEventHandler isCurrentUserAuthorizedToUpdateCompleted;
        
        /// <remarks/>
        public event GetArticlesCompletedEventHandler GetArticlesCompleted;
        
        /// <remarks/>
        public event GetPrimaryArticleCompletedEventHandler GetPrimaryArticleCompleted;
        
        /// <remarks/>
        public event GetSubArticlesCompletedEventHandler GetSubArticlesCompleted;
        
        /// <remarks/>
        public event GetArticlesCountCompletedEventHandler GetArticlesCountCompleted;
        
        /// <remarks/>
        public event GetLatestNewsIDCompletedEventHandler GetLatestNewsIDCompleted;
        
        /// <remarks/>
        public event GetLatestArticleIDCompletedEventHandler GetLatestArticleIDCompleted;
        
        /// <remarks/>
        public event GetArticleDataCompletedEventHandler GetArticleDataCompleted;
        
        /// <remarks/>
        public event GetHotArticleCompletedEventHandler GetHotArticleCompleted;
        
        /// <remarks/>
        public event SetPrimaryAndSecondaryArticlesCompletedEventHandler SetPrimaryAndSecondaryArticlesCompleted;
        
        /// <remarks/>
        public event UpdateArticleCompletedEventHandler UpdateArticleCompleted;
        
        /// <remarks/>
        public event DeleteArticleCompletedEventHandler DeleteArticleCompleted;
        
        /// <remarks/>
        public event Page_HitCompletedEventHandler Page_HitCompleted;
        
        /// <remarks/>
        public event PurgeOldHitLogDataCompletedEventHandler PurgeOldHitLogDataCompleted;
        
        /// <remarks/>
        public event FindAttachmentCompletedEventHandler FindAttachmentCompleted;
        
        /// <remarks/>
        public event GetAttachmentDataCompletedEventHandler GetAttachmentDataCompleted;
        
        /// <remarks/>
        public event UpdateAttachmentCompletedEventHandler UpdateAttachmentCompleted;
        
        /// <remarks/>
        public event DeleteAttachmentCompletedEventHandler DeleteAttachmentCompleted;
        
        /// <remarks/>
        public event FindPageDataCompletedEventHandler FindPageDataCompleted;
        
        /// <remarks/>
        public event GetPageDataCompletedEventHandler GetPageDataCompleted;
        
        /// <remarks/>
        public event UpdatePageCompletedEventHandler UpdatePageCompleted;
        
        /// <remarks/>
        public event DeletePageCompletedEventHandler DeletePageCompleted;
        
        /// <remarks/>
        public event getSendableRegionsCompletedEventHandler getSendableRegionsCompleted;
        
        /// <remarks/>
        public event getRegionByIdCompletedEventHandler getRegionByIdCompleted;
        
        /// <remarks/>
        public event GetBannersCompletedEventHandler GetBannersCompleted;
        
        /// <remarks/>
        public event GetBannerDataCompletedEventHandler GetBannerDataCompleted;
        
        /// <remarks/>
        public event UpdateBannerDataCompletedEventHandler UpdateBannerDataCompleted;
        
        /// <remarks/>
        public event DeleteBannerDataCompletedEventHandler DeleteBannerDataCompleted;
        
        /// <remarks/>
        public event GetEventsCompletedEventHandler GetEventsCompleted;
        
        /// <remarks/>
        public event GetEventDataCompletedEventHandler GetEventDataCompleted;
        
        /// <remarks/>
        public event UpdateEventDataCompletedEventHandler UpdateEventDataCompleted;
        
        /// <remarks/>
        public event DeleteEventDataCompletedEventHandler DeleteEventDataCompleted;
        
        /// <remarks/>
        public event GetChampionshipAttachmentsCompletedEventHandler GetChampionshipAttachmentsCompleted;
        
        /// <remarks/>
        public event AddChampionshipAttachmentCompletedEventHandler AddChampionshipAttachmentCompleted;
        
        /// <remarks/>
        public event RemoveChampionshipAttachmentCompletedEventHandler RemoveChampionshipAttachmentCompleted;
        
        /// <remarks/>
        public event GetRegionArticlesCompletedEventHandler GetRegionArticlesCompleted;
        
        /// <remarks/>
        public event UpdateRegionArticleCompletedEventHandler UpdateRegionArticleCompleted;
        
        /// <remarks/>
        public event RemoveRegionArticleCompletedEventHandler RemoveRegionArticleCompleted;
        
        /// <remarks/>
        public event GetAllGalleryImagesCompletedEventHandler GetAllGalleryImagesCompleted;
        
        /// <remarks/>
        public event GetGalleryImageCompletedEventHandler GetGalleryImageCompleted;
        
        /// <remarks/>
        public event GetImagesByGroupCompletedEventHandler GetImagesByGroupCompleted;
        
        /// <remarks/>
        public event GetGalleryGroupsCompletedEventHandler GetGalleryGroupsCompleted;
        
        /// <remarks/>
        public event UpdateGalleryImageCompletedEventHandler UpdateGalleryImageCompleted;
        
        /// <remarks/>
        public event AddImageViewCompletedEventHandler AddImageViewCompleted;
        
        /// <remarks/>
        public event DeleteGallreyImageCompletedEventHandler DeleteGallreyImageCompleted;
        
        /// <remarks/>
        public event GetArticleCommentsCompletedEventHandler GetArticleCommentsCompleted;
        
        /// <remarks/>
        public event UpdateArticleCommentCompletedEventHandler UpdateArticleCommentCompleted;
        
        /// <remarks/>
        public event GetPendingCompetitorsTeamsDataCompletedEventHandler GetPendingCompetitorsTeamsDataCompleted;
        
        /// <remarks/>
        public event GetPendingCompetitorsCompletedEventHandler GetPendingCompetitorsCompleted;
        
        /// <remarks/>
        public event AddPendingCompetitorsCompletedEventHandler AddPendingCompetitorsCompleted;
        
        /// <remarks/>
        public event GetPendingMatchScoresCompletedEventHandler GetPendingMatchScoresCompleted;
        
        /// <remarks/>
        public event UpdatePendingMatchScoresCompletedEventHandler UpdatePendingMatchScoresCompleted;
        
        /// <remarks/>
        public event CommitPendingMatchScoresCompletedEventHandler CommitPendingMatchScoresCompleted;
        
        /// <remarks/>
        public event GetSchoolMatchesCompletedEventHandler GetSchoolMatchesCompleted;
        
        /// <remarks/>
        public event GetSportDailyGamesCompletedEventHandler GetSportDailyGamesCompleted;
        
        /// <remarks/>
        public event GetFacilityHostDaysCompletedEventHandler GetFacilityHostDaysCompleted;
        
        /// <remarks/>
        public event GetTeamStudentsCompletedEventHandler GetTeamStudentsCompleted;
        
        /// <remarks/>
        public event GetFullTeamDetailsCompletedEventHandler GetFullTeamDetailsCompleted;
        
        /// <remarks/>
        public event GetChampionshipsBySeasonCompletedEventHandler GetChampionshipsBySeasonCompleted;
        
        /// <remarks/>
        public event MapExternalStudentCompletedEventHandler MapExternalStudentCompleted;
        
        /// <remarks/>
        public event IsExternallyAddedStudentCompletedEventHandler IsExternallyAddedStudentCompleted;
        
        /// <remarks/>
        public event GetUserDataCompletedEventHandler GetUserDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentNews", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FlashNewsData[] GetCurrentNews() {
            object[] results = this.Invoke("GetCurrentNews", new object[0]);
            return ((FlashNewsData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCurrentNews(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCurrentNews", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public FlashNewsData[] EndGetCurrentNews(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FlashNewsData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentNewsAsync() {
            this.GetCurrentNewsAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentNewsAsync(object userState) {
            if ((this.GetCurrentNewsOperationCompleted == null)) {
                this.GetCurrentNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentNewsOperationCompleted);
            }
            this.InvokeAsync("GetCurrentNews", new object[0], this.GetCurrentNewsOperationCompleted, userState);
        }
        
        private void OnGetCurrentNewsOperationCompleted(object arg) {
            if ((this.GetCurrentNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentNewsCompleted(this, new GetCurrentNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewsInRange", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FlashNewsData[] GetNewsInRange(System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("GetNewsInRange", new object[] {
                        start,
                        end});
            return ((FlashNewsData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNewsInRange(System.DateTime start, System.DateTime end, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNewsInRange", new object[] {
                        start,
                        end}, callback, asyncState);
        }
        
        /// <remarks/>
        public FlashNewsData[] EndGetNewsInRange(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FlashNewsData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsInRangeAsync(System.DateTime start, System.DateTime end) {
            this.GetNewsInRangeAsync(start, end, null);
        }
        
        /// <remarks/>
        public void GetNewsInRangeAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.GetNewsInRangeOperationCompleted == null)) {
                this.GetNewsInRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsInRangeOperationCompleted);
            }
            this.InvokeAsync("GetNewsInRange", new object[] {
                        start,
                        end}, this.GetNewsInRangeOperationCompleted, userState);
        }
        
        private void OnGetNewsInRangeOperationCompleted(object arg) {
            if ((this.GetNewsInRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsInRangeCompleted(this, new GetNewsInRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFlashnewsData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FlashNewsData GetFlashnewsData(int id) {
            object[] results = this.Invoke("GetFlashnewsData", new object[] {
                        id});
            return ((FlashNewsData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFlashnewsData(int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFlashnewsData", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public FlashNewsData EndGetFlashnewsData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FlashNewsData)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlashnewsDataAsync(int id) {
            this.GetFlashnewsDataAsync(id, null);
        }
        
        /// <remarks/>
        public void GetFlashnewsDataAsync(int id, object userState) {
            if ((this.GetFlashnewsDataOperationCompleted == null)) {
                this.GetFlashnewsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlashnewsDataOperationCompleted);
            }
            this.InvokeAsync("GetFlashnewsData", new object[] {
                        id}, this.GetFlashnewsDataOperationCompleted, userState);
        }
        
        private void OnGetFlashnewsDataOperationCompleted(object arg) {
            if ((this.GetFlashnewsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlashnewsDataCompleted(this, new GetFlashnewsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFlashNews", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateFlashNews(FlashNewsData data, string username, string password, int userid) {
            object[] results = this.Invoke("UpdateFlashNews", new object[] {
                        data,
                        username,
                        password,
                        userid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateFlashNews(FlashNewsData data, string username, string password, int userid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateFlashNews", new object[] {
                        data,
                        username,
                        password,
                        userid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateFlashNews(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFlashNewsAsync(FlashNewsData data, string username, string password, int userid) {
            this.UpdateFlashNewsAsync(data, username, password, userid, null);
        }
        
        /// <remarks/>
        public void UpdateFlashNewsAsync(FlashNewsData data, string username, string password, int userid, object userState) {
            if ((this.UpdateFlashNewsOperationCompleted == null)) {
                this.UpdateFlashNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFlashNewsOperationCompleted);
            }
            this.InvokeAsync("UpdateFlashNews", new object[] {
                        data,
                        username,
                        password,
                        userid}, this.UpdateFlashNewsOperationCompleted, userState);
        }
        
        private void OnUpdateFlashNewsOperationCompleted(object arg) {
            if ((this.UpdateFlashNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFlashNewsCompleted(this, new UpdateFlashNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFlashNews", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteFlashNews(int id, string username, string password) {
            object[] results = this.Invoke("DeleteFlashNews", new object[] {
                        id,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFlashNews(int id, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFlashNews", new object[] {
                        id,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteFlashNews(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFlashNewsAsync(int id, string username, string password) {
            this.DeleteFlashNewsAsync(id, username, password, null);
        }
        
        /// <remarks/>
        public void DeleteFlashNewsAsync(int id, string username, string password, object userState) {
            if ((this.DeleteFlashNewsOperationCompleted == null)) {
                this.DeleteFlashNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFlashNewsOperationCompleted);
            }
            this.InvokeAsync("DeleteFlashNews", new object[] {
                        id,
                        username,
                        password}, this.DeleteFlashNewsOperationCompleted, userState);
        }
        
        private void OnDeleteFlashNewsOperationCompleted(object arg) {
            if ((this.DeleteFlashNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFlashNewsCompleted(this, new DeleteFlashNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPoll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PollData getPoll(int ID) {
            object[] results = this.Invoke("getPoll", new object[] {
                        ID});
            return ((PollData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPoll(int ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPoll", new object[] {
                        ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public PollData EndgetPoll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PollData)(results[0]));
        }
        
        /// <remarks/>
        public void getPollAsync(int ID) {
            this.getPollAsync(ID, null);
        }
        
        /// <remarks/>
        public void getPollAsync(int ID, object userState) {
            if ((this.getPollOperationCompleted == null)) {
                this.getPollOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPollOperationCompleted);
            }
            this.InvokeAsync("getPoll", new object[] {
                        ID}, this.getPollOperationCompleted, userState);
        }
        
        private void OngetPollOperationCompleted(object arg) {
            if ((this.getPollCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPollCompleted(this, new getPollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPollsByFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PollData[] getPollsByFilter(PollReturnFilter filter) {
            object[] results = this.Invoke("getPollsByFilter", new object[] {
                        filter});
            return ((PollData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPollsByFilter(PollReturnFilter filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPollsByFilter", new object[] {
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public PollData[] EndgetPollsByFilter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PollData[])(results[0]));
        }
        
        /// <remarks/>
        public void getPollsByFilterAsync(PollReturnFilter filter) {
            this.getPollsByFilterAsync(filter, null);
        }
        
        /// <remarks/>
        public void getPollsByFilterAsync(PollReturnFilter filter, object userState) {
            if ((this.getPollsByFilterOperationCompleted == null)) {
                this.getPollsByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPollsByFilterOperationCompleted);
            }
            this.InvokeAsync("getPollsByFilter", new object[] {
                        filter}, this.getPollsByFilterOperationCompleted, userState);
        }
        
        private void OngetPollsByFilterOperationCompleted(object arg) {
            if ((this.getPollsByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPollsByFilterCompleted(this, new getPollsByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editAnswer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int editAnswer(int answerID, string newAnswer, string username, string password) {
            object[] results = this.Invoke("editAnswer", new object[] {
                        answerID,
                        newAnswer,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegineditAnswer(int answerID, string newAnswer, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("editAnswer", new object[] {
                        answerID,
                        newAnswer,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndeditAnswer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void editAnswerAsync(int answerID, string newAnswer, string username, string password) {
            this.editAnswerAsync(answerID, newAnswer, username, password, null);
        }
        
        /// <remarks/>
        public void editAnswerAsync(int answerID, string newAnswer, string username, string password, object userState) {
            if ((this.editAnswerOperationCompleted == null)) {
                this.editAnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditAnswerOperationCompleted);
            }
            this.InvokeAsync("editAnswer", new object[] {
                        answerID,
                        newAnswer,
                        username,
                        password}, this.editAnswerOperationCompleted, userState);
        }
        
        private void OneditAnswerOperationCompleted(object arg) {
            if ((this.editAnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editAnswerCompleted(this, new editAnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addPoll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addPoll(string pollQuestion, System.DateTime expirationDate, string username, string password) {
            object[] results = this.Invoke("addPoll", new object[] {
                        pollQuestion,
                        expirationDate,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddPoll(string pollQuestion, System.DateTime expirationDate, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addPoll", new object[] {
                        pollQuestion,
                        expirationDate,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddPoll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addPollAsync(string pollQuestion, System.DateTime expirationDate, string username, string password) {
            this.addPollAsync(pollQuestion, expirationDate, username, password, null);
        }
        
        /// <remarks/>
        public void addPollAsync(string pollQuestion, System.DateTime expirationDate, string username, string password, object userState) {
            if ((this.addPollOperationCompleted == null)) {
                this.addPollOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPollOperationCompleted);
            }
            this.InvokeAsync("addPoll", new object[] {
                        pollQuestion,
                        expirationDate,
                        username,
                        password}, this.addPollOperationCompleted, userState);
        }
        
        private void OnaddPollOperationCompleted(object arg) {
            if ((this.addPollCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPollCompleted(this, new addPollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addAnswerToPoll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addAnswerToPoll(int pollID, string pollAnswer, string username, string password) {
            object[] results = this.Invoke("addAnswerToPoll", new object[] {
                        pollID,
                        pollAnswer,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddAnswerToPoll(int pollID, string pollAnswer, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addAnswerToPoll", new object[] {
                        pollID,
                        pollAnswer,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndaddAnswerToPoll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addAnswerToPollAsync(int pollID, string pollAnswer, string username, string password) {
            this.addAnswerToPollAsync(pollID, pollAnswer, username, password, null);
        }
        
        /// <remarks/>
        public void addAnswerToPollAsync(int pollID, string pollAnswer, string username, string password, object userState) {
            if ((this.addAnswerToPollOperationCompleted == null)) {
                this.addAnswerToPollOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAnswerToPollOperationCompleted);
            }
            this.InvokeAsync("addAnswerToPoll", new object[] {
                        pollID,
                        pollAnswer,
                        username,
                        password}, this.addAnswerToPollOperationCompleted, userState);
        }
        
        private void OnaddAnswerToPollOperationCompleted(object arg) {
            if ((this.addAnswerToPollCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addAnswerToPollCompleted(this, new addAnswerToPollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAnswer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteAnswer(int ID, string username, string password) {
            object[] results = this.Invoke("deleteAnswer", new object[] {
                        ID,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeleteAnswer(int ID, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deleteAnswer", new object[] {
                        ID,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeleteAnswer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAnswerAsync(int ID, string username, string password) {
            this.deleteAnswerAsync(ID, username, password, null);
        }
        
        /// <remarks/>
        public void deleteAnswerAsync(int ID, string username, string password, object userState) {
            if ((this.deleteAnswerOperationCompleted == null)) {
                this.deleteAnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAnswerOperationCompleted);
            }
            this.InvokeAsync("deleteAnswer", new object[] {
                        ID,
                        username,
                        password}, this.deleteAnswerOperationCompleted, userState);
        }
        
        private void OndeleteAnswerOperationCompleted(object arg) {
            if ((this.deleteAnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAnswerCompleted(this, new deleteAnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deletePoll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deletePoll(int ID, string username, string password) {
            object[] results = this.Invoke("deletePoll", new object[] {
                        ID,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindeletePoll(int ID, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deletePoll", new object[] {
                        ID,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EnddeletePoll(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deletePollAsync(int ID, string username, string password) {
            this.deletePollAsync(ID, username, password, null);
        }
        
        /// <remarks/>
        public void deletePollAsync(int ID, string username, string password, object userState) {
            if ((this.deletePollOperationCompleted == null)) {
                this.deletePollOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePollOperationCompleted);
            }
            this.InvokeAsync("deletePoll", new object[] {
                        ID,
                        username,
                        password}, this.deletePollOperationCompleted, userState);
        }
        
        private void OndeletePollOperationCompleted(object arg) {
            if ((this.deletePollCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePollCompleted(this, new deletePollCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int vote(int pollID, int answerID, string userIP) {
            object[] results = this.Invoke("vote", new object[] {
                        pollID,
                        answerID,
                        userIP});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginvote(int pollID, int answerID, string userIP, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("vote", new object[] {
                        pollID,
                        answerID,
                        userIP}, callback, asyncState);
        }
        
        /// <remarks/>
        public int Endvote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void voteAsync(int pollID, int answerID, string userIP) {
            this.voteAsync(pollID, answerID, userIP, null);
        }
        
        /// <remarks/>
        public void voteAsync(int pollID, int answerID, string userIP, object userState) {
            if ((this.voteOperationCompleted == null)) {
                this.voteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvoteOperationCompleted);
            }
            this.InvokeAsync("vote", new object[] {
                        pollID,
                        answerID,
                        userIP}, this.voteOperationCompleted, userState);
        }
        
        private void OnvoteOperationCompleted(object arg) {
            if ((this.voteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.voteCompleted(this, new voteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isCurrentUserAuthorizedToUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isCurrentUserAuthorizedToUpdate(int creatorId, string username, string password) {
            object[] results = this.Invoke("isCurrentUserAuthorizedToUpdate", new object[] {
                        creatorId,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginisCurrentUserAuthorizedToUpdate(int creatorId, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("isCurrentUserAuthorizedToUpdate", new object[] {
                        creatorId,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndisCurrentUserAuthorizedToUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isCurrentUserAuthorizedToUpdateAsync(int creatorId, string username, string password) {
            this.isCurrentUserAuthorizedToUpdateAsync(creatorId, username, password, null);
        }
        
        /// <remarks/>
        public void isCurrentUserAuthorizedToUpdateAsync(int creatorId, string username, string password, object userState) {
            if ((this.isCurrentUserAuthorizedToUpdateOperationCompleted == null)) {
                this.isCurrentUserAuthorizedToUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisCurrentUserAuthorizedToUpdateOperationCompleted);
            }
            this.InvokeAsync("isCurrentUserAuthorizedToUpdate", new object[] {
                        creatorId,
                        username,
                        password}, this.isCurrentUserAuthorizedToUpdateOperationCompleted, userState);
        }
        
        private void OnisCurrentUserAuthorizedToUpdateOperationCompleted(object arg) {
            if ((this.isCurrentUserAuthorizedToUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isCurrentUserAuthorizedToUpdateCompleted(this, new isCurrentUserAuthorizedToUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArticles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticleData[] GetArticles(int articlesCount) {
            object[] results = this.Invoke("GetArticles", new object[] {
                        articlesCount});
            return ((ArticleData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetArticles(int articlesCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetArticles", new object[] {
                        articlesCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public ArticleData[] EndGetArticles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ArticleData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArticlesAsync(int articlesCount) {
            this.GetArticlesAsync(articlesCount, null);
        }
        
        /// <remarks/>
        public void GetArticlesAsync(int articlesCount, object userState) {
            if ((this.GetArticlesOperationCompleted == null)) {
                this.GetArticlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticlesOperationCompleted);
            }
            this.InvokeAsync("GetArticles", new object[] {
                        articlesCount}, this.GetArticlesOperationCompleted, userState);
        }
        
        private void OnGetArticlesOperationCompleted(object arg) {
            if ((this.GetArticlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticlesCompleted(this, new GetArticlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrimaryArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticleData GetPrimaryArticle() {
            object[] results = this.Invoke("GetPrimaryArticle", new object[0]);
            return ((ArticleData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPrimaryArticle(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPrimaryArticle", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ArticleData EndGetPrimaryArticle(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ArticleData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrimaryArticleAsync() {
            this.GetPrimaryArticleAsync(null);
        }
        
        /// <remarks/>
        public void GetPrimaryArticleAsync(object userState) {
            if ((this.GetPrimaryArticleOperationCompleted == null)) {
                this.GetPrimaryArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrimaryArticleOperationCompleted);
            }
            this.InvokeAsync("GetPrimaryArticle", new object[0], this.GetPrimaryArticleOperationCompleted, userState);
        }
        
        private void OnGetPrimaryArticleOperationCompleted(object arg) {
            if ((this.GetPrimaryArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrimaryArticleCompleted(this, new GetPrimaryArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubArticles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticleData[] GetSubArticles() {
            object[] results = this.Invoke("GetSubArticles", new object[0]);
            return ((ArticleData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSubArticles(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSubArticles", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ArticleData[] EndGetSubArticles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ArticleData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSubArticlesAsync() {
            this.GetSubArticlesAsync(null);
        }
        
        /// <remarks/>
        public void GetSubArticlesAsync(object userState) {
            if ((this.GetSubArticlesOperationCompleted == null)) {
                this.GetSubArticlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubArticlesOperationCompleted);
            }
            this.InvokeAsync("GetSubArticles", new object[0], this.GetSubArticlesOperationCompleted, userState);
        }
        
        private void OnGetSubArticlesOperationCompleted(object arg) {
            if ((this.GetSubArticlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubArticlesCompleted(this, new GetSubArticlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArticlesCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetArticlesCount(bool primary, bool sub) {
            object[] results = this.Invoke("GetArticlesCount", new object[] {
                        primary,
                        sub});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetArticlesCount(bool primary, bool sub, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetArticlesCount", new object[] {
                        primary,
                        sub}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetArticlesCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetArticlesCountAsync(bool primary, bool sub) {
            this.GetArticlesCountAsync(primary, sub, null);
        }
        
        /// <remarks/>
        public void GetArticlesCountAsync(bool primary, bool sub, object userState) {
            if ((this.GetArticlesCountOperationCompleted == null)) {
                this.GetArticlesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticlesCountOperationCompleted);
            }
            this.InvokeAsync("GetArticlesCount", new object[] {
                        primary,
                        sub}, this.GetArticlesCountOperationCompleted, userState);
        }
        
        private void OnGetArticlesCountOperationCompleted(object arg) {
            if ((this.GetArticlesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticlesCountCompleted(this, new GetArticlesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestNewsID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLatestNewsID() {
            object[] results = this.Invoke("GetLatestNewsID", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestNewsID(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestNewsID", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetLatestNewsID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestNewsIDAsync() {
            this.GetLatestNewsIDAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestNewsIDAsync(object userState) {
            if ((this.GetLatestNewsIDOperationCompleted == null)) {
                this.GetLatestNewsIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestNewsIDOperationCompleted);
            }
            this.InvokeAsync("GetLatestNewsID", new object[0], this.GetLatestNewsIDOperationCompleted, userState);
        }
        
        private void OnGetLatestNewsIDOperationCompleted(object arg) {
            if ((this.GetLatestNewsIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestNewsIDCompleted(this, new GetLatestNewsIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestArticleID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLatestArticleID() {
            object[] results = this.Invoke("GetLatestArticleID", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestArticleID(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestArticleID", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetLatestArticleID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestArticleIDAsync() {
            this.GetLatestArticleIDAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestArticleIDAsync(object userState) {
            if ((this.GetLatestArticleIDOperationCompleted == null)) {
                this.GetLatestArticleIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestArticleIDOperationCompleted);
            }
            this.InvokeAsync("GetLatestArticleID", new object[0], this.GetLatestArticleIDOperationCompleted, userState);
        }
        
        private void OnGetLatestArticleIDOperationCompleted(object arg) {
            if ((this.GetLatestArticleIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestArticleIDCompleted(this, new GetLatestArticleIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArticleData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticleData GetArticleData(int id) {
            object[] results = this.Invoke("GetArticleData", new object[] {
                        id});
            return ((ArticleData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetArticleData(int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetArticleData", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public ArticleData EndGetArticleData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ArticleData)(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleDataAsync(int id) {
            this.GetArticleDataAsync(id, null);
        }
        
        /// <remarks/>
        public void GetArticleDataAsync(int id, object userState) {
            if ((this.GetArticleDataOperationCompleted == null)) {
                this.GetArticleDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleDataOperationCompleted);
            }
            this.InvokeAsync("GetArticleData", new object[] {
                        id}, this.GetArticleDataOperationCompleted, userState);
        }
        
        private void OnGetArticleDataOperationCompleted(object arg) {
            if ((this.GetArticleDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleDataCompleted(this, new GetArticleDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHotArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticleData GetHotArticle() {
            object[] results = this.Invoke("GetHotArticle", new object[0]);
            return ((ArticleData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHotArticle(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHotArticle", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ArticleData EndGetHotArticle(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ArticleData)(results[0]));
        }
        
        /// <remarks/>
        public void GetHotArticleAsync() {
            this.GetHotArticleAsync(null);
        }
        
        /// <remarks/>
        public void GetHotArticleAsync(object userState) {
            if ((this.GetHotArticleOperationCompleted == null)) {
                this.GetHotArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHotArticleOperationCompleted);
            }
            this.InvokeAsync("GetHotArticle", new object[0], this.GetHotArticleOperationCompleted, userState);
        }
        
        private void OnGetHotArticleOperationCompleted(object arg) {
            if ((this.GetHotArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHotArticleCompleted(this, new GetHotArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPrimaryAndSecondaryArticles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetPrimaryAndSecondaryArticles(int primaryArticleId, int[] secondaryArticleIds, string username, string password, int userid) {
            object[] results = this.Invoke("SetPrimaryAndSecondaryArticles", new object[] {
                        primaryArticleId,
                        secondaryArticleIds,
                        username,
                        password,
                        userid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPrimaryAndSecondaryArticles(int primaryArticleId, int[] secondaryArticleIds, string username, string password, int userid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPrimaryAndSecondaryArticles", new object[] {
                        primaryArticleId,
                        secondaryArticleIds,
                        username,
                        password,
                        userid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetPrimaryAndSecondaryArticles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetPrimaryAndSecondaryArticlesAsync(int primaryArticleId, int[] secondaryArticleIds, string username, string password, int userid) {
            this.SetPrimaryAndSecondaryArticlesAsync(primaryArticleId, secondaryArticleIds, username, password, userid, null);
        }
        
        /// <remarks/>
        public void SetPrimaryAndSecondaryArticlesAsync(int primaryArticleId, int[] secondaryArticleIds, string username, string password, int userid, object userState) {
            if ((this.SetPrimaryAndSecondaryArticlesOperationCompleted == null)) {
                this.SetPrimaryAndSecondaryArticlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPrimaryAndSecondaryArticlesOperationCompleted);
            }
            this.InvokeAsync("SetPrimaryAndSecondaryArticles", new object[] {
                        primaryArticleId,
                        secondaryArticleIds,
                        username,
                        password,
                        userid}, this.SetPrimaryAndSecondaryArticlesOperationCompleted, userState);
        }
        
        private void OnSetPrimaryAndSecondaryArticlesOperationCompleted(object arg) {
            if ((this.SetPrimaryAndSecondaryArticlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPrimaryAndSecondaryArticlesCompleted(this, new SetPrimaryAndSecondaryArticlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateArticle(ArticleData data, string username, string password, int userid) {
            object[] results = this.Invoke("UpdateArticle", new object[] {
                        data,
                        username,
                        password,
                        userid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateArticle(ArticleData data, string username, string password, int userid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateArticle", new object[] {
                        data,
                        username,
                        password,
                        userid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateArticle(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateArticleAsync(ArticleData data, string username, string password, int userid) {
            this.UpdateArticleAsync(data, username, password, userid, null);
        }
        
        /// <remarks/>
        public void UpdateArticleAsync(ArticleData data, string username, string password, int userid, object userState) {
            if ((this.UpdateArticleOperationCompleted == null)) {
                this.UpdateArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateArticleOperationCompleted);
            }
            this.InvokeAsync("UpdateArticle", new object[] {
                        data,
                        username,
                        password,
                        userid}, this.UpdateArticleOperationCompleted, userState);
        }
        
        private void OnUpdateArticleOperationCompleted(object arg) {
            if ((this.UpdateArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateArticleCompleted(this, new UpdateArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteArticle(int id, string username, string password) {
            object[] results = this.Invoke("DeleteArticle", new object[] {
                        id,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteArticle(int id, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteArticle", new object[] {
                        id,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteArticle(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteArticleAsync(int id, string username, string password) {
            this.DeleteArticleAsync(id, username, password, null);
        }
        
        /// <remarks/>
        public void DeleteArticleAsync(int id, string username, string password, object userState) {
            if ((this.DeleteArticleOperationCompleted == null)) {
                this.DeleteArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteArticleOperationCompleted);
            }
            this.InvokeAsync("DeleteArticle", new object[] {
                        id,
                        username,
                        password}, this.DeleteArticleOperationCompleted, userState);
        }
        
        private void OnDeleteArticleOperationCompleted(object arg) {
            if ((this.DeleteArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteArticleCompleted(this, new DeleteArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Page_Hit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Page_Hit(WebSitePage page, string strIP, string strQueryString, string strForm, string strUserAgent, string strReferer) {
            this.Invoke("Page_Hit", new object[] {
                        page,
                        strIP,
                        strQueryString,
                        strForm,
                        strUserAgent,
                        strReferer});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPage_Hit(WebSitePage page, string strIP, string strQueryString, string strForm, string strUserAgent, string strReferer, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Page_Hit", new object[] {
                        page,
                        strIP,
                        strQueryString,
                        strForm,
                        strUserAgent,
                        strReferer}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPage_Hit(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void Page_HitAsync(WebSitePage page, string strIP, string strQueryString, string strForm, string strUserAgent, string strReferer) {
            this.Page_HitAsync(page, strIP, strQueryString, strForm, strUserAgent, strReferer, null);
        }
        
        /// <remarks/>
        public void Page_HitAsync(WebSitePage page, string strIP, string strQueryString, string strForm, string strUserAgent, string strReferer, object userState) {
            if ((this.Page_HitOperationCompleted == null)) {
                this.Page_HitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPage_HitOperationCompleted);
            }
            this.InvokeAsync("Page_Hit", new object[] {
                        page,
                        strIP,
                        strQueryString,
                        strForm,
                        strUserAgent,
                        strReferer}, this.Page_HitOperationCompleted, userState);
        }
        
        private void OnPage_HitOperationCompleted(object arg) {
            if ((this.Page_HitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Page_HitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PurgeOldHitLogData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PurgeOldHitLogData() {
            object[] results = this.Invoke("PurgeOldHitLogData", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPurgeOldHitLogData(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PurgeOldHitLogData", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPurgeOldHitLogData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PurgeOldHitLogDataAsync() {
            this.PurgeOldHitLogDataAsync(null);
        }
        
        /// <remarks/>
        public void PurgeOldHitLogDataAsync(object userState) {
            if ((this.PurgeOldHitLogDataOperationCompleted == null)) {
                this.PurgeOldHitLogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurgeOldHitLogDataOperationCompleted);
            }
            this.InvokeAsync("PurgeOldHitLogData", new object[0], this.PurgeOldHitLogDataOperationCompleted, userState);
        }
        
        private void OnPurgeOldHitLogDataOperationCompleted(object arg) {
            if ((this.PurgeOldHitLogDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurgeOldHitLogDataCompleted(this, new PurgeOldHitLogDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FindAttachment(string fileName) {
            object[] results = this.Invoke("FindAttachment", new object[] {
                        fileName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindAttachment(string fileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindAttachment", new object[] {
                        fileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndFindAttachment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FindAttachmentAsync(string fileName) {
            this.FindAttachmentAsync(fileName, null);
        }
        
        /// <remarks/>
        public void FindAttachmentAsync(string fileName, object userState) {
            if ((this.FindAttachmentOperationCompleted == null)) {
                this.FindAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAttachmentOperationCompleted);
            }
            this.InvokeAsync("FindAttachment", new object[] {
                        fileName}, this.FindAttachmentOperationCompleted, userState);
        }
        
        private void OnFindAttachmentOperationCompleted(object arg) {
            if ((this.FindAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAttachmentCompleted(this, new FindAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachmentData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AttachmentData GetAttachmentData(int ID) {
            object[] results = this.Invoke("GetAttachmentData", new object[] {
                        ID});
            return ((AttachmentData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAttachmentData(int ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAttachmentData", new object[] {
                        ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public AttachmentData EndGetAttachmentData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AttachmentData)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentDataAsync(int ID) {
            this.GetAttachmentDataAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetAttachmentDataAsync(int ID, object userState) {
            if ((this.GetAttachmentDataOperationCompleted == null)) {
                this.GetAttachmentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentDataOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentData", new object[] {
                        ID}, this.GetAttachmentDataOperationCompleted, userState);
        }
        
        private void OnGetAttachmentDataOperationCompleted(object arg) {
            if ((this.GetAttachmentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentDataCompleted(this, new GetAttachmentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateAttachment(AttachmentData attachment, string username, string password, int userid) {
            object[] results = this.Invoke("UpdateAttachment", new object[] {
                        attachment,
                        username,
                        password,
                        userid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateAttachment(AttachmentData attachment, string username, string password, int userid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateAttachment", new object[] {
                        attachment,
                        username,
                        password,
                        userid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateAttachment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAttachmentAsync(AttachmentData attachment, string username, string password, int userid) {
            this.UpdateAttachmentAsync(attachment, username, password, userid, null);
        }
        
        /// <remarks/>
        public void UpdateAttachmentAsync(AttachmentData attachment, string username, string password, int userid, object userState) {
            if ((this.UpdateAttachmentOperationCompleted == null)) {
                this.UpdateAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAttachmentOperationCompleted);
            }
            this.InvokeAsync("UpdateAttachment", new object[] {
                        attachment,
                        username,
                        password,
                        userid}, this.UpdateAttachmentOperationCompleted, userState);
        }
        
        private void OnUpdateAttachmentOperationCompleted(object arg) {
            if ((this.UpdateAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAttachmentCompleted(this, new UpdateAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteAttachment(int id, string username, string password) {
            object[] results = this.Invoke("DeleteAttachment", new object[] {
                        id,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteAttachment(int id, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteAttachment", new object[] {
                        id,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteAttachment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(int id, string username, string password) {
            this.DeleteAttachmentAsync(id, username, password, null);
        }
        
        /// <remarks/>
        public void DeleteAttachmentAsync(int id, string username, string password, object userState) {
            if ((this.DeleteAttachmentOperationCompleted == null)) {
                this.DeleteAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteAttachment", new object[] {
                        id,
                        username,
                        password}, this.DeleteAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteAttachmentOperationCompleted(object arg) {
            if ((this.DeleteAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAttachmentCompleted(this, new DeleteAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindPageData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PageData FindPageData(string pageCaption, int pageIndex) {
            object[] results = this.Invoke("FindPageData", new object[] {
                        pageCaption,
                        pageIndex});
            return ((PageData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindPageData(string pageCaption, int pageIndex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindPageData", new object[] {
                        pageCaption,
                        pageIndex}, callback, asyncState);
        }
        
        /// <remarks/>
        public PageData EndFindPageData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PageData)(results[0]));
        }
        
        /// <remarks/>
        public void FindPageDataAsync(string pageCaption, int pageIndex) {
            this.FindPageDataAsync(pageCaption, pageIndex, null);
        }
        
        /// <remarks/>
        public void FindPageDataAsync(string pageCaption, int pageIndex, object userState) {
            if ((this.FindPageDataOperationCompleted == null)) {
                this.FindPageDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindPageDataOperationCompleted);
            }
            this.InvokeAsync("FindPageData", new object[] {
                        pageCaption,
                        pageIndex}, this.FindPageDataOperationCompleted, userState);
        }
        
        private void OnFindPageDataOperationCompleted(object arg) {
            if ((this.FindPageDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindPageDataCompleted(this, new FindPageDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPageData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PageData GetPageData(int ID) {
            object[] results = this.Invoke("GetPageData", new object[] {
                        ID});
            return ((PageData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPageData(int ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPageData", new object[] {
                        ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public PageData EndGetPageData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PageData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPageDataAsync(int ID) {
            this.GetPageDataAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetPageDataAsync(int ID, object userState) {
            if ((this.GetPageDataOperationCompleted == null)) {
                this.GetPageDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPageDataOperationCompleted);
            }
            this.InvokeAsync("GetPageData", new object[] {
                        ID}, this.GetPageDataOperationCompleted, userState);
        }
        
        private void OnGetPageDataOperationCompleted(object arg) {
            if ((this.GetPageDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPageDataCompleted(this, new GetPageDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePage(PageData page, string username, string password, int userid) {
            object[] results = this.Invoke("UpdatePage", new object[] {
                        page,
                        username,
                        password,
                        userid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePage(PageData page, string username, string password, int userid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePage", new object[] {
                        page,
                        username,
                        password,
                        userid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdatePage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePageAsync(PageData page, string username, string password, int userid) {
            this.UpdatePageAsync(page, username, password, userid, null);
        }
        
        /// <remarks/>
        public void UpdatePageAsync(PageData page, string username, string password, int userid, object userState) {
            if ((this.UpdatePageOperationCompleted == null)) {
                this.UpdatePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePageOperationCompleted);
            }
            this.InvokeAsync("UpdatePage", new object[] {
                        page,
                        username,
                        password,
                        userid}, this.UpdatePageOperationCompleted, userState);
        }
        
        private void OnUpdatePageOperationCompleted(object arg) {
            if ((this.UpdatePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePageCompleted(this, new UpdatePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeletePage(int id, string username, string password) {
            object[] results = this.Invoke("DeletePage", new object[] {
                        id,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeletePage(int id, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeletePage", new object[] {
                        id,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeletePage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePageAsync(int id, string username, string password) {
            this.DeletePageAsync(id, username, password, null);
        }
        
        /// <remarks/>
        public void DeletePageAsync(int id, string username, string password, object userState) {
            if ((this.DeletePageOperationCompleted == null)) {
                this.DeletePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePageOperationCompleted);
            }
            this.InvokeAsync("DeletePage", new object[] {
                        id,
                        username,
                        password}, this.DeletePageOperationCompleted, userState);
        }
        
        private void OnDeletePageOperationCompleted(object arg) {
            if ((this.DeletePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePageCompleted(this, new DeletePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSendableRegions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public RegionData[] getSendableRegions() {
            object[] results = this.Invoke("getSendableRegions", new object[0]);
            return ((RegionData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetSendableRegions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSendableRegions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public RegionData[] EndgetSendableRegions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RegionData[])(results[0]));
        }
        
        /// <remarks/>
        public void getSendableRegionsAsync() {
            this.getSendableRegionsAsync(null);
        }
        
        /// <remarks/>
        public void getSendableRegionsAsync(object userState) {
            if ((this.getSendableRegionsOperationCompleted == null)) {
                this.getSendableRegionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSendableRegionsOperationCompleted);
            }
            this.InvokeAsync("getSendableRegions", new object[0], this.getSendableRegionsOperationCompleted, userState);
        }
        
        private void OngetSendableRegionsOperationCompleted(object arg) {
            if ((this.getSendableRegionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSendableRegionsCompleted(this, new getSendableRegionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRegionById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RegionData getRegionById(int ID) {
            object[] results = this.Invoke("getRegionById", new object[] {
                        ID});
            return ((RegionData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetRegionById(int ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getRegionById", new object[] {
                        ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public RegionData EndgetRegionById(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RegionData)(results[0]));
        }
        
        /// <remarks/>
        public void getRegionByIdAsync(int ID) {
            this.getRegionByIdAsync(ID, null);
        }
        
        /// <remarks/>
        public void getRegionByIdAsync(int ID, object userState) {
            if ((this.getRegionByIdOperationCompleted == null)) {
                this.getRegionByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRegionByIdOperationCompleted);
            }
            this.InvokeAsync("getRegionById", new object[] {
                        ID}, this.getRegionByIdOperationCompleted, userState);
        }
        
        private void OngetRegionByIdOperationCompleted(object arg) {
            if ((this.getRegionByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRegionByIdCompleted(this, new getRegionByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBanners", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public BannerData[] GetBanners() {
            object[] results = this.Invoke("GetBanners", new object[0]);
            return ((BannerData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBanners(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBanners", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public BannerData[] EndGetBanners(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BannerData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBannersAsync() {
            this.GetBannersAsync(null);
        }
        
        /// <remarks/>
        public void GetBannersAsync(object userState) {
            if ((this.GetBannersOperationCompleted == null)) {
                this.GetBannersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBannersOperationCompleted);
            }
            this.InvokeAsync("GetBanners", new object[0], this.GetBannersOperationCompleted, userState);
        }
        
        private void OnGetBannersOperationCompleted(object arg) {
            if ((this.GetBannersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBannersCompleted(this, new GetBannersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBannerData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BannerData GetBannerData(int id) {
            object[] results = this.Invoke("GetBannerData", new object[] {
                        id});
            return ((BannerData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBannerData(int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBannerData", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public BannerData EndGetBannerData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BannerData)(results[0]));
        }
        
        /// <remarks/>
        public void GetBannerDataAsync(int id) {
            this.GetBannerDataAsync(id, null);
        }
        
        /// <remarks/>
        public void GetBannerDataAsync(int id, object userState) {
            if ((this.GetBannerDataOperationCompleted == null)) {
                this.GetBannerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBannerDataOperationCompleted);
            }
            this.InvokeAsync("GetBannerData", new object[] {
                        id}, this.GetBannerDataOperationCompleted, userState);
        }
        
        private void OnGetBannerDataOperationCompleted(object arg) {
            if ((this.GetBannerDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBannerDataCompleted(this, new GetBannerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBannerData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateBannerData(BannerData data, string username, string password) {
            object[] results = this.Invoke("UpdateBannerData", new object[] {
                        data,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateBannerData(BannerData data, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateBannerData", new object[] {
                        data,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateBannerData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBannerDataAsync(BannerData data, string username, string password) {
            this.UpdateBannerDataAsync(data, username, password, null);
        }
        
        /// <remarks/>
        public void UpdateBannerDataAsync(BannerData data, string username, string password, object userState) {
            if ((this.UpdateBannerDataOperationCompleted == null)) {
                this.UpdateBannerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBannerDataOperationCompleted);
            }
            this.InvokeAsync("UpdateBannerData", new object[] {
                        data,
                        username,
                        password}, this.UpdateBannerDataOperationCompleted, userState);
        }
        
        private void OnUpdateBannerDataOperationCompleted(object arg) {
            if ((this.UpdateBannerDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBannerDataCompleted(this, new UpdateBannerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteBannerData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteBannerData(int id, string username, string password) {
            object[] results = this.Invoke("DeleteBannerData", new object[] {
                        id,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteBannerData(int id, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteBannerData", new object[] {
                        id,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteBannerData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBannerDataAsync(int id, string username, string password) {
            this.DeleteBannerDataAsync(id, username, password, null);
        }
        
        /// <remarks/>
        public void DeleteBannerDataAsync(int id, string username, string password, object userState) {
            if ((this.DeleteBannerDataOperationCompleted == null)) {
                this.DeleteBannerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBannerDataOperationCompleted);
            }
            this.InvokeAsync("DeleteBannerData", new object[] {
                        id,
                        username,
                        password}, this.DeleteBannerDataOperationCompleted, userState);
        }
        
        private void OnDeleteBannerDataOperationCompleted(object arg) {
            if ((this.DeleteBannerDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBannerDataCompleted(this, new DeleteBannerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEvents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public EventData[] GetEvents(System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("GetEvents", new object[] {
                        start,
                        end});
            return ((EventData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEvents(System.DateTime start, System.DateTime end, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEvents", new object[] {
                        start,
                        end}, callback, asyncState);
        }
        
        /// <remarks/>
        public EventData[] EndGetEvents(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((EventData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEventsAsync(System.DateTime start, System.DateTime end) {
            this.GetEventsAsync(start, end, null);
        }
        
        /// <remarks/>
        public void GetEventsAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.GetEventsOperationCompleted == null)) {
                this.GetEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventsOperationCompleted);
            }
            this.InvokeAsync("GetEvents", new object[] {
                        start,
                        end}, this.GetEventsOperationCompleted, userState);
        }
        
        private void OnGetEventsOperationCompleted(object arg) {
            if ((this.GetEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventsCompleted(this, new GetEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEventData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EventData GetEventData(int id) {
            object[] results = this.Invoke("GetEventData", new object[] {
                        id});
            return ((EventData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEventData(int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEventData", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public EventData EndGetEventData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((EventData)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventDataAsync(int id) {
            this.GetEventDataAsync(id, null);
        }
        
        /// <remarks/>
        public void GetEventDataAsync(int id, object userState) {
            if ((this.GetEventDataOperationCompleted == null)) {
                this.GetEventDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventDataOperationCompleted);
            }
            this.InvokeAsync("GetEventData", new object[] {
                        id}, this.GetEventDataOperationCompleted, userState);
        }
        
        private void OnGetEventDataOperationCompleted(object arg) {
            if ((this.GetEventDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventDataCompleted(this, new GetEventDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEventData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateEventData(EventData data, string username, string password) {
            object[] results = this.Invoke("UpdateEventData", new object[] {
                        data,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateEventData(EventData data, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateEventData", new object[] {
                        data,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateEventData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEventDataAsync(EventData data, string username, string password) {
            this.UpdateEventDataAsync(data, username, password, null);
        }
        
        /// <remarks/>
        public void UpdateEventDataAsync(EventData data, string username, string password, object userState) {
            if ((this.UpdateEventDataOperationCompleted == null)) {
                this.UpdateEventDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEventDataOperationCompleted);
            }
            this.InvokeAsync("UpdateEventData", new object[] {
                        data,
                        username,
                        password}, this.UpdateEventDataOperationCompleted, userState);
        }
        
        private void OnUpdateEventDataOperationCompleted(object arg) {
            if ((this.UpdateEventDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEventDataCompleted(this, new UpdateEventDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteEventData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteEventData(int id, string username, string password) {
            object[] results = this.Invoke("DeleteEventData", new object[] {
                        id,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteEventData(int id, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteEventData", new object[] {
                        id,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteEventData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEventDataAsync(int id, string username, string password) {
            this.DeleteEventDataAsync(id, username, password, null);
        }
        
        /// <remarks/>
        public void DeleteEventDataAsync(int id, string username, string password, object userState) {
            if ((this.DeleteEventDataOperationCompleted == null)) {
                this.DeleteEventDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEventDataOperationCompleted);
            }
            this.InvokeAsync("DeleteEventData", new object[] {
                        id,
                        username,
                        password}, this.DeleteEventDataOperationCompleted, userState);
        }
        
        private void OnDeleteEventDataOperationCompleted(object arg) {
            if ((this.DeleteEventDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEventDataCompleted(this, new DeleteEventDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChampionshipAttachments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AttachmentData[] GetChampionshipAttachments(int champCategoryID) {
            object[] results = this.Invoke("GetChampionshipAttachments", new object[] {
                        champCategoryID});
            return ((AttachmentData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChampionshipAttachments(int champCategoryID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChampionshipAttachments", new object[] {
                        champCategoryID}, callback, asyncState);
        }
        
        /// <remarks/>
        public AttachmentData[] EndGetChampionshipAttachments(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AttachmentData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChampionshipAttachmentsAsync(int champCategoryID) {
            this.GetChampionshipAttachmentsAsync(champCategoryID, null);
        }
        
        /// <remarks/>
        public void GetChampionshipAttachmentsAsync(int champCategoryID, object userState) {
            if ((this.GetChampionshipAttachmentsOperationCompleted == null)) {
                this.GetChampionshipAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChampionshipAttachmentsOperationCompleted);
            }
            this.InvokeAsync("GetChampionshipAttachments", new object[] {
                        champCategoryID}, this.GetChampionshipAttachmentsOperationCompleted, userState);
        }
        
        private void OnGetChampionshipAttachmentsOperationCompleted(object arg) {
            if ((this.GetChampionshipAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChampionshipAttachmentsCompleted(this, new GetChampionshipAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddChampionshipAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddChampionshipAttachment(int champCategoryID, int attachmentID) {
            object[] results = this.Invoke("AddChampionshipAttachment", new object[] {
                        champCategoryID,
                        attachmentID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddChampionshipAttachment(int champCategoryID, int attachmentID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddChampionshipAttachment", new object[] {
                        champCategoryID,
                        attachmentID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddChampionshipAttachment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddChampionshipAttachmentAsync(int champCategoryID, int attachmentID) {
            this.AddChampionshipAttachmentAsync(champCategoryID, attachmentID, null);
        }
        
        /// <remarks/>
        public void AddChampionshipAttachmentAsync(int champCategoryID, int attachmentID, object userState) {
            if ((this.AddChampionshipAttachmentOperationCompleted == null)) {
                this.AddChampionshipAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddChampionshipAttachmentOperationCompleted);
            }
            this.InvokeAsync("AddChampionshipAttachment", new object[] {
                        champCategoryID,
                        attachmentID}, this.AddChampionshipAttachmentOperationCompleted, userState);
        }
        
        private void OnAddChampionshipAttachmentOperationCompleted(object arg) {
            if ((this.AddChampionshipAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddChampionshipAttachmentCompleted(this, new AddChampionshipAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveChampionshipAttachment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveChampionshipAttachment(int champCategoryID, int attachmentID) {
            object[] results = this.Invoke("RemoveChampionshipAttachment", new object[] {
                        champCategoryID,
                        attachmentID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveChampionshipAttachment(int champCategoryID, int attachmentID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveChampionshipAttachment", new object[] {
                        champCategoryID,
                        attachmentID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRemoveChampionshipAttachment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveChampionshipAttachmentAsync(int champCategoryID, int attachmentID) {
            this.RemoveChampionshipAttachmentAsync(champCategoryID, attachmentID, null);
        }
        
        /// <remarks/>
        public void RemoveChampionshipAttachmentAsync(int champCategoryID, int attachmentID, object userState) {
            if ((this.RemoveChampionshipAttachmentOperationCompleted == null)) {
                this.RemoveChampionshipAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveChampionshipAttachmentOperationCompleted);
            }
            this.InvokeAsync("RemoveChampionshipAttachment", new object[] {
                        champCategoryID,
                        attachmentID}, this.RemoveChampionshipAttachmentOperationCompleted, userState);
        }
        
        private void OnRemoveChampionshipAttachmentOperationCompleted(object arg) {
            if ((this.RemoveChampionshipAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveChampionshipAttachmentCompleted(this, new RemoveChampionshipAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRegionArticles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticleData GetRegionArticles(int regionID, bool blnClubs) {
            object[] results = this.Invoke("GetRegionArticles", new object[] {
                        regionID,
                        blnClubs});
            return ((ArticleData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRegionArticles(int regionID, bool blnClubs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRegionArticles", new object[] {
                        regionID,
                        blnClubs}, callback, asyncState);
        }
        
        /// <remarks/>
        public ArticleData EndGetRegionArticles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ArticleData)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegionArticlesAsync(int regionID, bool blnClubs) {
            this.GetRegionArticlesAsync(regionID, blnClubs, null);
        }
        
        /// <remarks/>
        public void GetRegionArticlesAsync(int regionID, bool blnClubs, object userState) {
            if ((this.GetRegionArticlesOperationCompleted == null)) {
                this.GetRegionArticlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegionArticlesOperationCompleted);
            }
            this.InvokeAsync("GetRegionArticles", new object[] {
                        regionID,
                        blnClubs}, this.GetRegionArticlesOperationCompleted, userState);
        }
        
        private void OnGetRegionArticlesOperationCompleted(object arg) {
            if ((this.GetRegionArticlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegionArticlesCompleted(this, new GetRegionArticlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRegionArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateRegionArticle(int regionID, bool blnClubs, int articleID) {
            object[] results = this.Invoke("UpdateRegionArticle", new object[] {
                        regionID,
                        blnClubs,
                        articleID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateRegionArticle(int regionID, bool blnClubs, int articleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateRegionArticle", new object[] {
                        regionID,
                        blnClubs,
                        articleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateRegionArticle(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRegionArticleAsync(int regionID, bool blnClubs, int articleID) {
            this.UpdateRegionArticleAsync(regionID, blnClubs, articleID, null);
        }
        
        /// <remarks/>
        public void UpdateRegionArticleAsync(int regionID, bool blnClubs, int articleID, object userState) {
            if ((this.UpdateRegionArticleOperationCompleted == null)) {
                this.UpdateRegionArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRegionArticleOperationCompleted);
            }
            this.InvokeAsync("UpdateRegionArticle", new object[] {
                        regionID,
                        blnClubs,
                        articleID}, this.UpdateRegionArticleOperationCompleted, userState);
        }
        
        private void OnUpdateRegionArticleOperationCompleted(object arg) {
            if ((this.UpdateRegionArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRegionArticleCompleted(this, new UpdateRegionArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveRegionArticle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveRegionArticle(int regionID, bool blnClubs) {
            object[] results = this.Invoke("RemoveRegionArticle", new object[] {
                        regionID,
                        blnClubs});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveRegionArticle(int regionID, bool blnClubs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveRegionArticle", new object[] {
                        regionID,
                        blnClubs}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRemoveRegionArticle(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveRegionArticleAsync(int regionID, bool blnClubs) {
            this.RemoveRegionArticleAsync(regionID, blnClubs, null);
        }
        
        /// <remarks/>
        public void RemoveRegionArticleAsync(int regionID, bool blnClubs, object userState) {
            if ((this.RemoveRegionArticleOperationCompleted == null)) {
                this.RemoveRegionArticleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRegionArticleOperationCompleted);
            }
            this.InvokeAsync("RemoveRegionArticle", new object[] {
                        regionID,
                        blnClubs}, this.RemoveRegionArticleOperationCompleted, userState);
        }
        
        private void OnRemoveRegionArticleOperationCompleted(object arg) {
            if ((this.RemoveRegionArticleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRegionArticleCompleted(this, new RemoveRegionArticleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllGalleryImages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImageData[] GetAllGalleryImages() {
            object[] results = this.Invoke("GetAllGalleryImages", new object[0]);
            return ((ImageData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllGalleryImages(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllGalleryImages", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ImageData[] EndGetAllGalleryImages(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ImageData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGalleryImagesAsync() {
            this.GetAllGalleryImagesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllGalleryImagesAsync(object userState) {
            if ((this.GetAllGalleryImagesOperationCompleted == null)) {
                this.GetAllGalleryImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGalleryImagesOperationCompleted);
            }
            this.InvokeAsync("GetAllGalleryImages", new object[0], this.GetAllGalleryImagesOperationCompleted, userState);
        }
        
        private void OnGetAllGalleryImagesOperationCompleted(object arg) {
            if ((this.GetAllGalleryImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGalleryImagesCompleted(this, new GetAllGalleryImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGalleryImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImageData GetGalleryImage(int imageID) {
            object[] results = this.Invoke("GetGalleryImage", new object[] {
                        imageID});
            return ((ImageData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGalleryImage(int imageID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGalleryImage", new object[] {
                        imageID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ImageData EndGetGalleryImage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ImageData)(results[0]));
        }
        
        /// <remarks/>
        public void GetGalleryImageAsync(int imageID) {
            this.GetGalleryImageAsync(imageID, null);
        }
        
        /// <remarks/>
        public void GetGalleryImageAsync(int imageID, object userState) {
            if ((this.GetGalleryImageOperationCompleted == null)) {
                this.GetGalleryImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGalleryImageOperationCompleted);
            }
            this.InvokeAsync("GetGalleryImage", new object[] {
                        imageID}, this.GetGalleryImageOperationCompleted, userState);
        }
        
        private void OnGetGalleryImageOperationCompleted(object arg) {
            if ((this.GetGalleryImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGalleryImageCompleted(this, new GetGalleryImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImagesByGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImageData[] GetImagesByGroup(string strGroupName, string strSubGroup) {
            object[] results = this.Invoke("GetImagesByGroup", new object[] {
                        strGroupName,
                        strSubGroup});
            return ((ImageData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetImagesByGroup(string strGroupName, string strSubGroup, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetImagesByGroup", new object[] {
                        strGroupName,
                        strSubGroup}, callback, asyncState);
        }
        
        /// <remarks/>
        public ImageData[] EndGetImagesByGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ImageData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImagesByGroupAsync(string strGroupName, string strSubGroup) {
            this.GetImagesByGroupAsync(strGroupName, strSubGroup, null);
        }
        
        /// <remarks/>
        public void GetImagesByGroupAsync(string strGroupName, string strSubGroup, object userState) {
            if ((this.GetImagesByGroupOperationCompleted == null)) {
                this.GetImagesByGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImagesByGroupOperationCompleted);
            }
            this.InvokeAsync("GetImagesByGroup", new object[] {
                        strGroupName,
                        strSubGroup}, this.GetImagesByGroupOperationCompleted, userState);
        }
        
        private void OnGetImagesByGroupOperationCompleted(object arg) {
            if ((this.GetImagesByGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImagesByGroupCompleted(this, new GetImagesByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGalleryGroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object[] GetGalleryGroups() {
            object[] results = this.Invoke("GetGalleryGroups", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGalleryGroups(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGalleryGroups", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetGalleryGroups(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGalleryGroupsAsync() {
            this.GetGalleryGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetGalleryGroupsAsync(object userState) {
            if ((this.GetGalleryGroupsOperationCompleted == null)) {
                this.GetGalleryGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGalleryGroupsOperationCompleted);
            }
            this.InvokeAsync("GetGalleryGroups", new object[0], this.GetGalleryGroupsOperationCompleted, userState);
        }
        
        private void OnGetGalleryGroupsOperationCompleted(object arg) {
            if ((this.GetGalleryGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGalleryGroupsCompleted(this, new GetGalleryGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGalleryImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateGalleryImage(ImageData data) {
            object[] results = this.Invoke("UpdateGalleryImage", new object[] {
                        data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateGalleryImage(ImageData data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateGalleryImage", new object[] {
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateGalleryImage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGalleryImageAsync(ImageData data) {
            this.UpdateGalleryImageAsync(data, null);
        }
        
        /// <remarks/>
        public void UpdateGalleryImageAsync(ImageData data, object userState) {
            if ((this.UpdateGalleryImageOperationCompleted == null)) {
                this.UpdateGalleryImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGalleryImageOperationCompleted);
            }
            this.InvokeAsync("UpdateGalleryImage", new object[] {
                        data}, this.UpdateGalleryImageOperationCompleted, userState);
        }
        
        private void OnUpdateGalleryImageOperationCompleted(object arg) {
            if ((this.UpdateGalleryImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGalleryImageCompleted(this, new UpdateGalleryImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddImageView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddImageView(int imageID) {
            object[] results = this.Invoke("AddImageView", new object[] {
                        imageID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddImageView(int imageID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddImageView", new object[] {
                        imageID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddImageView(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddImageViewAsync(int imageID) {
            this.AddImageViewAsync(imageID, null);
        }
        
        /// <remarks/>
        public void AddImageViewAsync(int imageID, object userState) {
            if ((this.AddImageViewOperationCompleted == null)) {
                this.AddImageViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddImageViewOperationCompleted);
            }
            this.InvokeAsync("AddImageView", new object[] {
                        imageID}, this.AddImageViewOperationCompleted, userState);
        }
        
        private void OnAddImageViewOperationCompleted(object arg) {
            if ((this.AddImageViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddImageViewCompleted(this, new AddImageViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteGallreyImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteGallreyImage(int imageID) {
            object[] results = this.Invoke("DeleteGallreyImage", new object[] {
                        imageID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteGallreyImage(int imageID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteGallreyImage", new object[] {
                        imageID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteGallreyImage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGallreyImageAsync(int imageID) {
            this.DeleteGallreyImageAsync(imageID, null);
        }
        
        /// <remarks/>
        public void DeleteGallreyImageAsync(int imageID, object userState) {
            if ((this.DeleteGallreyImageOperationCompleted == null)) {
                this.DeleteGallreyImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGallreyImageOperationCompleted);
            }
            this.InvokeAsync("DeleteGallreyImage", new object[] {
                        imageID}, this.DeleteGallreyImageOperationCompleted, userState);
        }
        
        private void OnDeleteGallreyImageOperationCompleted(object arg) {
            if ((this.DeleteGallreyImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGallreyImageCompleted(this, new DeleteGallreyImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArticleComments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArticleCommentData[] GetArticleComments(int articleID) {
            object[] results = this.Invoke("GetArticleComments", new object[] {
                        articleID});
            return ((ArticleCommentData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetArticleComments(int articleID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetArticleComments", new object[] {
                        articleID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ArticleCommentData[] EndGetArticleComments(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ArticleCommentData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArticleCommentsAsync(int articleID) {
            this.GetArticleCommentsAsync(articleID, null);
        }
        
        /// <remarks/>
        public void GetArticleCommentsAsync(int articleID, object userState) {
            if ((this.GetArticleCommentsOperationCompleted == null)) {
                this.GetArticleCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArticleCommentsOperationCompleted);
            }
            this.InvokeAsync("GetArticleComments", new object[] {
                        articleID}, this.GetArticleCommentsOperationCompleted, userState);
        }
        
        private void OnGetArticleCommentsOperationCompleted(object arg) {
            if ((this.GetArticleCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArticleCommentsCompleted(this, new GetArticleCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateArticleComment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateArticleComment(ArticleCommentData data, string username, string password) {
            object[] results = this.Invoke("UpdateArticleComment", new object[] {
                        data,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateArticleComment(ArticleCommentData data, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateArticleComment", new object[] {
                        data,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateArticleComment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateArticleCommentAsync(ArticleCommentData data, string username, string password) {
            this.UpdateArticleCommentAsync(data, username, password, null);
        }
        
        /// <remarks/>
        public void UpdateArticleCommentAsync(ArticleCommentData data, string username, string password, object userState) {
            if ((this.UpdateArticleCommentOperationCompleted == null)) {
                this.UpdateArticleCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateArticleCommentOperationCompleted);
            }
            this.InvokeAsync("UpdateArticleComment", new object[] {
                        data,
                        username,
                        password}, this.UpdateArticleCommentOperationCompleted, userState);
        }
        
        private void OnUpdateArticleCommentOperationCompleted(object arg) {
            if ((this.UpdateArticleCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateArticleCommentCompleted(this, new UpdateArticleCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingCompetitorsTeamsData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PendingCompetitorData[] GetPendingCompetitorsTeamsData() {
            object[] results = this.Invoke("GetPendingCompetitorsTeamsData", new object[0]);
            return ((PendingCompetitorData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPendingCompetitorsTeamsData(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPendingCompetitorsTeamsData", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public PendingCompetitorData[] EndGetPendingCompetitorsTeamsData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PendingCompetitorData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPendingCompetitorsTeamsDataAsync() {
            this.GetPendingCompetitorsTeamsDataAsync(null);
        }
        
        /// <remarks/>
        public void GetPendingCompetitorsTeamsDataAsync(object userState) {
            if ((this.GetPendingCompetitorsTeamsDataOperationCompleted == null)) {
                this.GetPendingCompetitorsTeamsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPendingCompetitorsTeamsDataOperationCompleted);
            }
            this.InvokeAsync("GetPendingCompetitorsTeamsData", new object[0], this.GetPendingCompetitorsTeamsDataOperationCompleted, userState);
        }
        
        private void OnGetPendingCompetitorsTeamsDataOperationCompleted(object arg) {
            if ((this.GetPendingCompetitorsTeamsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPendingCompetitorsTeamsDataCompleted(this, new GetPendingCompetitorsTeamsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingCompetitors", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PendingCompetitorData[] GetPendingCompetitors(int teamID, string strPhase) {
            object[] results = this.Invoke("GetPendingCompetitors", new object[] {
                        teamID,
                        strPhase});
            return ((PendingCompetitorData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPendingCompetitors(int teamID, string strPhase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPendingCompetitors", new object[] {
                        teamID,
                        strPhase}, callback, asyncState);
        }
        
        /// <remarks/>
        public PendingCompetitorData[] EndGetPendingCompetitors(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PendingCompetitorData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPendingCompetitorsAsync(int teamID, string strPhase) {
            this.GetPendingCompetitorsAsync(teamID, strPhase, null);
        }
        
        /// <remarks/>
        public void GetPendingCompetitorsAsync(int teamID, string strPhase, object userState) {
            if ((this.GetPendingCompetitorsOperationCompleted == null)) {
                this.GetPendingCompetitorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPendingCompetitorsOperationCompleted);
            }
            this.InvokeAsync("GetPendingCompetitors", new object[] {
                        teamID,
                        strPhase}, this.GetPendingCompetitorsOperationCompleted, userState);
        }
        
        private void OnGetPendingCompetitorsOperationCompleted(object arg) {
            if ((this.GetPendingCompetitorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPendingCompetitorsCompleted(this, new GetPendingCompetitorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPendingCompetitors", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddPendingCompetitors(int teamID, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] PendingCompetitorData[] competitors) {
            object[] results = this.Invoke("AddPendingCompetitors", new object[] {
                        teamID,
                        competitors});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddPendingCompetitors(int teamID, PendingCompetitorData[] competitors, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddPendingCompetitors", new object[] {
                        teamID,
                        competitors}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddPendingCompetitors(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddPendingCompetitorsAsync(int teamID, PendingCompetitorData[] competitors) {
            this.AddPendingCompetitorsAsync(teamID, competitors, null);
        }
        
        /// <remarks/>
        public void AddPendingCompetitorsAsync(int teamID, PendingCompetitorData[] competitors, object userState) {
            if ((this.AddPendingCompetitorsOperationCompleted == null)) {
                this.AddPendingCompetitorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPendingCompetitorsOperationCompleted);
            }
            this.InvokeAsync("AddPendingCompetitors", new object[] {
                        teamID,
                        competitors}, this.AddPendingCompetitorsOperationCompleted, userState);
        }
        
        private void OnAddPendingCompetitorsOperationCompleted(object arg) {
            if ((this.AddPendingCompetitorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPendingCompetitorsCompleted(this, new AddPendingCompetitorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingMatchScores", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public MatchData[] GetPendingMatchScores(int userid, string username, string password) {
            object[] results = this.Invoke("GetPendingMatchScores", new object[] {
                        userid,
                        username,
                        password});
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPendingMatchScores(int userid, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPendingMatchScores", new object[] {
                        userid,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public MatchData[] EndGetPendingMatchScores(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPendingMatchScoresAsync(int userid, string username, string password) {
            this.GetPendingMatchScoresAsync(userid, username, password, null);
        }
        
        /// <remarks/>
        public void GetPendingMatchScoresAsync(int userid, string username, string password, object userState) {
            if ((this.GetPendingMatchScoresOperationCompleted == null)) {
                this.GetPendingMatchScoresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPendingMatchScoresOperationCompleted);
            }
            this.InvokeAsync("GetPendingMatchScores", new object[] {
                        userid,
                        username,
                        password}, this.GetPendingMatchScoresOperationCompleted, userState);
        }
        
        private void OnGetPendingMatchScoresOperationCompleted(object arg) {
            if ((this.GetPendingMatchScoresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPendingMatchScoresCompleted(this, new GetPendingMatchScoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePendingMatchScores", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePendingMatchScores(int userid, string username, string password, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] MatchData[] matches) {
            object[] results = this.Invoke("UpdatePendingMatchScores", new object[] {
                        userid,
                        username,
                        password,
                        matches});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePendingMatchScores(int userid, string username, string password, MatchData[] matches, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePendingMatchScores", new object[] {
                        userid,
                        username,
                        password,
                        matches}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdatePendingMatchScores(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePendingMatchScoresAsync(int userid, string username, string password, MatchData[] matches) {
            this.UpdatePendingMatchScoresAsync(userid, username, password, matches, null);
        }
        
        /// <remarks/>
        public void UpdatePendingMatchScoresAsync(int userid, string username, string password, MatchData[] matches, object userState) {
            if ((this.UpdatePendingMatchScoresOperationCompleted == null)) {
                this.UpdatePendingMatchScoresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePendingMatchScoresOperationCompleted);
            }
            this.InvokeAsync("UpdatePendingMatchScores", new object[] {
                        userid,
                        username,
                        password,
                        matches}, this.UpdatePendingMatchScoresOperationCompleted, userState);
        }
        
        private void OnUpdatePendingMatchScoresOperationCompleted(object arg) {
            if ((this.UpdatePendingMatchScoresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePendingMatchScoresCompleted(this, new UpdatePendingMatchScoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitPendingMatchScores", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CommitPendingMatchScores(string username, string password, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] MatchData[] matches) {
            object[] results = this.Invoke("CommitPendingMatchScores", new object[] {
                        username,
                        password,
                        matches});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCommitPendingMatchScores(string username, string password, MatchData[] matches, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CommitPendingMatchScores", new object[] {
                        username,
                        password,
                        matches}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCommitPendingMatchScores(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CommitPendingMatchScoresAsync(string username, string password, MatchData[] matches) {
            this.CommitPendingMatchScoresAsync(username, password, matches, null);
        }
        
        /// <remarks/>
        public void CommitPendingMatchScoresAsync(string username, string password, MatchData[] matches, object userState) {
            if ((this.CommitPendingMatchScoresOperationCompleted == null)) {
                this.CommitPendingMatchScoresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitPendingMatchScoresOperationCompleted);
            }
            this.InvokeAsync("CommitPendingMatchScores", new object[] {
                        username,
                        password,
                        matches}, this.CommitPendingMatchScoresOperationCompleted, userState);
        }
        
        private void OnCommitPendingMatchScoresOperationCompleted(object arg) {
            if ((this.CommitPendingMatchScoresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitPendingMatchScoresCompleted(this, new CommitPendingMatchScoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSchoolMatches", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public MatchData[] GetSchoolMatches(int schoolID) {
            object[] results = this.Invoke("GetSchoolMatches", new object[] {
                        schoolID});
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSchoolMatches(int schoolID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSchoolMatches", new object[] {
                        schoolID}, callback, asyncState);
        }
        
        /// <remarks/>
        public MatchData[] EndGetSchoolMatches(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSchoolMatchesAsync(int schoolID) {
            this.GetSchoolMatchesAsync(schoolID, null);
        }
        
        /// <remarks/>
        public void GetSchoolMatchesAsync(int schoolID, object userState) {
            if ((this.GetSchoolMatchesOperationCompleted == null)) {
                this.GetSchoolMatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchoolMatchesOperationCompleted);
            }
            this.InvokeAsync("GetSchoolMatches", new object[] {
                        schoolID}, this.GetSchoolMatchesOperationCompleted, userState);
        }
        
        private void OnGetSchoolMatchesOperationCompleted(object arg) {
            if ((this.GetSchoolMatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchoolMatchesCompleted(this, new GetSchoolMatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSportDailyGames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SportDailyGames[] GetSportDailyGames() {
            object[] results = this.Invoke("GetSportDailyGames", new object[0]);
            return ((SportDailyGames[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSportDailyGames(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSportDailyGames", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public SportDailyGames[] EndGetSportDailyGames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SportDailyGames[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSportDailyGamesAsync() {
            this.GetSportDailyGamesAsync(null);
        }
        
        /// <remarks/>
        public void GetSportDailyGamesAsync(object userState) {
            if ((this.GetSportDailyGamesOperationCompleted == null)) {
                this.GetSportDailyGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSportDailyGamesOperationCompleted);
            }
            this.InvokeAsync("GetSportDailyGames", new object[0], this.GetSportDailyGamesOperationCompleted, userState);
        }
        
        private void OnGetSportDailyGamesOperationCompleted(object arg) {
            if ((this.GetSportDailyGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSportDailyGamesCompleted(this, new GetSportDailyGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFacilityHostDays", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FacilityHostDay[] GetFacilityHostDays() {
            object[] results = this.Invoke("GetFacilityHostDays", new object[0]);
            return ((FacilityHostDay[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFacilityHostDays(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFacilityHostDays", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public FacilityHostDay[] EndGetFacilityHostDays(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FacilityHostDay[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFacilityHostDaysAsync() {
            this.GetFacilityHostDaysAsync(null);
        }
        
        /// <remarks/>
        public void GetFacilityHostDaysAsync(object userState) {
            if ((this.GetFacilityHostDaysOperationCompleted == null)) {
                this.GetFacilityHostDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFacilityHostDaysOperationCompleted);
            }
            this.InvokeAsync("GetFacilityHostDays", new object[0], this.GetFacilityHostDaysOperationCompleted, userState);
        }
        
        private void OnGetFacilityHostDaysOperationCompleted(object arg) {
            if ((this.GetFacilityHostDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFacilityHostDaysCompleted(this, new GetFacilityHostDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTeamStudents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FullStudentData[] GetTeamStudents(int teamId) {
            object[] results = this.Invoke("GetTeamStudents", new object[] {
                        teamId});
            return ((FullStudentData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTeamStudents(int teamId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTeamStudents", new object[] {
                        teamId}, callback, asyncState);
        }
        
        /// <remarks/>
        public FullStudentData[] EndGetTeamStudents(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FullStudentData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTeamStudentsAsync(int teamId) {
            this.GetTeamStudentsAsync(teamId, null);
        }
        
        /// <remarks/>
        public void GetTeamStudentsAsync(int teamId, object userState) {
            if ((this.GetTeamStudentsOperationCompleted == null)) {
                this.GetTeamStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeamStudentsOperationCompleted);
            }
            this.InvokeAsync("GetTeamStudents", new object[] {
                        teamId}, this.GetTeamStudentsOperationCompleted, userState);
        }
        
        private void OnGetTeamStudentsOperationCompleted(object arg) {
            if ((this.GetTeamStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeamStudentsCompleted(this, new GetTeamStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFullTeamDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FullTeamData GetFullTeamDetails(int teamId) {
            object[] results = this.Invoke("GetFullTeamDetails", new object[] {
                        teamId});
            return ((FullTeamData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFullTeamDetails(int teamId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFullTeamDetails", new object[] {
                        teamId}, callback, asyncState);
        }
        
        /// <remarks/>
        public FullTeamData EndGetFullTeamDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FullTeamData)(results[0]));
        }
        
        /// <remarks/>
        public void GetFullTeamDetailsAsync(int teamId) {
            this.GetFullTeamDetailsAsync(teamId, null);
        }
        
        /// <remarks/>
        public void GetFullTeamDetailsAsync(int teamId, object userState) {
            if ((this.GetFullTeamDetailsOperationCompleted == null)) {
                this.GetFullTeamDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullTeamDetailsOperationCompleted);
            }
            this.InvokeAsync("GetFullTeamDetails", new object[] {
                        teamId}, this.GetFullTeamDetailsOperationCompleted, userState);
        }
        
        private void OnGetFullTeamDetailsOperationCompleted(object arg) {
            if ((this.GetFullTeamDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullTeamDetailsCompleted(this, new GetFullTeamDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChampionshipsBySeason", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChampionshipData[] GetChampionshipsBySeason(int season, int region) {
            object[] results = this.Invoke("GetChampionshipsBySeason", new object[] {
                        season,
                        region});
            return ((ChampionshipData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChampionshipsBySeason(int season, int region, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChampionshipsBySeason", new object[] {
                        season,
                        region}, callback, asyncState);
        }
        
        /// <remarks/>
        public ChampionshipData[] EndGetChampionshipsBySeason(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ChampionshipData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChampionshipsBySeasonAsync(int season, int region) {
            this.GetChampionshipsBySeasonAsync(season, region, null);
        }
        
        /// <remarks/>
        public void GetChampionshipsBySeasonAsync(int season, int region, object userState) {
            if ((this.GetChampionshipsBySeasonOperationCompleted == null)) {
                this.GetChampionshipsBySeasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChampionshipsBySeasonOperationCompleted);
            }
            this.InvokeAsync("GetChampionshipsBySeason", new object[] {
                        season,
                        region}, this.GetChampionshipsBySeasonOperationCompleted, userState);
        }
        
        private void OnGetChampionshipsBySeasonOperationCompleted(object arg) {
            if ((this.GetChampionshipsBySeasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChampionshipsBySeasonCompleted(this, new GetChampionshipsBySeasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MapExternalStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int MapExternalStudent(int studentId, int userId, string ipAddress) {
            object[] results = this.Invoke("MapExternalStudent", new object[] {
                        studentId,
                        userId,
                        ipAddress});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMapExternalStudent(int studentId, int userId, string ipAddress, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MapExternalStudent", new object[] {
                        studentId,
                        userId,
                        ipAddress}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndMapExternalStudent(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MapExternalStudentAsync(int studentId, int userId, string ipAddress) {
            this.MapExternalStudentAsync(studentId, userId, ipAddress, null);
        }
        
        /// <remarks/>
        public void MapExternalStudentAsync(int studentId, int userId, string ipAddress, object userState) {
            if ((this.MapExternalStudentOperationCompleted == null)) {
                this.MapExternalStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMapExternalStudentOperationCompleted);
            }
            this.InvokeAsync("MapExternalStudent", new object[] {
                        studentId,
                        userId,
                        ipAddress}, this.MapExternalStudentOperationCompleted, userState);
        }
        
        private void OnMapExternalStudentOperationCompleted(object arg) {
            if ((this.MapExternalStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MapExternalStudentCompleted(this, new MapExternalStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsExternallyAddedStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsExternallyAddedStudent(int idNumber) {
            object[] results = this.Invoke("IsExternallyAddedStudent", new object[] {
                        idNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsExternallyAddedStudent(int idNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsExternallyAddedStudent", new object[] {
                        idNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsExternallyAddedStudent(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsExternallyAddedStudentAsync(int idNumber) {
            this.IsExternallyAddedStudentAsync(idNumber, null);
        }
        
        /// <remarks/>
        public void IsExternallyAddedStudentAsync(int idNumber, object userState) {
            if ((this.IsExternallyAddedStudentOperationCompleted == null)) {
                this.IsExternallyAddedStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExternallyAddedStudentOperationCompleted);
            }
            this.InvokeAsync("IsExternallyAddedStudent", new object[] {
                        idNumber}, this.IsExternallyAddedStudentOperationCompleted, userState);
        }
        
        private void OnIsExternallyAddedStudentOperationCompleted(object arg) {
            if ((this.IsExternallyAddedStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExternallyAddedStudentCompleted(this, new IsExternallyAddedStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserData GetUserData(int userID) {
            object[] results = this.Invoke("GetUserData", new object[] {
                        userID});
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserData(int userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserData", new object[] {
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public UserData EndGetUserData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDataAsync(int userID) {
            this.GetUserDataAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUserDataAsync(int userID, object userState) {
            if ((this.GetUserDataOperationCompleted == null)) {
                this.GetUserDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDataOperationCompleted);
            }
            this.InvokeAsync("GetUserData", new object[] {
                        userID}, this.GetUserDataOperationCompleted, userState);
        }
        
        private void OnGetUserDataOperationCompleted(object arg) {
            if ((this.GetUserDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDataCompleted(this, new GetUserDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FlashNewsData {
        
        private int idField;
        
        private System.DateTime timeField;
        
        private string userField;
        
        private string contentsField;
        
        private LinkData[] linksField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string Contents {
            get {
                return this.contentsField;
            }
            set {
                this.contentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LinkData[] Links {
            get {
                return this.linksField;
            }
            set {
                this.linksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LinkData {
        
        private string uRLField;
        
        private string textField;
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserData {
        
        private int idField;
        
        private string usernameField;
        
        private string nameField;
        
        private string userPasswordField;
        
        private int userTypeField;
        
        private int permissionsField;
        
        private int userRegionField;
        
        private int userSchoolField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        public int UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Permissions {
            get {
                return this.permissionsField;
            }
            set {
                this.permissionsField = value;
            }
        }
        
        /// <remarks/>
        public int UserRegion {
            get {
                return this.userRegionField;
            }
            set {
                this.userRegionField = value;
            }
        }
        
        /// <remarks/>
        public int UserSchool {
            get {
                return this.userSchoolField;
            }
            set {
                this.userSchoolField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ChampionshipData {
        
        private int sportIdField;
        
        private string sportNameField;
        
        private int championshipIdField;
        
        private string championshipNameField;
        
        private int regionIdField;
        
        private string regionNameField;
        
        private ChampionshipCategoryData[] categoriesField;
        
        /// <remarks/>
        public int SportId {
            get {
                return this.sportIdField;
            }
            set {
                this.sportIdField = value;
            }
        }
        
        /// <remarks/>
        public string SportName {
            get {
                return this.sportNameField;
            }
            set {
                this.sportNameField = value;
            }
        }
        
        /// <remarks/>
        public int ChampionshipId {
            get {
                return this.championshipIdField;
            }
            set {
                this.championshipIdField = value;
            }
        }
        
        /// <remarks/>
        public string ChampionshipName {
            get {
                return this.championshipNameField;
            }
            set {
                this.championshipNameField = value;
            }
        }
        
        /// <remarks/>
        public int RegionId {
            get {
                return this.regionIdField;
            }
            set {
                this.regionIdField = value;
            }
        }
        
        /// <remarks/>
        public string RegionName {
            get {
                return this.regionNameField;
            }
            set {
                this.regionNameField = value;
            }
        }
        
        /// <remarks/>
        public ChampionshipCategoryData[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ChampionshipCategoryData {
        
        private int idField;
        
        private int categoryField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StudentData {
        
        private int idField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PlayerData {
        
        private int idField;
        
        private int statusField;
        
        private int teamNumberField;
        
        private StudentData studentField;
        
        private SimpleData gradeField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int TeamNumber {
            get {
                return this.teamNumberField;
            }
            set {
                this.teamNumberField = value;
            }
        }
        
        /// <remarks/>
        public StudentData Student {
            get {
                return this.studentField;
            }
            set {
                this.studentField = value;
            }
        }
        
        /// <remarks/>
        public SimpleData Grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SimpleData {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SchoolData {
        
        private int idField;
        
        private string nameField;
        
        private string symbolField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FullTeamData {
        
        private int idField;
        
        private int teamStatusField;
        
        private int championshipStatusField;
        
        private int indexField;
        
        private System.DateTime registrationDateField;
        
        private SchoolData schoolField;
        
        private SimpleData cityField;
        
        private ChampionshipCategoryData categoryField;
        
        private SimpleData championshipField;
        
        private SimpleData sportField;
        
        private SimpleData regionField;
        
        private PlayerData[] playersField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int TeamStatus {
            get {
                return this.teamStatusField;
            }
            set {
                this.teamStatusField = value;
            }
        }
        
        /// <remarks/>
        public int ChampionshipStatus {
            get {
                return this.championshipStatusField;
            }
            set {
                this.championshipStatusField = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RegistrationDate {
            get {
                return this.registrationDateField;
            }
            set {
                this.registrationDateField = value;
            }
        }
        
        /// <remarks/>
        public SchoolData School {
            get {
                return this.schoolField;
            }
            set {
                this.schoolField = value;
            }
        }
        
        /// <remarks/>
        public SimpleData City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public ChampionshipCategoryData Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public SimpleData Championship {
            get {
                return this.championshipField;
            }
            set {
                this.championshipField = value;
            }
        }
        
        /// <remarks/>
        public SimpleData Sport {
            get {
                return this.sportField;
            }
            set {
                this.sportField = value;
            }
        }
        
        /// <remarks/>
        public SimpleData Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public PlayerData[] Players {
            get {
                return this.playersField;
            }
            set {
                this.playersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FullStudentData {
        
        private int idField;
        
        private FullStudentType typeField;
        
        private int gradeField;
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string idNumberField;
        
        private int schoolIdField;
        
        private System.DateTime birthDateField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public FullStudentType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int Grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string IdNumber {
            get {
                return this.idNumberField;
            }
            set {
                this.idNumberField = value;
            }
        }
        
        /// <remarks/>
        public int SchoolId {
            get {
                return this.schoolIdField;
            }
            set {
                this.schoolIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FullStudentType {
        
        /// <remarks/>
        Player,
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        School,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FacilityHostDay {
        
        private int regionIdField;
        
        private int indexField;
        
        private string dayField;
        
        /// <remarks/>
        public int RegionId {
            get {
                return this.regionIdField;
            }
            set {
                this.regionIdField = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public string Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SportDailyGames {
        
        private int regionIdField;
        
        private int sportIdField;
        
        private int dayField;
        
        private string categoryField;
        
        /// <remarks/>
        public int RegionId {
            get {
                return this.regionIdField;
            }
            set {
                this.regionIdField = value;
            }
        }
        
        /// <remarks/>
        public int SportId {
            get {
                return this.sportIdField;
            }
            set {
                this.sportIdField = value;
            }
        }
        
        /// <remarks/>
        public int Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MatchData {
        
        private int categoryField;
        
        private int phaseField;
        
        private int groupField;
        
        private int roundField;
        
        private int cycleField;
        
        private int matchField;
        
        private int teamAField;
        
        private int teamBField;
        
        private System.DateTime timeField;
        
        private double scoreAField;
        
        private double scoreBField;
        
        private int senderField;
        
        private int outcomeField;
        
        private string partsResultField;
        
        /// <remarks/>
        public int Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public int Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        public int Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public int Round {
            get {
                return this.roundField;
            }
            set {
                this.roundField = value;
            }
        }
        
        /// <remarks/>
        public int Cycle {
            get {
                return this.cycleField;
            }
            set {
                this.cycleField = value;
            }
        }
        
        /// <remarks/>
        public int Match {
            get {
                return this.matchField;
            }
            set {
                this.matchField = value;
            }
        }
        
        /// <remarks/>
        public int TeamA {
            get {
                return this.teamAField;
            }
            set {
                this.teamAField = value;
            }
        }
        
        /// <remarks/>
        public int TeamB {
            get {
                return this.teamBField;
            }
            set {
                this.teamBField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public double ScoreA {
            get {
                return this.scoreAField;
            }
            set {
                this.scoreAField = value;
            }
        }
        
        /// <remarks/>
        public double ScoreB {
            get {
                return this.scoreBField;
            }
            set {
                this.scoreBField = value;
            }
        }
        
        /// <remarks/>
        public int Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public int Outcome {
            get {
                return this.outcomeField;
            }
            set {
                this.outcomeField = value;
            }
        }
        
        /// <remarks/>
        public string PartsResult {
            get {
                return this.partsResultField;
            }
            set {
                this.partsResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PendingCompetitorData {
        
        private int idField;
        
        private int playerField;
        
        private int championshipCategoryField;
        
        private int competitionField;
        
        private int heatField;
        
        private int teamField;
        
        private string phaseField;
        
        private string groupField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Player {
            get {
                return this.playerField;
            }
            set {
                this.playerField = value;
            }
        }
        
        /// <remarks/>
        public int ChampionshipCategory {
            get {
                return this.championshipCategoryField;
            }
            set {
                this.championshipCategoryField = value;
            }
        }
        
        /// <remarks/>
        public int Competition {
            get {
                return this.competitionField;
            }
            set {
                this.competitionField = value;
            }
        }
        
        /// <remarks/>
        public int Heat {
            get {
                return this.heatField;
            }
            set {
                this.heatField = value;
            }
        }
        
        /// <remarks/>
        public int Team {
            get {
                return this.teamField;
            }
            set {
                this.teamField = value;
            }
        }
        
        /// <remarks/>
        public string Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ArticleCommentData {
        
        private int idField;
        
        private int articleField;
        
        private int numberField;
        
        private string visitorIPField;
        
        private string visitorNameField;
        
        private string visitorEmailField;
        
        private string captionField;
        
        private string contentsField;
        
        private System.DateTime datePostedField;
        
        private bool deletedField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Article {
            get {
                return this.articleField;
            }
            set {
                this.articleField = value;
            }
        }
        
        /// <remarks/>
        public int Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string VisitorIP {
            get {
                return this.visitorIPField;
            }
            set {
                this.visitorIPField = value;
            }
        }
        
        /// <remarks/>
        public string VisitorName {
            get {
                return this.visitorNameField;
            }
            set {
                this.visitorNameField = value;
            }
        }
        
        /// <remarks/>
        public string VisitorEmail {
            get {
                return this.visitorEmailField;
            }
            set {
                this.visitorEmailField = value;
            }
        }
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        public string Contents {
            get {
                return this.contentsField;
            }
            set {
                this.contentsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DatePosted {
            get {
                return this.datePostedField;
            }
            set {
                this.datePostedField = value;
            }
        }
        
        /// <remarks/>
        public bool Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ImageData {
        
        private int idField;
        
        private string pictureNameField;
        
        private string originalNameField;
        
        private string groupNameField;
        
        private string descriptionField;
        
        private int viewCountField;
        
        private string subGroupField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string PictureName {
            get {
                return this.pictureNameField;
            }
            set {
                this.pictureNameField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalName {
            get {
                return this.originalNameField;
            }
            set {
                this.originalNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int ViewCount {
            get {
                return this.viewCountField;
            }
            set {
                this.viewCountField = value;
            }
        }
        
        /// <remarks/>
        public string SubGroup {
            get {
                return this.subGroupField;
            }
            set {
                this.subGroupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class EventData {
        
        private int idField;
        
        private System.DateTime dateField;
        
        private string descriptionField;
        
        private string uRLField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BannerData {
        
        private int idField;
        
        private string url_150_150Field;
        
        private string url_760_80Field;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string url_150_150 {
            get {
                return this.url_150_150Field;
            }
            set {
                this.url_150_150Field = value;
            }
        }
        
        /// <remarks/>
        public string url_760_80 {
            get {
                return this.url_760_80Field;
            }
            set {
                this.url_760_80Field = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RegionData {
        
        private int idField;
        
        private string nameField;
        
        private string emailField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PageData {
        
        private int idField;
        
        private string captionField;
        
        private string contentsField;
        
        private string authorNameField;
        
        private string authorTitleField;
        
        private AttachmentData[] attachmentsField;
        
        private int indexField;
        
        private LinkData[] linksField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        public string Contents {
            get {
                return this.contentsField;
            }
            set {
                this.contentsField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorName {
            get {
                return this.authorNameField;
            }
            set {
                this.authorNameField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorTitle {
            get {
                return this.authorTitleField;
            }
            set {
                this.authorTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AttachmentData[] Attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LinkData[] Links {
            get {
                return this.linksField;
            }
            set {
                this.linksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AttachmentData {
        
        private int idField;
        
        private string fileNameField;
        
        private string descriptionField;
        
        private System.DateTime timeField;
        
        private string sentByField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public string SentBy {
            get {
                return this.sentByField;
            }
            set {
                this.sentByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ArticleData {
        
        private int idField;
        
        private System.DateTime timeField;
        
        private string userField;
        
        private string contentsField;
        
        private string[] imagesField;
        
        private string fileField;
        
        private string captionField;
        
        private string subCaptionField;
        
        private bool isPrimaryField;
        
        private bool isSubField;
        
        private bool isHotLinkField;
        
        private LinkData[] linksField;
        
        private AttachmentData[] attachmentsField;
        
        private int articleRegionField;
        
        private bool isClubsArticleField;
        
        private string authorNameField;
        
        private string[] imageDescriptionsField;
        
        private System.DateTime lastModifiedField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public string Contents {
            get {
                return this.contentsField;
            }
            set {
                this.contentsField = value;
            }
        }
        
        /// <remarks/>
        public string[] Images {
            get {
                return this.imagesField;
            }
            set {
                this.imagesField = value;
            }
        }
        
        /// <remarks/>
        public string File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        public string SubCaption {
            get {
                return this.subCaptionField;
            }
            set {
                this.subCaptionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrimary {
            get {
                return this.isPrimaryField;
            }
            set {
                this.isPrimaryField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSub {
            get {
                return this.isSubField;
            }
            set {
                this.isSubField = value;
            }
        }
        
        /// <remarks/>
        public bool IsHotLink {
            get {
                return this.isHotLinkField;
            }
            set {
                this.isHotLinkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LinkData[] Links {
            get {
                return this.linksField;
            }
            set {
                this.linksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AttachmentData[] Attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
        
        /// <remarks/>
        public int ArticleRegion {
            get {
                return this.articleRegionField;
            }
            set {
                this.articleRegionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsClubsArticle {
            get {
                return this.isClubsArticleField;
            }
            set {
                this.isClubsArticleField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorName {
            get {
                return this.authorNameField;
            }
            set {
                this.authorNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] ImageDescriptions {
            get {
                return this.imageDescriptionsField;
            }
            set {
                this.imageDescriptionsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PollResult {
        
        private int idField;
        
        private string visitorIpField;
        
        private string sessionIdField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string visitorIp {
            get {
                return this.visitorIpField;
            }
            set {
                this.visitorIpField = value;
            }
        }
        
        /// <remarks/>
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PollAnswerData {
        
        private int idField;
        
        private int pollIdField;
        
        private string answerField;
        
        private PollResult[] resultsField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int pollId {
            get {
                return this.pollIdField;
            }
            set {
                this.pollIdField = value;
            }
        }
        
        /// <remarks/>
        public string answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PollResult[] results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PollData {
        
        private int idField;
        
        private string questionField;
        
        private PollAnswerData[] possibleAnswersField;
        
        private System.DateTime creationDateField;
        
        private System.DateTime experationDateField;
        
        private int creatorField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PollAnswerData[] possibleAnswers {
            get {
                return this.possibleAnswersField;
            }
            set {
                this.possibleAnswersField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime experationDate {
            get {
                return this.experationDateField;
            }
            set {
                this.experationDateField = value;
            }
        }
        
        /// <remarks/>
        public int creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum PollReturnFilter {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        Latest,
        
        /// <remarks/>
        Oldest,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum WebSitePage {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Main,
        
        /// <remarks/>
        Register,
        
        /// <remarks/>
        Results,
        
        /// <remarks/>
        PlayerSelectionDialog,
        
        /// <remarks/>
        SchoolSelectionDialog,
        
        /// <remarks/>
        Gallery,
        
        /// <remarks/>
        SendToFriend,
        
        /// <remarks/>
        AddComment,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCurrentNewsCompletedEventHandler(object sender, GetCurrentNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FlashNewsData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FlashNewsData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNewsInRangeCompletedEventHandler(object sender, GetNewsInRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsInRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsInRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FlashNewsData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FlashNewsData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFlashnewsDataCompletedEventHandler(object sender, GetFlashnewsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlashnewsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlashnewsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FlashNewsData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FlashNewsData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateFlashNewsCompletedEventHandler(object sender, UpdateFlashNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFlashNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFlashNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteFlashNewsCompletedEventHandler(object sender, DeleteFlashNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFlashNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFlashNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getPollCompletedEventHandler(object sender, getPollCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPollCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPollCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PollData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PollData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getPollsByFilterCompletedEventHandler(object sender, getPollsByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPollsByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPollsByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PollData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PollData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void editAnswerCompletedEventHandler(object sender, editAnswerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editAnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editAnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void addPollCompletedEventHandler(object sender, addPollCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPollCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addPollCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void addAnswerToPollCompletedEventHandler(object sender, addAnswerToPollCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addAnswerToPollCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addAnswerToPollCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteAnswerCompletedEventHandler(object sender, deleteAnswerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deletePollCompletedEventHandler(object sender, deletePollCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePollCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deletePollCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void voteCompletedEventHandler(object sender, voteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class voteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal voteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void isCurrentUserAuthorizedToUpdateCompletedEventHandler(object sender, isCurrentUserAuthorizedToUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isCurrentUserAuthorizedToUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isCurrentUserAuthorizedToUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetArticlesCompletedEventHandler(object sender, GetArticlesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPrimaryArticleCompletedEventHandler(object sender, GetPrimaryArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrimaryArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrimaryArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSubArticlesCompletedEventHandler(object sender, GetSubArticlesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubArticlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubArticlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetArticlesCountCompletedEventHandler(object sender, GetArticlesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticlesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticlesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLatestNewsIDCompletedEventHandler(object sender, GetLatestNewsIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestNewsIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestNewsIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLatestArticleIDCompletedEventHandler(object sender, GetLatestArticleIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestArticleIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestArticleIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetArticleDataCompletedEventHandler(object sender, GetArticleDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetHotArticleCompletedEventHandler(object sender, GetHotArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHotArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHotArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetPrimaryAndSecondaryArticlesCompletedEventHandler(object sender, SetPrimaryAndSecondaryArticlesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPrimaryAndSecondaryArticlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPrimaryAndSecondaryArticlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateArticleCompletedEventHandler(object sender, UpdateArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteArticleCompletedEventHandler(object sender, DeleteArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void Page_HitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PurgeOldHitLogDataCompletedEventHandler(object sender, PurgeOldHitLogDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurgeOldHitLogDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurgeOldHitLogDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FindAttachmentCompletedEventHandler(object sender, FindAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAttachmentDataCompletedEventHandler(object sender, GetAttachmentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AttachmentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AttachmentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateAttachmentCompletedEventHandler(object sender, UpdateAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteAttachmentCompletedEventHandler(object sender, DeleteAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FindPageDataCompletedEventHandler(object sender, FindPageDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindPageDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindPageDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PageData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PageData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPageDataCompletedEventHandler(object sender, GetPageDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPageDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPageDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PageData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PageData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdatePageCompletedEventHandler(object sender, UpdatePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeletePageCompletedEventHandler(object sender, DeletePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getSendableRegionsCompletedEventHandler(object sender, getSendableRegionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSendableRegionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSendableRegionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegionData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegionData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getRegionByIdCompletedEventHandler(object sender, getRegionByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRegionByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRegionByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegionData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegionData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBannersCompletedEventHandler(object sender, GetBannersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBannersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBannersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BannerData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BannerData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBannerDataCompletedEventHandler(object sender, GetBannerDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBannerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBannerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BannerData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BannerData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateBannerDataCompletedEventHandler(object sender, UpdateBannerDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBannerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBannerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteBannerDataCompletedEventHandler(object sender, DeleteBannerDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBannerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBannerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetEventsCompletedEventHandler(object sender, GetEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EventData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetEventDataCompletedEventHandler(object sender, GetEventDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EventData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateEventDataCompletedEventHandler(object sender, UpdateEventDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEventDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEventDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteEventDataCompletedEventHandler(object sender, DeleteEventDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEventDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEventDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetChampionshipAttachmentsCompletedEventHandler(object sender, GetChampionshipAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChampionshipAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChampionshipAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AttachmentData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AttachmentData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddChampionshipAttachmentCompletedEventHandler(object sender, AddChampionshipAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddChampionshipAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddChampionshipAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RemoveChampionshipAttachmentCompletedEventHandler(object sender, RemoveChampionshipAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveChampionshipAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveChampionshipAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetRegionArticlesCompletedEventHandler(object sender, GetRegionArticlesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegionArticlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegionArticlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateRegionArticleCompletedEventHandler(object sender, UpdateRegionArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRegionArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRegionArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RemoveRegionArticleCompletedEventHandler(object sender, RemoveRegionArticleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveRegionArticleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveRegionArticleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllGalleryImagesCompletedEventHandler(object sender, GetAllGalleryImagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGalleryImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGalleryImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImageData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImageData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetGalleryImageCompletedEventHandler(object sender, GetGalleryImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGalleryImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGalleryImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImageData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImageData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetImagesByGroupCompletedEventHandler(object sender, GetImagesByGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImagesByGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImagesByGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImageData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImageData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetGalleryGroupsCompletedEventHandler(object sender, GetGalleryGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGalleryGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGalleryGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateGalleryImageCompletedEventHandler(object sender, UpdateGalleryImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGalleryImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGalleryImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddImageViewCompletedEventHandler(object sender, AddImageViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddImageViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddImageViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteGallreyImageCompletedEventHandler(object sender, DeleteGallreyImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGallreyImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGallreyImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetArticleCommentsCompletedEventHandler(object sender, GetArticleCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArticleCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArticleCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArticleCommentData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArticleCommentData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateArticleCommentCompletedEventHandler(object sender, UpdateArticleCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateArticleCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateArticleCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPendingCompetitorsTeamsDataCompletedEventHandler(object sender, GetPendingCompetitorsTeamsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPendingCompetitorsTeamsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPendingCompetitorsTeamsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PendingCompetitorData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PendingCompetitorData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPendingCompetitorsCompletedEventHandler(object sender, GetPendingCompetitorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPendingCompetitorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPendingCompetitorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PendingCompetitorData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PendingCompetitorData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddPendingCompetitorsCompletedEventHandler(object sender, AddPendingCompetitorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPendingCompetitorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPendingCompetitorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPendingMatchScoresCompletedEventHandler(object sender, GetPendingMatchScoresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPendingMatchScoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPendingMatchScoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MatchData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MatchData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdatePendingMatchScoresCompletedEventHandler(object sender, UpdatePendingMatchScoresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePendingMatchScoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePendingMatchScoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CommitPendingMatchScoresCompletedEventHandler(object sender, CommitPendingMatchScoresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitPendingMatchScoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitPendingMatchScoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSchoolMatchesCompletedEventHandler(object sender, GetSchoolMatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchoolMatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchoolMatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MatchData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MatchData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSportDailyGamesCompletedEventHandler(object sender, GetSportDailyGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSportDailyGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSportDailyGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SportDailyGames[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SportDailyGames[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFacilityHostDaysCompletedEventHandler(object sender, GetFacilityHostDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFacilityHostDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFacilityHostDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FacilityHostDay[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FacilityHostDay[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTeamStudentsCompletedEventHandler(object sender, GetTeamStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeamStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeamStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FullStudentData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FullStudentData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFullTeamDetailsCompletedEventHandler(object sender, GetFullTeamDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFullTeamDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFullTeamDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FullTeamData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FullTeamData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetChampionshipsBySeasonCompletedEventHandler(object sender, GetChampionshipsBySeasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChampionshipsBySeasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChampionshipsBySeasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChampionshipData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChampionshipData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MapExternalStudentCompletedEventHandler(object sender, MapExternalStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MapExternalStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MapExternalStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsExternallyAddedStudentCompletedEventHandler(object sender, IsExternallyAddedStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsExternallyAddedStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsExternallyAddedStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserDataCompletedEventHandler(object sender, GetUserDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserData)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591