//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace SportSite.DataServices1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataServiceSoap", Namespace="http://www.mir.co.il/DataService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FilterField[]))]
    public partial class DataService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetEntitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback MarkMessageReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEntityOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTeacherCourseProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeacherCourseProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTeacherCourseSportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeacherCourseSportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntityTypeClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback LookupEntityFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegionsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSportsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSportFieldsHavingPlayersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSportFieldCompetitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCourtCompetitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFacilityCompetitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRawMatchesByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMatchesByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMatchesByFacilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMatchesByCourtOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMatchesByTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompetitionsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRawCompetitionsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContainingChampionshipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChampionshipDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChampionshipsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChampionshipsBySeasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlayerCardFullDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlayersCountBySeasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeamsByChampionshipCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChampionshipCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChampionshipCategoriesBySeasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSimplePlayerDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlayerNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFunctionaryGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFunctionaryGamesByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeasonDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRulesetRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentsByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentByNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchoolDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSimpleDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSchoolDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiptDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiptData_BasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebsitePermanentChampionshipsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWebsitePermanentChampionshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWebsitePermanentChampionshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWebsitePermanentChampionshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClubCategoriesBySeasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsersWithoutPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetClientVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChampionshipCurrentPhaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestSeasonOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DataService() {
            this.Url = "http://213.8.193.150/ISF/SportServices/DataService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetEntitiesCompletedEventHandler GetEntitiesCompleted;
        
        /// <remarks/>
        public event MarkMessageReadCompletedEventHandler MarkMessageReadCompleted;
        
        /// <remarks/>
        public event InsertEntityCompletedEventHandler InsertEntityCompleted;
        
        /// <remarks/>
        public event UpdateEntityCompletedEventHandler UpdateEntityCompleted;
        
        /// <remarks/>
        public event DeleteEntityCompletedEventHandler DeleteEntityCompleted;
        
        /// <remarks/>
        public event SetTeacherCourseProductCompletedEventHandler SetTeacherCourseProductCompleted;
        
        /// <remarks/>
        public event GetTeacherCourseProductCompletedEventHandler GetTeacherCourseProductCompleted;
        
        /// <remarks/>
        public event SetTeacherCourseSportsCompletedEventHandler SetTeacherCourseSportsCompleted;
        
        /// <remarks/>
        public event GetTeacherCourseSportsCompletedEventHandler GetTeacherCourseSportsCompleted;
        
        /// <remarks/>
        public event GetEntityTypeClassCompletedEventHandler GetEntityTypeClassCompleted;
        
        /// <remarks/>
        public event LookupEntityFilterCompletedEventHandler LookupEntityFilterCompleted;
        
        /// <remarks/>
        public event GetRegionCompletedEventHandler GetRegionCompleted;
        
        /// <remarks/>
        public event GetRegionsDataCompletedEventHandler GetRegionsDataCompleted;
        
        /// <remarks/>
        public event GetSportsDataCompletedEventHandler GetSportsDataCompleted;
        
        /// <remarks/>
        public event GetSportFieldsHavingPlayersCompletedEventHandler GetSportFieldsHavingPlayersCompleted;
        
        /// <remarks/>
        public event GetSportFieldCompetitionsCompletedEventHandler GetSportFieldCompetitionsCompleted;
        
        /// <remarks/>
        public event GetCourtCompetitionsCompletedEventHandler GetCourtCompetitionsCompleted;
        
        /// <remarks/>
        public event GetFacilityCompetitionsCompletedEventHandler GetFacilityCompetitionsCompleted;
        
        /// <remarks/>
        public event GetRawMatchesByDateCompletedEventHandler GetRawMatchesByDateCompleted;
        
        /// <remarks/>
        public event GetMatchesByDateCompletedEventHandler GetMatchesByDateCompleted;
        
        /// <remarks/>
        public event GetMatchesByFacilityCompletedEventHandler GetMatchesByFacilityCompleted;
        
        /// <remarks/>
        public event GetMatchesByCourtCompletedEventHandler GetMatchesByCourtCompleted;
        
        /// <remarks/>
        public event GetMatchesByTeamCompletedEventHandler GetMatchesByTeamCompleted;
        
        /// <remarks/>
        public event GetCompetitionsByDateCompletedEventHandler GetCompetitionsByDateCompleted;
        
        /// <remarks/>
        public event GetRawCompetitionsByDateCompletedEventHandler GetRawCompetitionsByDateCompleted;
        
        /// <remarks/>
        public event GetContainingChampionshipsCompletedEventHandler GetContainingChampionshipsCompleted;
        
        /// <remarks/>
        public event GetChampionshipDataCompletedEventHandler GetChampionshipDataCompleted;
        
        /// <remarks/>
        public event GetChampionshipsDataCompletedEventHandler GetChampionshipsDataCompleted;
        
        /// <remarks/>
        public event GetChampionshipsBySeasonCompletedEventHandler GetChampionshipsBySeasonCompleted;
        
        /// <remarks/>
        public event GetPlayerCardFullDataCompletedEventHandler GetPlayerCardFullDataCompleted;
        
        /// <remarks/>
        public event GetPlayersCountBySeasonCompletedEventHandler GetPlayersCountBySeasonCompleted;
        
        /// <remarks/>
        public event GetTeamsByChampionshipCategoryCompletedEventHandler GetTeamsByChampionshipCategoryCompleted;
        
        /// <remarks/>
        public event GetChampionshipCategoriesCompletedEventHandler GetChampionshipCategoriesCompleted;
        
        /// <remarks/>
        public event GetChampionshipCategoriesBySeasonCompletedEventHandler GetChampionshipCategoriesBySeasonCompleted;
        
        /// <remarks/>
        public event GetUserNameCompletedEventHandler GetUserNameCompleted;
        
        /// <remarks/>
        public event GetSimplePlayerDataCompletedEventHandler GetSimplePlayerDataCompleted;
        
        /// <remarks/>
        public event GetPlayerNumbersCompletedEventHandler GetPlayerNumbersCompleted;
        
        /// <remarks/>
        public event GetFunctionaryGamesCompletedEventHandler GetFunctionaryGamesCompleted;
        
        /// <remarks/>
        public event GetFunctionaryGamesByDateCompletedEventHandler GetFunctionaryGamesByDateCompleted;
        
        /// <remarks/>
        public event GetSeasonDataCompletedEventHandler GetSeasonDataCompleted;
        
        /// <remarks/>
        public event GetRulesetRulesCompletedEventHandler GetRulesetRulesCompleted;
        
        /// <remarks/>
        public event GetStudentsByNameCompletedEventHandler GetStudentsByNameCompleted;
        
        /// <remarks/>
        public event GetStudentByNumberCompletedEventHandler GetStudentByNumberCompleted;
        
        /// <remarks/>
        public event GetSchoolDataCompletedEventHandler GetSchoolDataCompleted;
        
        /// <remarks/>
        public event GetRegionDataCompletedEventHandler GetRegionDataCompleted;
        
        /// <remarks/>
        public event GetSimpleDataCompletedEventHandler GetSimpleDataCompleted;
        
        /// <remarks/>
        public event UpdateSchoolDetailsCompletedEventHandler UpdateSchoolDetailsCompleted;
        
        /// <remarks/>
        public event GetReceiptDataCompletedEventHandler GetReceiptDataCompleted;
        
        /// <remarks/>
        public event GetReceiptData_BasicCompletedEventHandler GetReceiptData_BasicCompleted;
        
        /// <remarks/>
        public event GetWebsitePermanentChampionshipsCompletedEventHandler GetWebsitePermanentChampionshipsCompleted;
        
        /// <remarks/>
        public event AddWebsitePermanentChampionshipCompletedEventHandler AddWebsitePermanentChampionshipCompleted;
        
        /// <remarks/>
        public event UpdateWebsitePermanentChampionshipCompletedEventHandler UpdateWebsitePermanentChampionshipCompleted;
        
        /// <remarks/>
        public event DeleteWebsitePermanentChampionshipCompletedEventHandler DeleteWebsitePermanentChampionshipCompleted;
        
        /// <remarks/>
        public event GetClubCategoriesBySeasonCompletedEventHandler GetClubCategoriesBySeasonCompleted;
        
        /// <remarks/>
        public event HasPasswordCompletedEventHandler HasPasswordCompleted;
        
        /// <remarks/>
        public event UsersWithoutPasswordCompletedEventHandler UsersWithoutPasswordCompleted;
        
        /// <remarks/>
        public event SetClientVersionCompletedEventHandler SetClientVersionCompleted;
        
        /// <remarks/>
        public event GetChampionshipCurrentPhaseCompletedEventHandler GetChampionshipCurrentPhaseCompleted;
        
        /// <remarks/>
        public event GetLatestSeasonCompletedEventHandler GetLatestSeasonCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetEntities", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Entity[] GetEntities(string entityName, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] FilterField[] filterFields, ref decimal timestamp, out int[] deleted) {
            object[] results = this.Invoke("GetEntities", new object[] {
                        entityName,
                        filterFields,
                        timestamp});
            timestamp = ((decimal)(results[1]));
            deleted = ((int[])(results[2]));
            return ((Entity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEntities(string entityName, FilterField[] filterFields, decimal timestamp, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEntities", new object[] {
                        entityName,
                        filterFields,
                        timestamp}, callback, asyncState);
        }
        
        /// <remarks/>
        public Entity[] EndGetEntities(System.IAsyncResult asyncResult, out decimal timestamp, out int[] deleted) {
            object[] results = this.EndInvoke(asyncResult);
            timestamp = ((decimal)(results[1]));
            deleted = ((int[])(results[2]));
            return ((Entity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEntitiesAsync(string entityName, FilterField[] filterFields, decimal timestamp) {
            this.GetEntitiesAsync(entityName, filterFields, timestamp, null);
        }
        
        /// <remarks/>
        public void GetEntitiesAsync(string entityName, FilterField[] filterFields, decimal timestamp, object userState) {
            if ((this.GetEntitiesOperationCompleted == null)) {
                this.GetEntitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntitiesOperationCompleted);
            }
            this.InvokeAsync("GetEntities", new object[] {
                        entityName,
                        filterFields,
                        timestamp}, this.GetEntitiesOperationCompleted, userState);
        }
        
        private void OnGetEntitiesOperationCompleted(object arg) {
            if ((this.GetEntitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntitiesCompleted(this, new GetEntitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/MarkMessageRead", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int MarkMessageRead(string username, string password, int messageID) {
            object[] results = this.Invoke("MarkMessageRead", new object[] {
                        username,
                        password,
                        messageID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMarkMessageRead(string username, string password, int messageID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MarkMessageRead", new object[] {
                        username,
                        password,
                        messageID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndMarkMessageRead(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void MarkMessageReadAsync(string username, string password, int messageID) {
            this.MarkMessageReadAsync(username, password, messageID, null);
        }
        
        /// <remarks/>
        public void MarkMessageReadAsync(string username, string password, int messageID, object userState) {
            if ((this.MarkMessageReadOperationCompleted == null)) {
                this.MarkMessageReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkMessageReadOperationCompleted);
            }
            this.InvokeAsync("MarkMessageRead", new object[] {
                        username,
                        password,
                        messageID}, this.MarkMessageReadOperationCompleted, userState);
        }
        
        private void OnMarkMessageReadOperationCompleted(object arg) {
            if ((this.MarkMessageReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkMessageReadCompleted(this, new MarkMessageReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/InsertEntity", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertEntity(string entityName, ref object[] values) {
            object[] results = this.Invoke("InsertEntity", new object[] {
                        entityName,
                        values});
            values = ((object[])(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertEntity(string entityName, object[] values, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertEntity", new object[] {
                        entityName,
                        values}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndInsertEntity(System.IAsyncResult asyncResult, out object[] values) {
            object[] results = this.EndInvoke(asyncResult);
            values = ((object[])(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEntityAsync(string entityName, object[] values) {
            this.InsertEntityAsync(entityName, values, null);
        }
        
        /// <remarks/>
        public void InsertEntityAsync(string entityName, object[] values, object userState) {
            if ((this.InsertEntityOperationCompleted == null)) {
                this.InsertEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEntityOperationCompleted);
            }
            this.InvokeAsync("InsertEntity", new object[] {
                        entityName,
                        values}, this.InsertEntityOperationCompleted, userState);
        }
        
        private void OnInsertEntityOperationCompleted(object arg) {
            if ((this.InsertEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEntityCompleted(this, new InsertEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/UpdateEntity", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEntity(string entityName, object[] values) {
            object[] results = this.Invoke("UpdateEntity", new object[] {
                        entityName,
                        values});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateEntity(string entityName, object[] values, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateEntity", new object[] {
                        entityName,
                        values}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateEntity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEntityAsync(string entityName, object[] values) {
            this.UpdateEntityAsync(entityName, values, null);
        }
        
        /// <remarks/>
        public void UpdateEntityAsync(string entityName, object[] values, object userState) {
            if ((this.UpdateEntityOperationCompleted == null)) {
                this.UpdateEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEntityOperationCompleted);
            }
            this.InvokeAsync("UpdateEntity", new object[] {
                        entityName,
                        values}, this.UpdateEntityOperationCompleted, userState);
        }
        
        private void OnUpdateEntityOperationCompleted(object arg) {
            if ((this.UpdateEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEntityCompleted(this, new UpdateEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/DeleteEntity", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteEntity(string entityName, int id) {
            object[] results = this.Invoke("DeleteEntity", new object[] {
                        entityName,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteEntity(string entityName, int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteEntity", new object[] {
                        entityName,
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteEntity(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEntityAsync(string entityName, int id) {
            this.DeleteEntityAsync(entityName, id, null);
        }
        
        /// <remarks/>
        public void DeleteEntityAsync(string entityName, int id, object userState) {
            if ((this.DeleteEntityOperationCompleted == null)) {
                this.DeleteEntityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEntityOperationCompleted);
            }
            this.InvokeAsync("DeleteEntity", new object[] {
                        entityName,
                        id}, this.DeleteEntityOperationCompleted, userState);
        }
        
        private void OnDeleteEntityOperationCompleted(object arg) {
            if ((this.DeleteEntityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEntityCompleted(this, new DeleteEntityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/SetTeacherCourseProduct", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetTeacherCourseProduct(int productId) {
            this.Invoke("SetTeacherCourseProduct", new object[] {
                        productId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetTeacherCourseProduct(int productId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetTeacherCourseProduct", new object[] {
                        productId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetTeacherCourseProduct(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetTeacherCourseProductAsync(int productId) {
            this.SetTeacherCourseProductAsync(productId, null);
        }
        
        /// <remarks/>
        public void SetTeacherCourseProductAsync(int productId, object userState) {
            if ((this.SetTeacherCourseProductOperationCompleted == null)) {
                this.SetTeacherCourseProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTeacherCourseProductOperationCompleted);
            }
            this.InvokeAsync("SetTeacherCourseProduct", new object[] {
                        productId}, this.SetTeacherCourseProductOperationCompleted, userState);
        }
        
        private void OnSetTeacherCourseProductOperationCompleted(object arg) {
            if ((this.SetTeacherCourseProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTeacherCourseProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetTeacherCourseProduct", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTeacherCourseProduct() {
            object[] results = this.Invoke("GetTeacherCourseProduct", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTeacherCourseProduct(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTeacherCourseProduct", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetTeacherCourseProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTeacherCourseProductAsync() {
            this.GetTeacherCourseProductAsync(null);
        }
        
        /// <remarks/>
        public void GetTeacherCourseProductAsync(object userState) {
            if ((this.GetTeacherCourseProductOperationCompleted == null)) {
                this.GetTeacherCourseProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeacherCourseProductOperationCompleted);
            }
            this.InvokeAsync("GetTeacherCourseProduct", new object[0], this.GetTeacherCourseProductOperationCompleted, userState);
        }
        
        private void OnGetTeacherCourseProductOperationCompleted(object arg) {
            if ((this.GetTeacherCourseProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeacherCourseProductCompleted(this, new GetTeacherCourseProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/SetTeacherCourseSports", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetTeacherCourseSports(int[] sports) {
            this.Invoke("SetTeacherCourseSports", new object[] {
                        sports});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetTeacherCourseSports(int[] sports, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetTeacherCourseSports", new object[] {
                        sports}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetTeacherCourseSports(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetTeacherCourseSportsAsync(int[] sports) {
            this.SetTeacherCourseSportsAsync(sports, null);
        }
        
        /// <remarks/>
        public void SetTeacherCourseSportsAsync(int[] sports, object userState) {
            if ((this.SetTeacherCourseSportsOperationCompleted == null)) {
                this.SetTeacherCourseSportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTeacherCourseSportsOperationCompleted);
            }
            this.InvokeAsync("SetTeacherCourseSports", new object[] {
                        sports}, this.SetTeacherCourseSportsOperationCompleted, userState);
        }
        
        private void OnSetTeacherCourseSportsOperationCompleted(object arg) {
            if ((this.SetTeacherCourseSportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTeacherCourseSportsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetTeacherCourseSports", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetTeacherCourseSports() {
            object[] results = this.Invoke("GetTeacherCourseSports", new object[0]);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTeacherCourseSports(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTeacherCourseSports", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndGetTeacherCourseSports(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTeacherCourseSportsAsync() {
            this.GetTeacherCourseSportsAsync(null);
        }
        
        /// <remarks/>
        public void GetTeacherCourseSportsAsync(object userState) {
            if ((this.GetTeacherCourseSportsOperationCompleted == null)) {
                this.GetTeacherCourseSportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeacherCourseSportsOperationCompleted);
            }
            this.InvokeAsync("GetTeacherCourseSports", new object[0], this.GetTeacherCourseSportsOperationCompleted, userState);
        }
        
        private void OnGetTeacherCourseSportsOperationCompleted(object arg) {
            if ((this.GetTeacherCourseSportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeacherCourseSportsCompleted(this, new GetTeacherCourseSportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetEntityTypeClass", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEntityTypeClass(string entityType) {
            object[] results = this.Invoke("GetEntityTypeClass", new object[] {
                        entityType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEntityTypeClass(string entityType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEntityTypeClass", new object[] {
                        entityType}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetEntityTypeClass(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntityTypeClassAsync(string entityType) {
            this.GetEntityTypeClassAsync(entityType, null);
        }
        
        /// <remarks/>
        public void GetEntityTypeClassAsync(string entityType, object userState) {
            if ((this.GetEntityTypeClassOperationCompleted == null)) {
                this.GetEntityTypeClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntityTypeClassOperationCompleted);
            }
            this.InvokeAsync("GetEntityTypeClass", new object[] {
                        entityType}, this.GetEntityTypeClassOperationCompleted, userState);
        }
        
        private void OnGetEntityTypeClassOperationCompleted(object arg) {
            if ((this.GetEntityTypeClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntityTypeClassCompleted(this, new GetEntityTypeClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/LookupEntityFilter", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FilterField[] LookupEntityFilter(string entityType, int entityId) {
            object[] results = this.Invoke("LookupEntityFilter", new object[] {
                        entityType,
                        entityId});
            return ((FilterField[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLookupEntityFilter(string entityType, int entityId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LookupEntityFilter", new object[] {
                        entityType,
                        entityId}, callback, asyncState);
        }
        
        /// <remarks/>
        public FilterField[] EndLookupEntityFilter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FilterField[])(results[0]));
        }
        
        /// <remarks/>
        public void LookupEntityFilterAsync(string entityType, int entityId) {
            this.LookupEntityFilterAsync(entityType, entityId, null);
        }
        
        /// <remarks/>
        public void LookupEntityFilterAsync(string entityType, int entityId, object userState) {
            if ((this.LookupEntityFilterOperationCompleted == null)) {
                this.LookupEntityFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLookupEntityFilterOperationCompleted);
            }
            this.InvokeAsync("LookupEntityFilter", new object[] {
                        entityType,
                        entityId}, this.LookupEntityFilterOperationCompleted, userState);
        }
        
        private void OnLookupEntityFilterOperationCompleted(object arg) {
            if ((this.LookupEntityFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LookupEntityFilterCompleted(this, new LookupEntityFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetRegion", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRegion(int regionID) {
            object[] results = this.Invoke("GetRegion", new object[] {
                        regionID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRegion(int regionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRegion", new object[] {
                        regionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetRegion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegionAsync(int regionID) {
            this.GetRegionAsync(regionID, null);
        }
        
        /// <remarks/>
        public void GetRegionAsync(int regionID, object userState) {
            if ((this.GetRegionOperationCompleted == null)) {
                this.GetRegionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegionOperationCompleted);
            }
            this.InvokeAsync("GetRegion", new object[] {
                        regionID}, this.GetRegionOperationCompleted, userState);
        }
        
        private void OnGetRegionOperationCompleted(object arg) {
            if ((this.GetRegionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegionCompleted(this, new GetRegionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetRegionsData", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SimpleData[] GetRegionsData() {
            object[] results = this.Invoke("GetRegionsData", new object[0]);
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRegionsData(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRegionsData", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public SimpleData[] EndGetRegionsData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRegionsDataAsync() {
            this.GetRegionsDataAsync(null);
        }
        
        /// <remarks/>
        public void GetRegionsDataAsync(object userState) {
            if ((this.GetRegionsDataOperationCompleted == null)) {
                this.GetRegionsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegionsDataOperationCompleted);
            }
            this.InvokeAsync("GetRegionsData", new object[0], this.GetRegionsDataOperationCompleted, userState);
        }
        
        private void OnGetRegionsDataOperationCompleted(object arg) {
            if ((this.GetRegionsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegionsDataCompleted(this, new GetRegionsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetSportsData", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SimpleData[] GetSportsData() {
            object[] results = this.Invoke("GetSportsData", new object[0]);
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSportsData(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSportsData", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public SimpleData[] EndGetSportsData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSportsDataAsync() {
            this.GetSportsDataAsync(null);
        }
        
        /// <remarks/>
        public void GetSportsDataAsync(object userState) {
            if ((this.GetSportsDataOperationCompleted == null)) {
                this.GetSportsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSportsDataOperationCompleted);
            }
            this.InvokeAsync("GetSportsData", new object[0], this.GetSportsDataOperationCompleted, userState);
        }
        
        private void OnGetSportsDataOperationCompleted(object arg) {
            if ((this.GetSportsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSportsDataCompleted(this, new GetSportsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetSportFieldsHavingPlayers", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SimpleData[] GetSportFieldsHavingPlayers(int season) {
            object[] results = this.Invoke("GetSportFieldsHavingPlayers", new object[] {
                        season});
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSportFieldsHavingPlayers(int season, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSportFieldsHavingPlayers", new object[] {
                        season}, callback, asyncState);
        }
        
        /// <remarks/>
        public SimpleData[] EndGetSportFieldsHavingPlayers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSportFieldsHavingPlayersAsync(int season) {
            this.GetSportFieldsHavingPlayersAsync(season, null);
        }
        
        /// <remarks/>
        public void GetSportFieldsHavingPlayersAsync(int season, object userState) {
            if ((this.GetSportFieldsHavingPlayersOperationCompleted == null)) {
                this.GetSportFieldsHavingPlayersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSportFieldsHavingPlayersOperationCompleted);
            }
            this.InvokeAsync("GetSportFieldsHavingPlayers", new object[] {
                        season}, this.GetSportFieldsHavingPlayersOperationCompleted, userState);
        }
        
        private void OnGetSportFieldsHavingPlayersOperationCompleted(object arg) {
            if ((this.GetSportFieldsHavingPlayersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSportFieldsHavingPlayersCompleted(this, new GetSportFieldsHavingPlayersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetSportFieldCompetitions", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Competition[] GetSportFieldCompetitions(int sportFieldID) {
            object[] results = this.Invoke("GetSportFieldCompetitions", new object[] {
                        sportFieldID});
            return ((Competition[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSportFieldCompetitions(int sportFieldID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSportFieldCompetitions", new object[] {
                        sportFieldID}, callback, asyncState);
        }
        
        /// <remarks/>
        public Competition[] EndGetSportFieldCompetitions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Competition[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSportFieldCompetitionsAsync(int sportFieldID) {
            this.GetSportFieldCompetitionsAsync(sportFieldID, null);
        }
        
        /// <remarks/>
        public void GetSportFieldCompetitionsAsync(int sportFieldID, object userState) {
            if ((this.GetSportFieldCompetitionsOperationCompleted == null)) {
                this.GetSportFieldCompetitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSportFieldCompetitionsOperationCompleted);
            }
            this.InvokeAsync("GetSportFieldCompetitions", new object[] {
                        sportFieldID}, this.GetSportFieldCompetitionsOperationCompleted, userState);
        }
        
        private void OnGetSportFieldCompetitionsOperationCompleted(object arg) {
            if ((this.GetSportFieldCompetitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSportFieldCompetitionsCompleted(this, new GetSportFieldCompetitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetCourtCompetitions", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Competition[] GetCourtCompetitions(int courtID) {
            object[] results = this.Invoke("GetCourtCompetitions", new object[] {
                        courtID});
            return ((Competition[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCourtCompetitions(int courtID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCourtCompetitions", new object[] {
                        courtID}, callback, asyncState);
        }
        
        /// <remarks/>
        public Competition[] EndGetCourtCompetitions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Competition[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCourtCompetitionsAsync(int courtID) {
            this.GetCourtCompetitionsAsync(courtID, null);
        }
        
        /// <remarks/>
        public void GetCourtCompetitionsAsync(int courtID, object userState) {
            if ((this.GetCourtCompetitionsOperationCompleted == null)) {
                this.GetCourtCompetitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCourtCompetitionsOperationCompleted);
            }
            this.InvokeAsync("GetCourtCompetitions", new object[] {
                        courtID}, this.GetCourtCompetitionsOperationCompleted, userState);
        }
        
        private void OnGetCourtCompetitionsOperationCompleted(object arg) {
            if ((this.GetCourtCompetitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCourtCompetitionsCompleted(this, new GetCourtCompetitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetFacilityCompetitions", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Competition[] GetFacilityCompetitions(int facilityID) {
            object[] results = this.Invoke("GetFacilityCompetitions", new object[] {
                        facilityID});
            return ((Competition[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFacilityCompetitions(int facilityID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFacilityCompetitions", new object[] {
                        facilityID}, callback, asyncState);
        }
        
        /// <remarks/>
        public Competition[] EndGetFacilityCompetitions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Competition[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFacilityCompetitionsAsync(int facilityID) {
            this.GetFacilityCompetitionsAsync(facilityID, null);
        }
        
        /// <remarks/>
        public void GetFacilityCompetitionsAsync(int facilityID, object userState) {
            if ((this.GetFacilityCompetitionsOperationCompleted == null)) {
                this.GetFacilityCompetitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFacilityCompetitionsOperationCompleted);
            }
            this.InvokeAsync("GetFacilityCompetitions", new object[] {
                        facilityID}, this.GetFacilityCompetitionsOperationCompleted, userState);
        }
        
        private void OnGetFacilityCompetitionsOperationCompleted(object arg) {
            if ((this.GetFacilityCompetitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFacilityCompetitionsCompleted(this, new GetFacilityCompetitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetRawMatchesByDate", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MatchData[] GetRawMatchesByDate(System.DateTime start, System.DateTime end, int region, int sport, int championship, int category, int facility) {
            object[] results = this.Invoke("GetRawMatchesByDate", new object[] {
                        start,
                        end,
                        region,
                        sport,
                        championship,
                        category,
                        facility});
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRawMatchesByDate(System.DateTime start, System.DateTime end, int region, int sport, int championship, int category, int facility, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRawMatchesByDate", new object[] {
                        start,
                        end,
                        region,
                        sport,
                        championship,
                        category,
                        facility}, callback, asyncState);
        }
        
        /// <remarks/>
        public MatchData[] EndGetRawMatchesByDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRawMatchesByDateAsync(System.DateTime start, System.DateTime end, int region, int sport, int championship, int category, int facility) {
            this.GetRawMatchesByDateAsync(start, end, region, sport, championship, category, facility, null);
        }
        
        /// <remarks/>
        public void GetRawMatchesByDateAsync(System.DateTime start, System.DateTime end, int region, int sport, int championship, int category, int facility, object userState) {
            if ((this.GetRawMatchesByDateOperationCompleted == null)) {
                this.GetRawMatchesByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawMatchesByDateOperationCompleted);
            }
            this.InvokeAsync("GetRawMatchesByDate", new object[] {
                        start,
                        end,
                        region,
                        sport,
                        championship,
                        category,
                        facility}, this.GetRawMatchesByDateOperationCompleted, userState);
        }
        
        private void OnGetRawMatchesByDateOperationCompleted(object arg) {
            if ((this.GetRawMatchesByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawMatchesByDateCompleted(this, new GetRawMatchesByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetMatchesByDate", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MatchData[] GetMatchesByDate(System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("GetMatchesByDate", new object[] {
                        start,
                        end});
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMatchesByDate(System.DateTime start, System.DateTime end, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMatchesByDate", new object[] {
                        start,
                        end}, callback, asyncState);
        }
        
        /// <remarks/>
        public MatchData[] EndGetMatchesByDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMatchesByDateAsync(System.DateTime start, System.DateTime end) {
            this.GetMatchesByDateAsync(start, end, null);
        }
        
        /// <remarks/>
        public void GetMatchesByDateAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.GetMatchesByDateOperationCompleted == null)) {
                this.GetMatchesByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchesByDateOperationCompleted);
            }
            this.InvokeAsync("GetMatchesByDate", new object[] {
                        start,
                        end}, this.GetMatchesByDateOperationCompleted, userState);
        }
        
        private void OnGetMatchesByDateOperationCompleted(object arg) {
            if ((this.GetMatchesByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMatchesByDateCompleted(this, new GetMatchesByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetMatchesByFacility", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MatchData[] GetMatchesByFacility(int facility) {
            object[] results = this.Invoke("GetMatchesByFacility", new object[] {
                        facility});
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMatchesByFacility(int facility, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMatchesByFacility", new object[] {
                        facility}, callback, asyncState);
        }
        
        /// <remarks/>
        public MatchData[] EndGetMatchesByFacility(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMatchesByFacilityAsync(int facility) {
            this.GetMatchesByFacilityAsync(facility, null);
        }
        
        /// <remarks/>
        public void GetMatchesByFacilityAsync(int facility, object userState) {
            if ((this.GetMatchesByFacilityOperationCompleted == null)) {
                this.GetMatchesByFacilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchesByFacilityOperationCompleted);
            }
            this.InvokeAsync("GetMatchesByFacility", new object[] {
                        facility}, this.GetMatchesByFacilityOperationCompleted, userState);
        }
        
        private void OnGetMatchesByFacilityOperationCompleted(object arg) {
            if ((this.GetMatchesByFacilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMatchesByFacilityCompleted(this, new GetMatchesByFacilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetMatchesByCourt", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MatchData[] GetMatchesByCourt(int court) {
            object[] results = this.Invoke("GetMatchesByCourt", new object[] {
                        court});
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMatchesByCourt(int court, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMatchesByCourt", new object[] {
                        court}, callback, asyncState);
        }
        
        /// <remarks/>
        public MatchData[] EndGetMatchesByCourt(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMatchesByCourtAsync(int court) {
            this.GetMatchesByCourtAsync(court, null);
        }
        
        /// <remarks/>
        public void GetMatchesByCourtAsync(int court, object userState) {
            if ((this.GetMatchesByCourtOperationCompleted == null)) {
                this.GetMatchesByCourtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchesByCourtOperationCompleted);
            }
            this.InvokeAsync("GetMatchesByCourt", new object[] {
                        court}, this.GetMatchesByCourtOperationCompleted, userState);
        }
        
        private void OnGetMatchesByCourtOperationCompleted(object arg) {
            if ((this.GetMatchesByCourtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMatchesByCourtCompleted(this, new GetMatchesByCourtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetMatchesByTeam", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MatchData[] GetMatchesByTeam(int team) {
            object[] results = this.Invoke("GetMatchesByTeam", new object[] {
                        team});
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMatchesByTeam(int team, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMatchesByTeam", new object[] {
                        team}, callback, asyncState);
        }
        
        /// <remarks/>
        public MatchData[] EndGetMatchesByTeam(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MatchData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMatchesByTeamAsync(int team) {
            this.GetMatchesByTeamAsync(team, null);
        }
        
        /// <remarks/>
        public void GetMatchesByTeamAsync(int team, object userState) {
            if ((this.GetMatchesByTeamOperationCompleted == null)) {
                this.GetMatchesByTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchesByTeamOperationCompleted);
            }
            this.InvokeAsync("GetMatchesByTeam", new object[] {
                        team}, this.GetMatchesByTeamOperationCompleted, userState);
        }
        
        private void OnGetMatchesByTeamOperationCompleted(object arg) {
            if ((this.GetMatchesByTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMatchesByTeamCompleted(this, new GetMatchesByTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetCompetitionsByDate", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompetitionData[] GetCompetitionsByDate(System.DateTime start, System.DateTime end) {
            object[] results = this.Invoke("GetCompetitionsByDate", new object[] {
                        start,
                        end});
            return ((CompetitionData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCompetitionsByDate(System.DateTime start, System.DateTime end, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCompetitionsByDate", new object[] {
                        start,
                        end}, callback, asyncState);
        }
        
        /// <remarks/>
        public CompetitionData[] EndGetCompetitionsByDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CompetitionData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCompetitionsByDateAsync(System.DateTime start, System.DateTime end) {
            this.GetCompetitionsByDateAsync(start, end, null);
        }
        
        /// <remarks/>
        public void GetCompetitionsByDateAsync(System.DateTime start, System.DateTime end, object userState) {
            if ((this.GetCompetitionsByDateOperationCompleted == null)) {
                this.GetCompetitionsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompetitionsByDateOperationCompleted);
            }
            this.InvokeAsync("GetCompetitionsByDate", new object[] {
                        start,
                        end}, this.GetCompetitionsByDateOperationCompleted, userState);
        }
        
        private void OnGetCompetitionsByDateOperationCompleted(object arg) {
            if ((this.GetCompetitionsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompetitionsByDateCompleted(this, new GetCompetitionsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetRawCompetitionsByDate", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompetitionData[] GetRawCompetitionsByDate(System.DateTime start, System.DateTime end, int region, int sport, int championship, int facility, int category) {
            object[] results = this.Invoke("GetRawCompetitionsByDate", new object[] {
                        start,
                        end,
                        region,
                        sport,
                        championship,
                        facility,
                        category});
            return ((CompetitionData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRawCompetitionsByDate(System.DateTime start, System.DateTime end, int region, int sport, int championship, int facility, int category, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRawCompetitionsByDate", new object[] {
                        start,
                        end,
                        region,
                        sport,
                        championship,
                        facility,
                        category}, callback, asyncState);
        }
        
        /// <remarks/>
        public CompetitionData[] EndGetRawCompetitionsByDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CompetitionData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRawCompetitionsByDateAsync(System.DateTime start, System.DateTime end, int region, int sport, int championship, int facility, int category) {
            this.GetRawCompetitionsByDateAsync(start, end, region, sport, championship, facility, category, null);
        }
        
        /// <remarks/>
        public void GetRawCompetitionsByDateAsync(System.DateTime start, System.DateTime end, int region, int sport, int championship, int facility, int category, object userState) {
            if ((this.GetRawCompetitionsByDateOperationCompleted == null)) {
                this.GetRawCompetitionsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawCompetitionsByDateOperationCompleted);
            }
            this.InvokeAsync("GetRawCompetitionsByDate", new object[] {
                        start,
                        end,
                        region,
                        sport,
                        championship,
                        facility,
                        category}, this.GetRawCompetitionsByDateOperationCompleted, userState);
        }
        
        private void OnGetRawCompetitionsByDateOperationCompleted(object arg) {
            if ((this.GetRawCompetitionsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawCompetitionsByDateCompleted(this, new GetRawCompetitionsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetContainingChampionships", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetContainingChampionships(int sportFieldID, int facilityID, int courtID) {
            object[] results = this.Invoke("GetContainingChampionships", new object[] {
                        sportFieldID,
                        facilityID,
                        courtID});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetContainingChampionships(int sportFieldID, int facilityID, int courtID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetContainingChampionships", new object[] {
                        sportFieldID,
                        facilityID,
                        courtID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndGetContainingChampionships(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetContainingChampionshipsAsync(int sportFieldID, int facilityID, int courtID) {
            this.GetContainingChampionshipsAsync(sportFieldID, facilityID, courtID, null);
        }
        
        /// <remarks/>
        public void GetContainingChampionshipsAsync(int sportFieldID, int facilityID, int courtID, object userState) {
            if ((this.GetContainingChampionshipsOperationCompleted == null)) {
                this.GetContainingChampionshipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContainingChampionshipsOperationCompleted);
            }
            this.InvokeAsync("GetContainingChampionships", new object[] {
                        sportFieldID,
                        facilityID,
                        courtID}, this.GetContainingChampionshipsOperationCompleted, userState);
        }
        
        private void OnGetContainingChampionshipsOperationCompleted(object arg) {
            if ((this.GetContainingChampionshipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContainingChampionshipsCompleted(this, new GetContainingChampionshipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetChampionshipData", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ChampionshipData[] GetChampionshipData(int champID, int regionID) {
            object[] results = this.Invoke("GetChampionshipData", new object[] {
                        champID,
                        regionID});
            return ((ChampionshipData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChampionshipData(int champID, int regionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChampionshipData", new object[] {
                        champID,
                        regionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ChampionshipData[] EndGetChampionshipData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ChampionshipData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChampionshipDataAsync(int champID, int regionID) {
            this.GetChampionshipDataAsync(champID, regionID, null);
        }
        
        /// <remarks/>
        public void GetChampionshipDataAsync(int champID, int regionID, object userState) {
            if ((this.GetChampionshipDataOperationCompleted == null)) {
                this.GetChampionshipDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChampionshipDataOperationCompleted);
            }
            this.InvokeAsync("GetChampionshipData", new object[] {
                        champID,
                        regionID}, this.GetChampionshipDataOperationCompleted, userState);
        }
        
        private void OnGetChampionshipDataOperationCompleted(object arg) {
            if ((this.GetChampionshipDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChampionshipDataCompleted(this, new GetChampionshipDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetChampionshipsData", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SimpleData[] GetChampionshipsData(int region, int sport) {
            object[] results = this.Invoke("GetChampionshipsData", new object[] {
                        region,
                        sport});
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChampionshipsData(int region, int sport, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChampionshipsData", new object[] {
                        region,
                        sport}, callback, asyncState);
        }
        
        /// <remarks/>
        public SimpleData[] EndGetChampionshipsData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChampionshipsDataAsync(int region, int sport) {
            this.GetChampionshipsDataAsync(region, sport, null);
        }
        
        /// <remarks/>
        public void GetChampionshipsDataAsync(int region, int sport, object userState) {
            if ((this.GetChampionshipsDataOperationCompleted == null)) {
                this.GetChampionshipsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChampionshipsDataOperationCompleted);
            }
            this.InvokeAsync("GetChampionshipsData", new object[] {
                        region,
                        sport}, this.GetChampionshipsDataOperationCompleted, userState);
        }
        
        private void OnGetChampionshipsDataOperationCompleted(object arg) {
            if ((this.GetChampionshipsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChampionshipsDataCompleted(this, new GetChampionshipsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetChampionshipsBySeason", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SimpleData[] GetChampionshipsBySeason(int region, int sport, int season) {
            object[] results = this.Invoke("GetChampionshipsBySeason", new object[] {
                        region,
                        sport,
                        season});
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChampionshipsBySeason(int region, int sport, int season, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChampionshipsBySeason", new object[] {
                        region,
                        sport,
                        season}, callback, asyncState);
        }
        
        /// <remarks/>
        public SimpleData[] EndGetChampionshipsBySeason(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChampionshipsBySeasonAsync(int region, int sport, int season) {
            this.GetChampionshipsBySeasonAsync(region, sport, season, null);
        }
        
        /// <remarks/>
        public void GetChampionshipsBySeasonAsync(int region, int sport, int season, object userState) {
            if ((this.GetChampionshipsBySeasonOperationCompleted == null)) {
                this.GetChampionshipsBySeasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChampionshipsBySeasonOperationCompleted);
            }
            this.InvokeAsync("GetChampionshipsBySeason", new object[] {
                        region,
                        sport,
                        season}, this.GetChampionshipsBySeasonOperationCompleted, userState);
        }
        
        private void OnGetChampionshipsBySeasonOperationCompleted(object arg) {
            if ((this.GetChampionshipsBySeasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChampionshipsBySeasonCompleted(this, new GetChampionshipsBySeasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetPlayerCardFullData", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PlayerCardData GetPlayerCardFullData(int playerId) {
            object[] results = this.Invoke("GetPlayerCardFullData", new object[] {
                        playerId});
            return ((PlayerCardData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPlayerCardFullData(int playerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPlayerCardFullData", new object[] {
                        playerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public PlayerCardData EndGetPlayerCardFullData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PlayerCardData)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlayerCardFullDataAsync(int playerId) {
            this.GetPlayerCardFullDataAsync(playerId, null);
        }
        
        /// <remarks/>
        public void GetPlayerCardFullDataAsync(int playerId, object userState) {
            if ((this.GetPlayerCardFullDataOperationCompleted == null)) {
                this.GetPlayerCardFullDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlayerCardFullDataOperationCompleted);
            }
            this.InvokeAsync("GetPlayerCardFullData", new object[] {
                        playerId}, this.GetPlayerCardFullDataOperationCompleted, userState);
        }
        
        private void OnGetPlayerCardFullDataOperationCompleted(object arg) {
            if ((this.GetPlayerCardFullDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlayerCardFullDataCompleted(this, new GetPlayerCardFullDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetPlayersCountBySeason", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SimpleData[] GetPlayersCountBySeason(int season) {
            object[] results = this.Invoke("GetPlayersCountBySeason", new object[] {
                        season});
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPlayersCountBySeason(int season, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPlayersCountBySeason", new object[] {
                        season}, callback, asyncState);
        }
        
        /// <remarks/>
        public SimpleData[] EndGetPlayersCountBySeason(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlayersCountBySeasonAsync(int season) {
            this.GetPlayersCountBySeasonAsync(season, null);
        }
        
        /// <remarks/>
        public void GetPlayersCountBySeasonAsync(int season, object userState) {
            if ((this.GetPlayersCountBySeasonOperationCompleted == null)) {
                this.GetPlayersCountBySeasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlayersCountBySeasonOperationCompleted);
            }
            this.InvokeAsync("GetPlayersCountBySeason", new object[] {
                        season}, this.GetPlayersCountBySeasonOperationCompleted, userState);
        }
        
        private void OnGetPlayersCountBySeasonOperationCompleted(object arg) {
            if ((this.GetPlayersCountBySeasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlayersCountBySeasonCompleted(this, new GetPlayersCountBySeasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetTeamsByChampionshipCategory", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SimpleData[] GetTeamsByChampionshipCategory(int champCategoryId) {
            object[] results = this.Invoke("GetTeamsByChampionshipCategory", new object[] {
                        champCategoryId});
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTeamsByChampionshipCategory(int champCategoryId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTeamsByChampionshipCategory", new object[] {
                        champCategoryId}, callback, asyncState);
        }
        
        /// <remarks/>
        public SimpleData[] EndGetTeamsByChampionshipCategory(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SimpleData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTeamsByChampionshipCategoryAsync(int champCategoryId) {
            this.GetTeamsByChampionshipCategoryAsync(champCategoryId, null);
        }
        
        /// <remarks/>
        public void GetTeamsByChampionshipCategoryAsync(int champCategoryId, object userState) {
            if ((this.GetTeamsByChampionshipCategoryOperationCompleted == null)) {
                this.GetTeamsByChampionshipCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeamsByChampionshipCategoryOperationCompleted);
            }
            this.InvokeAsync("GetTeamsByChampionshipCategory", new object[] {
                        champCategoryId}, this.GetTeamsByChampionshipCategoryOperationCompleted, userState);
        }
        
        private void OnGetTeamsByChampionshipCategoryOperationCompleted(object arg) {
            if ((this.GetTeamsByChampionshipCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeamsByChampionshipCategoryCompleted(this, new GetTeamsByChampionshipCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetChampionshipCategories", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CategoryData[] GetChampionshipCategories(int champID) {
            object[] results = this.Invoke("GetChampionshipCategories", new object[] {
                        champID});
            return ((CategoryData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChampionshipCategories(int champID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChampionshipCategories", new object[] {
                        champID}, callback, asyncState);
        }
        
        /// <remarks/>
        public CategoryData[] EndGetChampionshipCategories(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CategoryData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChampionshipCategoriesAsync(int champID) {
            this.GetChampionshipCategoriesAsync(champID, null);
        }
        
        /// <remarks/>
        public void GetChampionshipCategoriesAsync(int champID, object userState) {
            if ((this.GetChampionshipCategoriesOperationCompleted == null)) {
                this.GetChampionshipCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChampionshipCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetChampionshipCategories", new object[] {
                        champID}, this.GetChampionshipCategoriesOperationCompleted, userState);
        }
        
        private void OnGetChampionshipCategoriesOperationCompleted(object arg) {
            if ((this.GetChampionshipCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChampionshipCategoriesCompleted(this, new GetChampionshipCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetChampionshipCategoriesBySeason", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetChampionshipCategoriesBySeason(int season) {
            object[] results = this.Invoke("GetChampionshipCategoriesBySeason", new object[] {
                        season});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChampionshipCategoriesBySeason(int season, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChampionshipCategoriesBySeason", new object[] {
                        season}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndGetChampionshipCategoriesBySeason(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChampionshipCategoriesBySeasonAsync(int season) {
            this.GetChampionshipCategoriesBySeasonAsync(season, null);
        }
        
        /// <remarks/>
        public void GetChampionshipCategoriesBySeasonAsync(int season, object userState) {
            if ((this.GetChampionshipCategoriesBySeasonOperationCompleted == null)) {
                this.GetChampionshipCategoriesBySeasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChampionshipCategoriesBySeasonOperationCompleted);
            }
            this.InvokeAsync("GetChampionshipCategoriesBySeason", new object[] {
                        season}, this.GetChampionshipCategoriesBySeasonOperationCompleted, userState);
        }
        
        private void OnGetChampionshipCategoriesBySeasonOperationCompleted(object arg) {
            if ((this.GetChampionshipCategoriesBySeasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChampionshipCategoriesBySeasonCompleted(this, new GetChampionshipCategoriesBySeasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetUserName", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserName(int userID) {
            object[] results = this.Invoke("GetUserName", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserName(int userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserName", new object[] {
                        userID}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetUserName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserNameAsync(int userID) {
            this.GetUserNameAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUserNameAsync(int userID, object userState) {
            if ((this.GetUserNameOperationCompleted == null)) {
                this.GetUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNameOperationCompleted);
            }
            this.InvokeAsync("GetUserName", new object[] {
                        userID}, this.GetUserNameOperationCompleted, userState);
        }
        
        private void OnGetUserNameOperationCompleted(object arg) {
            if ((this.GetUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNameCompleted(this, new GetUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetSimplePlayerData", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SimplePlayerData[] GetSimplePlayerData(int[] championships) {
            object[] results = this.Invoke("GetSimplePlayerData", new object[] {
                        championships});
            return ((SimplePlayerData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSimplePlayerData(int[] championships, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSimplePlayerData", new object[] {
                        championships}, callback, asyncState);
        }
        
        /// <remarks/>
        public SimplePlayerData[] EndGetSimplePlayerData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SimplePlayerData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSimplePlayerDataAsync(int[] championships) {
            this.GetSimplePlayerDataAsync(championships, null);
        }
        
        /// <remarks/>
        public void GetSimplePlayerDataAsync(int[] championships, object userState) {
            if ((this.GetSimplePlayerDataOperationCompleted == null)) {
                this.GetSimplePlayerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSimplePlayerDataOperationCompleted);
            }
            this.InvokeAsync("GetSimplePlayerData", new object[] {
                        championships}, this.GetSimplePlayerDataOperationCompleted, userState);
        }
        
        private void OnGetSimplePlayerDataOperationCompleted(object arg) {
            if ((this.GetSimplePlayerDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSimplePlayerDataCompleted(this, new GetSimplePlayerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetPlayerNumbers", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TeamPlayerNumbers[] GetPlayerNumbers(int[] teamIDs) {
            object[] results = this.Invoke("GetPlayerNumbers", new object[] {
                        teamIDs});
            return ((TeamPlayerNumbers[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPlayerNumbers(int[] teamIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPlayerNumbers", new object[] {
                        teamIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public TeamPlayerNumbers[] EndGetPlayerNumbers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TeamPlayerNumbers[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlayerNumbersAsync(int[] teamIDs) {
            this.GetPlayerNumbersAsync(teamIDs, null);
        }
        
        /// <remarks/>
        public void GetPlayerNumbersAsync(int[] teamIDs, object userState) {
            if ((this.GetPlayerNumbersOperationCompleted == null)) {
                this.GetPlayerNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlayerNumbersOperationCompleted);
            }
            this.InvokeAsync("GetPlayerNumbers", new object[] {
                        teamIDs}, this.GetPlayerNumbersOperationCompleted, userState);
        }
        
        private void OnGetPlayerNumbersOperationCompleted(object arg) {
            if ((this.GetPlayerNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlayerNumbersCompleted(this, new GetPlayerNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetFunctionaryGames", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetFunctionaryGames(int functionaryID) {
            object[] results = this.Invoke("GetFunctionaryGames", new object[] {
                        functionaryID});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFunctionaryGames(int functionaryID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFunctionaryGames", new object[] {
                        functionaryID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndGetFunctionaryGames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFunctionaryGamesAsync(int functionaryID) {
            this.GetFunctionaryGamesAsync(functionaryID, null);
        }
        
        /// <remarks/>
        public void GetFunctionaryGamesAsync(int functionaryID, object userState) {
            if ((this.GetFunctionaryGamesOperationCompleted == null)) {
                this.GetFunctionaryGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFunctionaryGamesOperationCompleted);
            }
            this.InvokeAsync("GetFunctionaryGames", new object[] {
                        functionaryID}, this.GetFunctionaryGamesOperationCompleted, userState);
        }
        
        private void OnGetFunctionaryGamesOperationCompleted(object arg) {
            if ((this.GetFunctionaryGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFunctionaryGamesCompleted(this, new GetFunctionaryGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetFunctionaryGamesByDate", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public FunctionaryMatchData[] GetFunctionaryGamesByDate(int functionaryID, System.DateTime dtStart, System.DateTime dtEnd) {
            object[] results = this.Invoke("GetFunctionaryGamesByDate", new object[] {
                        functionaryID,
                        dtStart,
                        dtEnd});
            return ((FunctionaryMatchData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFunctionaryGamesByDate(int functionaryID, System.DateTime dtStart, System.DateTime dtEnd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFunctionaryGamesByDate", new object[] {
                        functionaryID,
                        dtStart,
                        dtEnd}, callback, asyncState);
        }
        
        /// <remarks/>
        public FunctionaryMatchData[] EndGetFunctionaryGamesByDate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FunctionaryMatchData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFunctionaryGamesByDateAsync(int functionaryID, System.DateTime dtStart, System.DateTime dtEnd) {
            this.GetFunctionaryGamesByDateAsync(functionaryID, dtStart, dtEnd, null);
        }
        
        /// <remarks/>
        public void GetFunctionaryGamesByDateAsync(int functionaryID, System.DateTime dtStart, System.DateTime dtEnd, object userState) {
            if ((this.GetFunctionaryGamesByDateOperationCompleted == null)) {
                this.GetFunctionaryGamesByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFunctionaryGamesByDateOperationCompleted);
            }
            this.InvokeAsync("GetFunctionaryGamesByDate", new object[] {
                        functionaryID,
                        dtStart,
                        dtEnd}, this.GetFunctionaryGamesByDateOperationCompleted, userState);
        }
        
        private void OnGetFunctionaryGamesByDateOperationCompleted(object arg) {
            if ((this.GetFunctionaryGamesByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFunctionaryGamesByDateCompleted(this, new GetFunctionaryGamesByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetSeasonData", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SeasonData[] GetSeasonData(int season) {
            object[] results = this.Invoke("GetSeasonData", new object[] {
                        season});
            return ((SeasonData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSeasonData(int season, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSeasonData", new object[] {
                        season}, callback, asyncState);
        }
        
        /// <remarks/>
        public SeasonData[] EndGetSeasonData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SeasonData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSeasonDataAsync(int season) {
            this.GetSeasonDataAsync(season, null);
        }
        
        /// <remarks/>
        public void GetSeasonDataAsync(int season, object userState) {
            if ((this.GetSeasonDataOperationCompleted == null)) {
                this.GetSeasonDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeasonDataOperationCompleted);
            }
            this.InvokeAsync("GetSeasonData", new object[] {
                        season}, this.GetSeasonDataOperationCompleted, userState);
        }
        
        private void OnGetSeasonDataOperationCompleted(object arg) {
            if ((this.GetSeasonDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeasonDataCompleted(this, new GetSeasonDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetRulesetRules", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RuleData[] GetRulesetRules(int rulesetID) {
            object[] results = this.Invoke("GetRulesetRules", new object[] {
                        rulesetID});
            return ((RuleData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRulesetRules(int rulesetID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRulesetRules", new object[] {
                        rulesetID}, callback, asyncState);
        }
        
        /// <remarks/>
        public RuleData[] EndGetRulesetRules(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RuleData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRulesetRulesAsync(int rulesetID) {
            this.GetRulesetRulesAsync(rulesetID, null);
        }
        
        /// <remarks/>
        public void GetRulesetRulesAsync(int rulesetID, object userState) {
            if ((this.GetRulesetRulesOperationCompleted == null)) {
                this.GetRulesetRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRulesetRulesOperationCompleted);
            }
            this.InvokeAsync("GetRulesetRules", new object[] {
                        rulesetID}, this.GetRulesetRulesOperationCompleted, userState);
        }
        
        private void OnGetRulesetRulesOperationCompleted(object arg) {
            if ((this.GetRulesetRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRulesetRulesCompleted(this, new GetRulesetRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetStudentsByName", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetStudentsByName(string firstName, string lastName) {
            object[] results = this.Invoke("GetStudentsByName", new object[] {
                        firstName,
                        lastName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStudentsByName(string firstName, string lastName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStudentsByName", new object[] {
                        firstName,
                        lastName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetStudentsByName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentsByNameAsync(string firstName, string lastName) {
            this.GetStudentsByNameAsync(firstName, lastName, null);
        }
        
        /// <remarks/>
        public void GetStudentsByNameAsync(string firstName, string lastName, object userState) {
            if ((this.GetStudentsByNameOperationCompleted == null)) {
                this.GetStudentsByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentsByNameOperationCompleted);
            }
            this.InvokeAsync("GetStudentsByName", new object[] {
                        firstName,
                        lastName}, this.GetStudentsByNameOperationCompleted, userState);
        }
        
        private void OnGetStudentsByNameOperationCompleted(object arg) {
            if ((this.GetStudentsByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentsByNameCompleted(this, new GetStudentsByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetStudentByNumber", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StudentData GetStudentByNumber(string id_number) {
            object[] results = this.Invoke("GetStudentByNumber", new object[] {
                        id_number});
            return ((StudentData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStudentByNumber(string id_number, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStudentByNumber", new object[] {
                        id_number}, callback, asyncState);
        }
        
        /// <remarks/>
        public StudentData EndGetStudentByNumber(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((StudentData)(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentByNumberAsync(string id_number) {
            this.GetStudentByNumberAsync(id_number, null);
        }
        
        /// <remarks/>
        public void GetStudentByNumberAsync(string id_number, object userState) {
            if ((this.GetStudentByNumberOperationCompleted == null)) {
                this.GetStudentByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentByNumberOperationCompleted);
            }
            this.InvokeAsync("GetStudentByNumber", new object[] {
                        id_number}, this.GetStudentByNumberOperationCompleted, userState);
        }
        
        private void OnGetStudentByNumberOperationCompleted(object arg) {
            if ((this.GetStudentByNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentByNumberCompleted(this, new GetStudentByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetSchoolData", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SchoolData GetSchoolData(int school_ID) {
            object[] results = this.Invoke("GetSchoolData", new object[] {
                        school_ID});
            return ((SchoolData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSchoolData(int school_ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSchoolData", new object[] {
                        school_ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public SchoolData EndGetSchoolData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SchoolData)(results[0]));
        }
        
        /// <remarks/>
        public void GetSchoolDataAsync(int school_ID) {
            this.GetSchoolDataAsync(school_ID, null);
        }
        
        /// <remarks/>
        public void GetSchoolDataAsync(int school_ID, object userState) {
            if ((this.GetSchoolDataOperationCompleted == null)) {
                this.GetSchoolDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchoolDataOperationCompleted);
            }
            this.InvokeAsync("GetSchoolData", new object[] {
                        school_ID}, this.GetSchoolDataOperationCompleted, userState);
        }
        
        private void OnGetSchoolDataOperationCompleted(object arg) {
            if ((this.GetSchoolDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchoolDataCompleted(this, new GetSchoolDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetRegionData", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RegionData GetRegionData(int region_id) {
            object[] results = this.Invoke("GetRegionData", new object[] {
                        region_id});
            return ((RegionData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRegionData(int region_id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRegionData", new object[] {
                        region_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public RegionData EndGetRegionData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RegionData)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegionDataAsync(int region_id) {
            this.GetRegionDataAsync(region_id, null);
        }
        
        /// <remarks/>
        public void GetRegionDataAsync(int region_id, object userState) {
            if ((this.GetRegionDataOperationCompleted == null)) {
                this.GetRegionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegionDataOperationCompleted);
            }
            this.InvokeAsync("GetRegionData", new object[] {
                        region_id}, this.GetRegionDataOperationCompleted, userState);
        }
        
        private void OnGetRegionDataOperationCompleted(object arg) {
            if ((this.GetRegionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegionDataCompleted(this, new GetRegionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetSimpleData", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SimpleData GetSimpleData(int ID, string table_name, string id_field, string name_field) {
            object[] results = this.Invoke("GetSimpleData", new object[] {
                        ID,
                        table_name,
                        id_field,
                        name_field});
            return ((SimpleData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSimpleData(int ID, string table_name, string id_field, string name_field, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSimpleData", new object[] {
                        ID,
                        table_name,
                        id_field,
                        name_field}, callback, asyncState);
        }
        
        /// <remarks/>
        public SimpleData EndGetSimpleData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SimpleData)(results[0]));
        }
        
        /// <remarks/>
        public void GetSimpleDataAsync(int ID, string table_name, string id_field, string name_field) {
            this.GetSimpleDataAsync(ID, table_name, id_field, name_field, null);
        }
        
        /// <remarks/>
        public void GetSimpleDataAsync(int ID, string table_name, string id_field, string name_field, object userState) {
            if ((this.GetSimpleDataOperationCompleted == null)) {
                this.GetSimpleDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSimpleDataOperationCompleted);
            }
            this.InvokeAsync("GetSimpleData", new object[] {
                        ID,
                        table_name,
                        id_field,
                        name_field}, this.GetSimpleDataOperationCompleted, userState);
        }
        
        private void OnGetSimpleDataOperationCompleted(object arg) {
            if ((this.GetSimpleDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSimpleDataCompleted(this, new GetSimpleDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/UpdateSchoolDetails", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSchoolDetails(int schoolID, string schoolManager, string schoolPhone, string schoolFax, string schoolEmail, string userName, string encryptedPassword) {
            object[] results = this.Invoke("UpdateSchoolDetails", new object[] {
                        schoolID,
                        schoolManager,
                        schoolPhone,
                        schoolFax,
                        schoolEmail,
                        userName,
                        encryptedPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSchoolDetails(int schoolID, string schoolManager, string schoolPhone, string schoolFax, string schoolEmail, string userName, string encryptedPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSchoolDetails", new object[] {
                        schoolID,
                        schoolManager,
                        schoolPhone,
                        schoolFax,
                        schoolEmail,
                        userName,
                        encryptedPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpdateSchoolDetails(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSchoolDetailsAsync(int schoolID, string schoolManager, string schoolPhone, string schoolFax, string schoolEmail, string userName, string encryptedPassword) {
            this.UpdateSchoolDetailsAsync(schoolID, schoolManager, schoolPhone, schoolFax, schoolEmail, userName, encryptedPassword, null);
        }
        
        /// <remarks/>
        public void UpdateSchoolDetailsAsync(int schoolID, string schoolManager, string schoolPhone, string schoolFax, string schoolEmail, string userName, string encryptedPassword, object userState) {
            if ((this.UpdateSchoolDetailsOperationCompleted == null)) {
                this.UpdateSchoolDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSchoolDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateSchoolDetails", new object[] {
                        schoolID,
                        schoolManager,
                        schoolPhone,
                        schoolFax,
                        schoolEmail,
                        userName,
                        encryptedPassword}, this.UpdateSchoolDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateSchoolDetailsOperationCompleted(object arg) {
            if ((this.UpdateSchoolDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSchoolDetailsCompleted(this, new UpdateSchoolDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetReceiptData", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ReceiptData[] GetReceiptData(int receiptID_start, int receiptID_end) {
            object[] results = this.Invoke("GetReceiptData", new object[] {
                        receiptID_start,
                        receiptID_end});
            return ((ReceiptData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReceiptData(int receiptID_start, int receiptID_end, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReceiptData", new object[] {
                        receiptID_start,
                        receiptID_end}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReceiptData[] EndGetReceiptData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ReceiptData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiptDataAsync(int receiptID_start, int receiptID_end) {
            this.GetReceiptDataAsync(receiptID_start, receiptID_end, null);
        }
        
        /// <remarks/>
        public void GetReceiptDataAsync(int receiptID_start, int receiptID_end, object userState) {
            if ((this.GetReceiptDataOperationCompleted == null)) {
                this.GetReceiptDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiptDataOperationCompleted);
            }
            this.InvokeAsync("GetReceiptData", new object[] {
                        receiptID_start,
                        receiptID_end}, this.GetReceiptDataOperationCompleted, userState);
        }
        
        private void OnGetReceiptDataOperationCompleted(object arg) {
            if ((this.GetReceiptDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiptDataCompleted(this, new GetReceiptDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetReceiptData_Basic", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ReceiptData_Basic[] GetReceiptData_Basic(int receiptID_start, int receiptID_end) {
            object[] results = this.Invoke("GetReceiptData_Basic", new object[] {
                        receiptID_start,
                        receiptID_end});
            return ((ReceiptData_Basic[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReceiptData_Basic(int receiptID_start, int receiptID_end, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReceiptData_Basic", new object[] {
                        receiptID_start,
                        receiptID_end}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReceiptData_Basic[] EndGetReceiptData_Basic(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ReceiptData_Basic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiptData_BasicAsync(int receiptID_start, int receiptID_end) {
            this.GetReceiptData_BasicAsync(receiptID_start, receiptID_end, null);
        }
        
        /// <remarks/>
        public void GetReceiptData_BasicAsync(int receiptID_start, int receiptID_end, object userState) {
            if ((this.GetReceiptData_BasicOperationCompleted == null)) {
                this.GetReceiptData_BasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiptData_BasicOperationCompleted);
            }
            this.InvokeAsync("GetReceiptData_Basic", new object[] {
                        receiptID_start,
                        receiptID_end}, this.GetReceiptData_BasicOperationCompleted, userState);
        }
        
        private void OnGetReceiptData_BasicOperationCompleted(object arg) {
            if ((this.GetReceiptData_BasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiptData_BasicCompleted(this, new GetReceiptData_BasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetWebsitePermanentChampionships", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebsitePermanentChampionship[] GetWebsitePermanentChampionships() {
            object[] results = this.Invoke("GetWebsitePermanentChampionships", new object[0]);
            return ((WebsitePermanentChampionship[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWebsitePermanentChampionships(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWebsitePermanentChampionships", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public WebsitePermanentChampionship[] EndGetWebsitePermanentChampionships(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((WebsitePermanentChampionship[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWebsitePermanentChampionshipsAsync() {
            this.GetWebsitePermanentChampionshipsAsync(null);
        }
        
        /// <remarks/>
        public void GetWebsitePermanentChampionshipsAsync(object userState) {
            if ((this.GetWebsitePermanentChampionshipsOperationCompleted == null)) {
                this.GetWebsitePermanentChampionshipsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebsitePermanentChampionshipsOperationCompleted);
            }
            this.InvokeAsync("GetWebsitePermanentChampionships", new object[0], this.GetWebsitePermanentChampionshipsOperationCompleted, userState);
        }
        
        private void OnGetWebsitePermanentChampionshipsOperationCompleted(object arg) {
            if ((this.GetWebsitePermanentChampionshipsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebsitePermanentChampionshipsCompleted(this, new GetWebsitePermanentChampionshipsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/AddWebsitePermanentChampionship", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddWebsitePermanentChampionship(WebsitePermanentChampionship championship) {
            object[] results = this.Invoke("AddWebsitePermanentChampionship", new object[] {
                        championship});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddWebsitePermanentChampionship(WebsitePermanentChampionship championship, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddWebsitePermanentChampionship", new object[] {
                        championship}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddWebsitePermanentChampionship(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddWebsitePermanentChampionshipAsync(WebsitePermanentChampionship championship) {
            this.AddWebsitePermanentChampionshipAsync(championship, null);
        }
        
        /// <remarks/>
        public void AddWebsitePermanentChampionshipAsync(WebsitePermanentChampionship championship, object userState) {
            if ((this.AddWebsitePermanentChampionshipOperationCompleted == null)) {
                this.AddWebsitePermanentChampionshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWebsitePermanentChampionshipOperationCompleted);
            }
            this.InvokeAsync("AddWebsitePermanentChampionship", new object[] {
                        championship}, this.AddWebsitePermanentChampionshipOperationCompleted, userState);
        }
        
        private void OnAddWebsitePermanentChampionshipOperationCompleted(object arg) {
            if ((this.AddWebsitePermanentChampionshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWebsitePermanentChampionshipCompleted(this, new AddWebsitePermanentChampionshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/UpdateWebsitePermanentChampionship", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateWebsitePermanentChampionship(WebsitePermanentChampionship championship) {
            object[] results = this.Invoke("UpdateWebsitePermanentChampionship", new object[] {
                        championship});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateWebsitePermanentChampionship(WebsitePermanentChampionship championship, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateWebsitePermanentChampionship", new object[] {
                        championship}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndUpdateWebsitePermanentChampionship(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWebsitePermanentChampionshipAsync(WebsitePermanentChampionship championship) {
            this.UpdateWebsitePermanentChampionshipAsync(championship, null);
        }
        
        /// <remarks/>
        public void UpdateWebsitePermanentChampionshipAsync(WebsitePermanentChampionship championship, object userState) {
            if ((this.UpdateWebsitePermanentChampionshipOperationCompleted == null)) {
                this.UpdateWebsitePermanentChampionshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWebsitePermanentChampionshipOperationCompleted);
            }
            this.InvokeAsync("UpdateWebsitePermanentChampionship", new object[] {
                        championship}, this.UpdateWebsitePermanentChampionshipOperationCompleted, userState);
        }
        
        private void OnUpdateWebsitePermanentChampionshipOperationCompleted(object arg) {
            if ((this.UpdateWebsitePermanentChampionshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWebsitePermanentChampionshipCompleted(this, new UpdateWebsitePermanentChampionshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/DeleteWebsitePermanentChampionship", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteWebsitePermanentChampionship(int championshipCategoryId) {
            object[] results = this.Invoke("DeleteWebsitePermanentChampionship", new object[] {
                        championshipCategoryId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteWebsitePermanentChampionship(int championshipCategoryId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteWebsitePermanentChampionship", new object[] {
                        championshipCategoryId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteWebsitePermanentChampionship(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWebsitePermanentChampionshipAsync(int championshipCategoryId) {
            this.DeleteWebsitePermanentChampionshipAsync(championshipCategoryId, null);
        }
        
        /// <remarks/>
        public void DeleteWebsitePermanentChampionshipAsync(int championshipCategoryId, object userState) {
            if ((this.DeleteWebsitePermanentChampionshipOperationCompleted == null)) {
                this.DeleteWebsitePermanentChampionshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWebsitePermanentChampionshipOperationCompleted);
            }
            this.InvokeAsync("DeleteWebsitePermanentChampionship", new object[] {
                        championshipCategoryId}, this.DeleteWebsitePermanentChampionshipOperationCompleted, userState);
        }
        
        private void OnDeleteWebsitePermanentChampionshipOperationCompleted(object arg) {
            if ((this.DeleteWebsitePermanentChampionshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWebsitePermanentChampionshipCompleted(this, new DeleteWebsitePermanentChampionshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetClubCategoriesBySeason", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetClubCategoriesBySeason(int school, int season) {
            object[] results = this.Invoke("GetClubCategoriesBySeason", new object[] {
                        school,
                        season});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetClubCategoriesBySeason(int school, int season, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetClubCategoriesBySeason", new object[] {
                        school,
                        season}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndGetClubCategoriesBySeason(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClubCategoriesBySeasonAsync(int school, int season) {
            this.GetClubCategoriesBySeasonAsync(school, season, null);
        }
        
        /// <remarks/>
        public void GetClubCategoriesBySeasonAsync(int school, int season, object userState) {
            if ((this.GetClubCategoriesBySeasonOperationCompleted == null)) {
                this.GetClubCategoriesBySeasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClubCategoriesBySeasonOperationCompleted);
            }
            this.InvokeAsync("GetClubCategoriesBySeason", new object[] {
                        school,
                        season}, this.GetClubCategoriesBySeasonOperationCompleted, userState);
        }
        
        private void OnGetClubCategoriesBySeasonOperationCompleted(object arg) {
            if ((this.GetClubCategoriesBySeasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClubCategoriesBySeasonCompleted(this, new GetClubCategoriesBySeasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/HasPassword", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasPassword(int userid) {
            object[] results = this.Invoke("HasPassword", new object[] {
                        userid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginHasPassword(int userid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("HasPassword", new object[] {
                        userid}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndHasPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasPasswordAsync(int userid) {
            this.HasPasswordAsync(userid, null);
        }
        
        /// <remarks/>
        public void HasPasswordAsync(int userid, object userState) {
            if ((this.HasPasswordOperationCompleted == null)) {
                this.HasPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasPasswordOperationCompleted);
            }
            this.InvokeAsync("HasPassword", new object[] {
                        userid}, this.HasPasswordOperationCompleted, userState);
        }
        
        private void OnHasPasswordOperationCompleted(object arg) {
            if ((this.HasPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasPasswordCompleted(this, new HasPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/UsersWithoutPassword", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] UsersWithoutPassword() {
            object[] results = this.Invoke("UsersWithoutPassword", new object[0]);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUsersWithoutPassword(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UsersWithoutPassword", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndUsersWithoutPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void UsersWithoutPasswordAsync() {
            this.UsersWithoutPasswordAsync(null);
        }
        
        /// <remarks/>
        public void UsersWithoutPasswordAsync(object userState) {
            if ((this.UsersWithoutPasswordOperationCompleted == null)) {
                this.UsersWithoutPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsersWithoutPasswordOperationCompleted);
            }
            this.InvokeAsync("UsersWithoutPassword", new object[0], this.UsersWithoutPasswordOperationCompleted, userState);
        }
        
        private void OnUsersWithoutPasswordOperationCompleted(object arg) {
            if ((this.UsersWithoutPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsersWithoutPasswordCompleted(this, new UsersWithoutPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/SetClientVersion", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetClientVersion(double clientVersion) {
            this.Invoke("SetClientVersion", new object[] {
                        clientVersion});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetClientVersion(double clientVersion, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetClientVersion", new object[] {
                        clientVersion}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetClientVersion(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetClientVersionAsync(double clientVersion) {
            this.SetClientVersionAsync(clientVersion, null);
        }
        
        /// <remarks/>
        public void SetClientVersionAsync(double clientVersion, object userState) {
            if ((this.SetClientVersionOperationCompleted == null)) {
                this.SetClientVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetClientVersionOperationCompleted);
            }
            this.InvokeAsync("SetClientVersion", new object[] {
                        clientVersion}, this.SetClientVersionOperationCompleted, userState);
        }
        
        private void OnSetClientVersionOperationCompleted(object arg) {
            if ((this.SetClientVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetClientVersionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetChampionshipCurrentPhase", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetChampionshipCurrentPhase(int champCategoryID) {
            object[] results = this.Invoke("GetChampionshipCurrentPhase", new object[] {
                        champCategoryID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetChampionshipCurrentPhase(int champCategoryID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetChampionshipCurrentPhase", new object[] {
                        champCategoryID}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetChampionshipCurrentPhase(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetChampionshipCurrentPhaseAsync(int champCategoryID) {
            this.GetChampionshipCurrentPhaseAsync(champCategoryID, null);
        }
        
        /// <remarks/>
        public void GetChampionshipCurrentPhaseAsync(int champCategoryID, object userState) {
            if ((this.GetChampionshipCurrentPhaseOperationCompleted == null)) {
                this.GetChampionshipCurrentPhaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChampionshipCurrentPhaseOperationCompleted);
            }
            this.InvokeAsync("GetChampionshipCurrentPhase", new object[] {
                        champCategoryID}, this.GetChampionshipCurrentPhaseOperationCompleted, userState);
        }
        
        private void OnGetChampionshipCurrentPhaseOperationCompleted(object arg) {
            if ((this.GetChampionshipCurrentPhaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChampionshipCurrentPhaseCompleted(this, new GetChampionshipCurrentPhaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.mir.co.il/DataService/GetLatestSeason", RequestNamespace="http://www.mir.co.il/DataService", ResponseNamespace="http://www.mir.co.il/DataService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLatestSeason() {
            object[] results = this.Invoke("GetLatestSeason", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestSeason(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestSeason", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetLatestSeason(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestSeasonAsync() {
            this.GetLatestSeasonAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestSeasonAsync(object userState) {
            if ((this.GetLatestSeasonOperationCompleted == null)) {
                this.GetLatestSeasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestSeasonOperationCompleted);
            }
            this.InvokeAsync("GetLatestSeason", new object[0], this.GetLatestSeasonOperationCompleted, userState);
        }
        
        private void OnGetLatestSeasonOperationCompleted(object arg) {
            if ((this.GetLatestSeasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestSeasonCompleted(this, new GetLatestSeasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class FilterField {
        
        private int fieldField;
        
        private object valueField;
        
        private bool notField;
        
        /// <remarks/>
        public int Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public bool Not {
            get {
                return this.notField;
            }
            set {
                this.notField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class WebsitePermanentChampionship {
        
        private int indexField;
        
        private int championshipCategoryIdField;
        
        private string titleField;
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public int ChampionshipCategoryId {
            get {
                return this.championshipCategoryIdField;
            }
            set {
                this.championshipCategoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class ReceiptData_Basic {
        
        private string idField;
        
        private string numberField;
        
        private string accountField;
        
        private string sumField;
        
        private string dateField;
        
        private string remarksField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string Sum {
            get {
                return this.sumField;
            }
            set {
                this.sumField = value;
            }
        }
        
        /// <remarks/>
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class ReceiptData {
        
        private int idField;
        
        private string numberField;
        
        private int accountField;
        
        private double sumField;
        
        private System.DateTime dateField;
        
        private string remarksField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public int Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public double Sum {
            get {
                return this.sumField;
            }
            set {
                this.sumField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class RuleData {
        
        private int ruleIDField;
        
        private RulesetData rulesetField;
        
        private SimpleData ruleTypeField;
        
        private string valueField;
        
        private SportFieldTypeData sportFieldTypeField;
        
        private SportFieldData sportFieldField;
        
        private int categoryField;
        
        /// <remarks/>
        public int RuleID {
            get {
                return this.ruleIDField;
            }
            set {
                this.ruleIDField = value;
            }
        }
        
        /// <remarks/>
        public RulesetData Ruleset {
            get {
                return this.rulesetField;
            }
            set {
                this.rulesetField = value;
            }
        }
        
        /// <remarks/>
        public SimpleData RuleType {
            get {
                return this.ruleTypeField;
            }
            set {
                this.ruleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public SportFieldTypeData SportFieldType {
            get {
                return this.sportFieldTypeField;
            }
            set {
                this.sportFieldTypeField = value;
            }
        }
        
        /// <remarks/>
        public SportFieldData SportField {
            get {
                return this.sportFieldField;
            }
            set {
                this.sportFieldField = value;
            }
        }
        
        /// <remarks/>
        public int Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class RulesetData {
        
        private int idField;
        
        private string nameField;
        
        private SportData sportField;
        
        private RegionData regionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public SportData Sport {
            get {
                return this.sportField;
            }
            set {
                this.sportField = value;
            }
        }
        
        /// <remarks/>
        public RegionData Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class SportData {
        
        private int idField;
        
        private string nameField;
        
        private int typeField;
        
        private RulesetData rulesetField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public RulesetData Ruleset {
            get {
                return this.rulesetField;
            }
            set {
                this.rulesetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class RegionData {
        
        private int idField;
        
        private string nameField;
        
        private string addressField;
        
        private string phoneField;
        
        private string faxField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class SimpleData {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class SportFieldTypeData {
        
        private int idField;
        
        private string nameField;
        
        private SportData sportField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public SportData Sport {
            get {
                return this.sportField;
            }
            set {
                this.sportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class SportFieldData {
        
        private int idField;
        
        private string nameField;
        
        private SportFieldTypeData sportFieldTypeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public SportFieldTypeData SportFieldType {
            get {
                return this.sportFieldTypeField;
            }
            set {
                this.sportFieldTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class SeasonData {
        
        private int seasonField;
        
        private string nameField;
        
        private int statusField;
        
        private System.DateTime startField;
        
        private System.DateTime endField;
        
        /// <remarks/>
        public int Season {
            get {
                return this.seasonField;
            }
            set {
                this.seasonField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime End {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class FunctionaryMatchData {
        
        private int functionaryIDField;
        
        private int championshipCategoryIDField;
        
        private int phaseField;
        
        private int groupField;
        
        private int roundField;
        
        private int cycleField;
        
        private int matchField;
        
        /// <remarks/>
        public int FunctionaryID {
            get {
                return this.functionaryIDField;
            }
            set {
                this.functionaryIDField = value;
            }
        }
        
        /// <remarks/>
        public int ChampionshipCategoryID {
            get {
                return this.championshipCategoryIDField;
            }
            set {
                this.championshipCategoryIDField = value;
            }
        }
        
        /// <remarks/>
        public int Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        public int Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public int Round {
            get {
                return this.roundField;
            }
            set {
                this.roundField = value;
            }
        }
        
        /// <remarks/>
        public int Cycle {
            get {
                return this.cycleField;
            }
            set {
                this.cycleField = value;
            }
        }
        
        /// <remarks/>
        public int Match {
            get {
                return this.matchField;
            }
            set {
                this.matchField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class TeamPlayerNumbers {
        
        private int teamIdField;
        
        private int[] playerNumbersField;
        
        /// <remarks/>
        public int TeamId {
            get {
                return this.teamIdField;
            }
            set {
                this.teamIdField = value;
            }
        }
        
        /// <remarks/>
        public int[] PlayerNumbers {
            get {
                return this.playerNumbersField;
            }
            set {
                this.playerNumbersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class SimplePlayerData {
        
        private int championshipIdField;
        
        private int teamIdField;
        
        private int playerIdField;
        
        private string playerNameField;
        
        private string idNumberField;
        
        private System.DateTime birthDateField;
        
        private bool isMaleField;
        
        private string teamNameField;
        
        private string cityNameField;
        
        /// <remarks/>
        public int ChampionshipId {
            get {
                return this.championshipIdField;
            }
            set {
                this.championshipIdField = value;
            }
        }
        
        /// <remarks/>
        public int TeamId {
            get {
                return this.teamIdField;
            }
            set {
                this.teamIdField = value;
            }
        }
        
        /// <remarks/>
        public int PlayerId {
            get {
                return this.playerIdField;
            }
            set {
                this.playerIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlayerName {
            get {
                return this.playerNameField;
            }
            set {
                this.playerNameField = value;
            }
        }
        
        /// <remarks/>
        public string IdNumber {
            get {
                return this.idNumberField;
            }
            set {
                this.idNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMale {
            get {
                return this.isMaleField;
            }
            set {
                this.isMaleField = value;
            }
        }
        
        /// <remarks/>
        public string TeamName {
            get {
                return this.teamNameField;
            }
            set {
                this.teamNameField = value;
            }
        }
        
        /// <remarks/>
        public string CityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class PlayerCardData {
        
        private int playerIdField;
        
        private int studentEntityIdField;
        
        private string studentIdNumberField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string schoolNameField;
        
        private string schoolSymbolField;
        
        private string sportNameField;
        
        private string birthdateField;
        
        private string gradeField;
        
        private byte[] rawPictureField;
        
        private bool isOverAgeField;
        
        private bool gotValidPictureField;
        
        /// <remarks/>
        public int PlayerId {
            get {
                return this.playerIdField;
            }
            set {
                this.playerIdField = value;
            }
        }
        
        /// <remarks/>
        public int StudentEntityId {
            get {
                return this.studentEntityIdField;
            }
            set {
                this.studentEntityIdField = value;
            }
        }
        
        /// <remarks/>
        public string StudentIdNumber {
            get {
                return this.studentIdNumberField;
            }
            set {
                this.studentIdNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string SchoolName {
            get {
                return this.schoolNameField;
            }
            set {
                this.schoolNameField = value;
            }
        }
        
        /// <remarks/>
        public string SchoolSymbol {
            get {
                return this.schoolSymbolField;
            }
            set {
                this.schoolSymbolField = value;
            }
        }
        
        /// <remarks/>
        public string SportName {
            get {
                return this.sportNameField;
            }
            set {
                this.sportNameField = value;
            }
        }
        
        /// <remarks/>
        public string Birthdate {
            get {
                return this.birthdateField;
            }
            set {
                this.birthdateField = value;
            }
        }
        
        /// <remarks/>
        public string Grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RawPicture {
            get {
                return this.rawPictureField;
            }
            set {
                this.rawPictureField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOverAge {
            get {
                return this.isOverAgeField;
            }
            set {
                this.isOverAgeField = value;
            }
        }
        
        /// <remarks/>
        public bool GotValidPicture {
            get {
                return this.gotValidPictureField;
            }
            set {
                this.gotValidPictureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class TeamData {
        
        private int idField;
        
        private SchoolData schoolField;
        
        private ChampionshipData championshipField;
        
        private CategoryData championshipCategoryField;
        
        private int statusField;
        
        private int teamIndexField;
        
        private string supervisorField;
        
        private System.DateTime registrationDateField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public SchoolData School {
            get {
                return this.schoolField;
            }
            set {
                this.schoolField = value;
            }
        }
        
        /// <remarks/>
        public ChampionshipData Championship {
            get {
                return this.championshipField;
            }
            set {
                this.championshipField = value;
            }
        }
        
        /// <remarks/>
        public CategoryData ChampionshipCategory {
            get {
                return this.championshipCategoryField;
            }
            set {
                this.championshipCategoryField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int TeamIndex {
            get {
                return this.teamIndexField;
            }
            set {
                this.teamIndexField = value;
            }
        }
        
        /// <remarks/>
        public string Supervisor {
            get {
                return this.supervisorField;
            }
            set {
                this.supervisorField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RegistrationDate {
            get {
                return this.registrationDateField;
            }
            set {
                this.registrationDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class SchoolData {
        
        private int idField;
        
        private string nameField;
        
        private string symbolField;
        
        private string cityField;
        
        private int fromGradeField;
        
        private int toGradeField;
        
        private RegionData regionField;
        
        private bool isClubField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public int FromGrade {
            get {
                return this.fromGradeField;
            }
            set {
                this.fromGradeField = value;
            }
        }
        
        /// <remarks/>
        public int ToGrade {
            get {
                return this.toGradeField;
            }
            set {
                this.toGradeField = value;
            }
        }
        
        /// <remarks/>
        public RegionData Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsClub {
            get {
                return this.isClubField;
            }
            set {
                this.isClubField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class ChampionshipData {
        
        private int idField;
        
        private int seasonField;
        
        private string nameField;
        
        private RegionData regionField;
        
        private SportData sportField;
        
        private bool isClubsField;
        
        private System.DateTime lastRegistrationDateField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private System.DateTime altStartDateField;
        
        private System.DateTime altEndDateField;
        
        private System.DateTime finalsDateField;
        
        private System.DateTime altFinalsDateField;
        
        private RulesetData rulesetField;
        
        private bool isOpenField;
        
        private int statusField;
        
        private string supervisorField;
        
        private SimpleData standardChampionshipField;
        
        private CategoryData[] categoriesField;
        
        private string gameStructureRuleField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Season {
            get {
                return this.seasonField;
            }
            set {
                this.seasonField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public RegionData Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public SportData Sport {
            get {
                return this.sportField;
            }
            set {
                this.sportField = value;
            }
        }
        
        /// <remarks/>
        public bool IsClubs {
            get {
                return this.isClubsField;
            }
            set {
                this.isClubsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastRegistrationDate {
            get {
                return this.lastRegistrationDateField;
            }
            set {
                this.lastRegistrationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AltStartDate {
            get {
                return this.altStartDateField;
            }
            set {
                this.altStartDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AltEndDate {
            get {
                return this.altEndDateField;
            }
            set {
                this.altEndDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FinalsDate {
            get {
                return this.finalsDateField;
            }
            set {
                this.finalsDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AltFinalsDate {
            get {
                return this.altFinalsDateField;
            }
            set {
                this.altFinalsDateField = value;
            }
        }
        
        /// <remarks/>
        public RulesetData Ruleset {
            get {
                return this.rulesetField;
            }
            set {
                this.rulesetField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOpen {
            get {
                return this.isOpenField;
            }
            set {
                this.isOpenField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Supervisor {
            get {
                return this.supervisorField;
            }
            set {
                this.supervisorField = value;
            }
        }
        
        /// <remarks/>
        public SimpleData StandardChampionship {
            get {
                return this.standardChampionshipField;
            }
            set {
                this.standardChampionshipField = value;
            }
        }
        
        /// <remarks/>
        public CategoryData[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        public string GameStructureRule {
            get {
                return this.gameStructureRuleField;
            }
            set {
                this.gameStructureRuleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class CategoryData {
        
        private int idField;
        
        private int championshipField;
        
        private int categoryField;
        
        private PhaseData[] phasesField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Championship {
            get {
                return this.championshipField;
            }
            set {
                this.championshipField = value;
            }
        }
        
        /// <remarks/>
        public int Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public PhaseData[] Phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class PhaseData {
        
        private int categoryIDField;
        
        private int phaseIndexField;
        
        private string phaseNameField;
        
        private int statusField;
        
        private GroupData[] groupsField;
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public int PhaseIndex {
            get {
                return this.phaseIndexField;
            }
            set {
                this.phaseIndexField = value;
            }
        }
        
        /// <remarks/>
        public string PhaseName {
            get {
                return this.phaseNameField;
            }
            set {
                this.phaseNameField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public GroupData[] Groups {
            get {
                return this.groupsField;
            }
            set {
                this.groupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class GroupData {
        
        private PhaseData phaseField;
        
        private int groupIndexField;
        
        private string groupNameField;
        
        private int statusField;
        
        private RoundData[] roundsField;
        
        private CompetitionData[] competitionsField;
        
        /// <remarks/>
        public PhaseData Phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        public int GroupIndex {
            get {
                return this.groupIndexField;
            }
            set {
                this.groupIndexField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public RoundData[] Rounds {
            get {
                return this.roundsField;
            }
            set {
                this.roundsField = value;
            }
        }
        
        /// <remarks/>
        public CompetitionData[] Competitions {
            get {
                return this.competitionsField;
            }
            set {
                this.competitionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class RoundData {
        
        private GroupData groupField;
        
        private int roundIndexField;
        
        private string roundNameField;
        
        private int statusField;
        
        private MatchData[] matchesField;
        
        /// <remarks/>
        public GroupData Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public int RoundIndex {
            get {
                return this.roundIndexField;
            }
            set {
                this.roundIndexField = value;
            }
        }
        
        /// <remarks/>
        public string RoundName {
            get {
                return this.roundNameField;
            }
            set {
                this.roundNameField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public MatchData[] Matches {
            get {
                return this.matchesField;
            }
            set {
                this.matchesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class MatchData {
        
        private ChampionshipData championshipField;
        
        private RoundData roundField;
        
        private int cycleField;
        
        private int matchIndexField;
        
        private TeamData teamAField;
        
        private TeamData teamBField;
        
        private System.DateTime timeField;
        
        private FacilityData facilityField;
        
        private CourtData courtField;
        
        private double teamA_ScoreField;
        
        private double teamB_ScoreField;
        
        private int resultField;
        
        private string partsResultField;
        
        private int categoryIDField;
        
        private int phaseIndexField;
        
        private int groupIndexField;
        
        private string supervisorField;
        
        private string refereeField;
        
        /// <remarks/>
        public ChampionshipData Championship {
            get {
                return this.championshipField;
            }
            set {
                this.championshipField = value;
            }
        }
        
        /// <remarks/>
        public RoundData Round {
            get {
                return this.roundField;
            }
            set {
                this.roundField = value;
            }
        }
        
        /// <remarks/>
        public int Cycle {
            get {
                return this.cycleField;
            }
            set {
                this.cycleField = value;
            }
        }
        
        /// <remarks/>
        public int MatchIndex {
            get {
                return this.matchIndexField;
            }
            set {
                this.matchIndexField = value;
            }
        }
        
        /// <remarks/>
        public TeamData TeamA {
            get {
                return this.teamAField;
            }
            set {
                this.teamAField = value;
            }
        }
        
        /// <remarks/>
        public TeamData TeamB {
            get {
                return this.teamBField;
            }
            set {
                this.teamBField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public FacilityData Facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public CourtData Court {
            get {
                return this.courtField;
            }
            set {
                this.courtField = value;
            }
        }
        
        /// <remarks/>
        public double TeamA_Score {
            get {
                return this.teamA_ScoreField;
            }
            set {
                this.teamA_ScoreField = value;
            }
        }
        
        /// <remarks/>
        public double TeamB_Score {
            get {
                return this.teamB_ScoreField;
            }
            set {
                this.teamB_ScoreField = value;
            }
        }
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string PartsResult {
            get {
                return this.partsResultField;
            }
            set {
                this.partsResultField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public int PhaseIndex {
            get {
                return this.phaseIndexField;
            }
            set {
                this.phaseIndexField = value;
            }
        }
        
        /// <remarks/>
        public int GroupIndex {
            get {
                return this.groupIndexField;
            }
            set {
                this.groupIndexField = value;
            }
        }
        
        /// <remarks/>
        public string Supervisor {
            get {
                return this.supervisorField;
            }
            set {
                this.supervisorField = value;
            }
        }
        
        /// <remarks/>
        public string Referee {
            get {
                return this.refereeField;
            }
            set {
                this.refereeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class FacilityData {
        
        private int idField;
        
        private string nameField;
        
        private RegionData regionField;
        
        private SchoolData schoolField;
        
        private string addressField;
        
        private string phoneField;
        
        private string faxField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public RegionData Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public SchoolData School {
            get {
                return this.schoolField;
            }
            set {
                this.schoolField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class CourtData {
        
        private int idField;
        
        private string nameField;
        
        private FacilityData facilityField;
        
        private SimpleData courtTypeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public FacilityData Facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public SimpleData CourtType {
            get {
                return this.courtTypeField;
            }
            set {
                this.courtTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class CompetitionData {
        
        private GroupData groupField;
        
        private int competitionIndexField;
        
        private SportFieldData sportFieldField;
        
        private System.DateTime timeField;
        
        private FacilityData facilityField;
        
        private CourtData courtField;
        
        private HeatData[] heatsField;
        
        private CompetitorData[] competitorsField;
        
        private int categoryIDField;
        
        private int phaseIndexField;
        
        private int groupIndexField;
        
        /// <remarks/>
        public GroupData Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public int CompetitionIndex {
            get {
                return this.competitionIndexField;
            }
            set {
                this.competitionIndexField = value;
            }
        }
        
        /// <remarks/>
        public SportFieldData SportField {
            get {
                return this.sportFieldField;
            }
            set {
                this.sportFieldField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public FacilityData Facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public CourtData Court {
            get {
                return this.courtField;
            }
            set {
                this.courtField = value;
            }
        }
        
        /// <remarks/>
        public HeatData[] Heats {
            get {
                return this.heatsField;
            }
            set {
                this.heatsField = value;
            }
        }
        
        /// <remarks/>
        public CompetitorData[] Competitors {
            get {
                return this.competitorsField;
            }
            set {
                this.competitorsField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public int PhaseIndex {
            get {
                return this.phaseIndexField;
            }
            set {
                this.phaseIndexField = value;
            }
        }
        
        /// <remarks/>
        public int GroupIndex {
            get {
                return this.groupIndexField;
            }
            set {
                this.groupIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class HeatData {
        
        private CompetitionData competitionField;
        
        private int heatIndexField;
        
        private System.DateTime timeField;
        
        private FacilityData facilityField;
        
        private CourtData courtField;
        
        private int categoryIDField;
        
        /// <remarks/>
        public CompetitionData Competition {
            get {
                return this.competitionField;
            }
            set {
                this.competitionField = value;
            }
        }
        
        /// <remarks/>
        public int HeatIndex {
            get {
                return this.heatIndexField;
            }
            set {
                this.heatIndexField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public FacilityData Facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public CourtData Court {
            get {
                return this.courtField;
            }
            set {
                this.courtField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class CompetitorData {
        
        private CompetitionData competitionField;
        
        private int competitorIndexField;
        
        private PlayerData playerField;
        
        private HeatData heatField;
        
        private int positionField;
        
        private int resultPositionField;
        
        private string resultField;
        
        private int scoreField;
        
        private string ruleField;
        
        private string measureTypeField;
        
        /// <remarks/>
        public CompetitionData Competition {
            get {
                return this.competitionField;
            }
            set {
                this.competitionField = value;
            }
        }
        
        /// <remarks/>
        public int CompetitorIndex {
            get {
                return this.competitorIndexField;
            }
            set {
                this.competitorIndexField = value;
            }
        }
        
        /// <remarks/>
        public PlayerData Player {
            get {
                return this.playerField;
            }
            set {
                this.playerField = value;
            }
        }
        
        /// <remarks/>
        public HeatData Heat {
            get {
                return this.heatField;
            }
            set {
                this.heatField = value;
            }
        }
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public int ResultPosition {
            get {
                return this.resultPositionField;
            }
            set {
                this.resultPositionField = value;
            }
        }
        
        /// <remarks/>
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        public string Rule {
            get {
                return this.ruleField;
            }
            set {
                this.ruleField = value;
            }
        }
        
        /// <remarks/>
        public string MeasureType {
            get {
                return this.measureTypeField;
            }
            set {
                this.measureTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class PlayerData {
        
        private int idField;
        
        private StudentData studentField;
        
        private TeamData teamField;
        
        private int shirtNumberField;
        
        private int chipNumberField;
        
        private int statusField;
        
        private string remarksField;
        
        private System.DateTime registrationDateField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public StudentData Student {
            get {
                return this.studentField;
            }
            set {
                this.studentField = value;
            }
        }
        
        /// <remarks/>
        public TeamData Team {
            get {
                return this.teamField;
            }
            set {
                this.teamField = value;
            }
        }
        
        /// <remarks/>
        public int ShirtNumber {
            get {
                return this.shirtNumberField;
            }
            set {
                this.shirtNumberField = value;
            }
        }
        
        /// <remarks/>
        public int ChipNumber {
            get {
                return this.chipNumberField;
            }
            set {
                this.chipNumberField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RegistrationDate {
            get {
                return this.registrationDateField;
            }
            set {
                this.registrationDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class StudentData {
        
        private int idField;
        
        private string nameField;
        
        private string idNumberField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private System.DateTime birthdateField;
        
        private SchoolData schoolField;
        
        private int gradeField;
        
        private int sexTypeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string IdNumber {
            get {
                return this.idNumberField;
            }
            set {
                this.idNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Birthdate {
            get {
                return this.birthdateField;
            }
            set {
                this.birthdateField = value;
            }
        }
        
        /// <remarks/>
        public SchoolData School {
            get {
                return this.schoolField;
            }
            set {
                this.schoolField = value;
            }
        }
        
        /// <remarks/>
        public int Grade {
            get {
                return this.gradeField;
            }
            set {
                this.gradeField = value;
            }
        }
        
        /// <remarks/>
        public int SexType {
            get {
                return this.sexTypeField;
            }
            set {
                this.sexTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class Heat {
        
        private System.DateTime timeField;
        
        private int facilityField;
        
        private int courtField;
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public int Facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public int Court {
            get {
                return this.courtField;
            }
            set {
                this.courtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class Competitor {
        
        private int playerNumberField;
        
        private int heatField;
        
        private int positionField;
        
        private int resultPositionField;
        
        private int resultField;
        
        private int scoreField;
        
        private int customPositionField;
        
        /// <remarks/>
        public int PlayerNumber {
            get {
                return this.playerNumberField;
            }
            set {
                this.playerNumberField = value;
            }
        }
        
        /// <remarks/>
        public int Heat {
            get {
                return this.heatField;
            }
            set {
                this.heatField = value;
            }
        }
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public int ResultPosition {
            get {
                return this.resultPositionField;
            }
            set {
                this.resultPositionField = value;
            }
        }
        
        /// <remarks/>
        public int Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        public int CustomPosition {
            get {
                return this.customPositionField;
            }
            set {
                this.customPositionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class Competition {
        
        private int sportFieldField;
        
        private System.DateTime timeField;
        
        private int facilityField;
        
        private int courtField;
        
        private Competitor[] competitorsField;
        
        private Heat[] heatsField;
        
        private int championshipCategoryField;
        
        private int laneCountField;
        
        /// <remarks/>
        public int SportField {
            get {
                return this.sportFieldField;
            }
            set {
                this.sportFieldField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public int Facility {
            get {
                return this.facilityField;
            }
            set {
                this.facilityField = value;
            }
        }
        
        /// <remarks/>
        public int Court {
            get {
                return this.courtField;
            }
            set {
                this.courtField = value;
            }
        }
        
        /// <remarks/>
        public Competitor[] Competitors {
            get {
                return this.competitorsField;
            }
            set {
                this.competitorsField = value;
            }
        }
        
        /// <remarks/>
        public Heat[] Heats {
            get {
                return this.heatsField;
            }
            set {
                this.heatsField = value;
            }
        }
        
        /// <remarks/>
        public int championshipCategory {
            get {
                return this.championshipCategoryField;
            }
            set {
                this.championshipCategoryField = value;
            }
        }
        
        /// <remarks/>
        public int LaneCount {
            get {
                return this.laneCountField;
            }
            set {
                this.laneCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.mir.co.il/DataService")]
    public partial class Entity {
        
        private object[] fieldsField;
        
        /// <remarks/>
        public object[] Fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEntitiesCompletedEventHandler(object sender, GetEntitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Entity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Entity[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public decimal timestamp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int[] deleted {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void MarkMessageReadCompletedEventHandler(object sender, MarkMessageReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkMessageReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MarkMessageReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void InsertEntityCompletedEventHandler(object sender, InsertEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public object[] values {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateEntityCompletedEventHandler(object sender, UpdateEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DeleteEntityCompletedEventHandler(object sender, DeleteEntityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SetTeacherCourseProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTeacherCourseProductCompletedEventHandler(object sender, GetTeacherCourseProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeacherCourseProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeacherCourseProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SetTeacherCourseSportsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTeacherCourseSportsCompletedEventHandler(object sender, GetTeacherCourseSportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeacherCourseSportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeacherCourseSportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetEntityTypeClassCompletedEventHandler(object sender, GetEntityTypeClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntityTypeClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntityTypeClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LookupEntityFilterCompletedEventHandler(object sender, LookupEntityFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LookupEntityFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LookupEntityFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilterField[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilterField[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRegionCompletedEventHandler(object sender, GetRegionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRegionsDataCompletedEventHandler(object sender, GetRegionsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegionsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegionsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSportsDataCompletedEventHandler(object sender, GetSportsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSportsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSportsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSportFieldsHavingPlayersCompletedEventHandler(object sender, GetSportFieldsHavingPlayersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSportFieldsHavingPlayersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSportFieldsHavingPlayersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSportFieldCompetitionsCompletedEventHandler(object sender, GetSportFieldCompetitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSportFieldCompetitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSportFieldCompetitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Competition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Competition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCourtCompetitionsCompletedEventHandler(object sender, GetCourtCompetitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCourtCompetitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCourtCompetitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Competition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Competition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetFacilityCompetitionsCompletedEventHandler(object sender, GetFacilityCompetitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFacilityCompetitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFacilityCompetitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Competition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Competition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRawMatchesByDateCompletedEventHandler(object sender, GetRawMatchesByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawMatchesByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRawMatchesByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MatchData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MatchData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMatchesByDateCompletedEventHandler(object sender, GetMatchesByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMatchesByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMatchesByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MatchData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MatchData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMatchesByFacilityCompletedEventHandler(object sender, GetMatchesByFacilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMatchesByFacilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMatchesByFacilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MatchData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MatchData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMatchesByCourtCompletedEventHandler(object sender, GetMatchesByCourtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMatchesByCourtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMatchesByCourtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MatchData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MatchData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMatchesByTeamCompletedEventHandler(object sender, GetMatchesByTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMatchesByTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMatchesByTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MatchData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MatchData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCompetitionsByDateCompletedEventHandler(object sender, GetCompetitionsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompetitionsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompetitionsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompetitionData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompetitionData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRawCompetitionsByDateCompletedEventHandler(object sender, GetRawCompetitionsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawCompetitionsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRawCompetitionsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompetitionData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompetitionData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetContainingChampionshipsCompletedEventHandler(object sender, GetContainingChampionshipsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContainingChampionshipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContainingChampionshipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetChampionshipDataCompletedEventHandler(object sender, GetChampionshipDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChampionshipDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChampionshipDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChampionshipData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChampionshipData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetChampionshipsDataCompletedEventHandler(object sender, GetChampionshipsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChampionshipsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChampionshipsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetChampionshipsBySeasonCompletedEventHandler(object sender, GetChampionshipsBySeasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChampionshipsBySeasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChampionshipsBySeasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPlayerCardFullDataCompletedEventHandler(object sender, GetPlayerCardFullDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlayerCardFullDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlayerCardFullDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PlayerCardData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PlayerCardData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPlayersCountBySeasonCompletedEventHandler(object sender, GetPlayersCountBySeasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlayersCountBySeasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlayersCountBySeasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTeamsByChampionshipCategoryCompletedEventHandler(object sender, GetTeamsByChampionshipCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeamsByChampionshipCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeamsByChampionshipCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetChampionshipCategoriesCompletedEventHandler(object sender, GetChampionshipCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChampionshipCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChampionshipCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategoryData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategoryData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetChampionshipCategoriesBySeasonCompletedEventHandler(object sender, GetChampionshipCategoriesBySeasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChampionshipCategoriesBySeasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChampionshipCategoriesBySeasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetUserNameCompletedEventHandler(object sender, GetUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSimplePlayerDataCompletedEventHandler(object sender, GetSimplePlayerDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSimplePlayerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSimplePlayerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimplePlayerData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimplePlayerData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPlayerNumbersCompletedEventHandler(object sender, GetPlayerNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlayerNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlayerNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TeamPlayerNumbers[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TeamPlayerNumbers[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetFunctionaryGamesCompletedEventHandler(object sender, GetFunctionaryGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFunctionaryGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFunctionaryGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetFunctionaryGamesByDateCompletedEventHandler(object sender, GetFunctionaryGamesByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFunctionaryGamesByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFunctionaryGamesByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FunctionaryMatchData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FunctionaryMatchData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSeasonDataCompletedEventHandler(object sender, GetSeasonDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeasonDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeasonDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SeasonData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SeasonData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRulesetRulesCompletedEventHandler(object sender, GetRulesetRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRulesetRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRulesetRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RuleData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RuleData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetStudentsByNameCompletedEventHandler(object sender, GetStudentsByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentsByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentsByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetStudentByNumberCompletedEventHandler(object sender, GetStudentByNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentByNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentByNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StudentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StudentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSchoolDataCompletedEventHandler(object sender, GetSchoolDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchoolDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchoolDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SchoolData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SchoolData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRegionDataCompletedEventHandler(object sender, GetRegionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegionData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegionData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetSimpleDataCompletedEventHandler(object sender, GetSimpleDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSimpleDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSimpleDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SimpleData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SimpleData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateSchoolDetailsCompletedEventHandler(object sender, UpdateSchoolDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSchoolDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSchoolDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetReceiptDataCompletedEventHandler(object sender, GetReceiptDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiptDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiptDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReceiptData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReceiptData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetReceiptData_BasicCompletedEventHandler(object sender, GetReceiptData_BasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiptData_BasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiptData_BasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReceiptData_Basic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReceiptData_Basic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetWebsitePermanentChampionshipsCompletedEventHandler(object sender, GetWebsitePermanentChampionshipsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebsitePermanentChampionshipsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebsitePermanentChampionshipsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebsitePermanentChampionship[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebsitePermanentChampionship[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AddWebsitePermanentChampionshipCompletedEventHandler(object sender, AddWebsitePermanentChampionshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWebsitePermanentChampionshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWebsitePermanentChampionshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UpdateWebsitePermanentChampionshipCompletedEventHandler(object sender, UpdateWebsitePermanentChampionshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWebsitePermanentChampionshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWebsitePermanentChampionshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DeleteWebsitePermanentChampionshipCompletedEventHandler(object sender, DeleteWebsitePermanentChampionshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWebsitePermanentChampionshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWebsitePermanentChampionshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetClubCategoriesBySeasonCompletedEventHandler(object sender, GetClubCategoriesBySeasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClubCategoriesBySeasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClubCategoriesBySeasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void HasPasswordCompletedEventHandler(object sender, HasPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void UsersWithoutPasswordCompletedEventHandler(object sender, UsersWithoutPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UsersWithoutPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UsersWithoutPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SetClientVersionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetChampionshipCurrentPhaseCompletedEventHandler(object sender, GetChampionshipCurrentPhaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChampionshipCurrentPhaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChampionshipCurrentPhaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetLatestSeasonCompletedEventHandler(object sender, GetLatestSeasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestSeasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestSeasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591